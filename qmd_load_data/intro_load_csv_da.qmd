---
title: "Indlæs data fra en CSV fil"
description: |
  Hvordan læse data ind i R fra en _Comma Separated Values_ fil.
author:
  - name: Søren O'Neill
    url: www.oneill.dk
date: "2023-11-26"
#output:
#  distill::distill_article:
#    self_contained: false
#collections:
#  posts:
#    disqus: reproducible-finance-with-r
categories:
  - RStudio
  - Input
creative_commons: CC BY
format: html
editor: source
number-sections: true
---

## Hvad er en CSV fil?

* CSV er en forkortelse for '_Comma Separated Values_'.
* Det er et format til at lagre data i en simpel tekst til.
* CSV filer arver derfor alle fordelene ved at arbejde med simple tekst filer.
* Omvendt, er CSV filer begrænsede i kompleksiteten af de data der kan lagres i den: kun simple tabel data.
* Læs mere om CSV filer her [wiki](https://en.wikipedia.org/wiki/Comma-separated_values). 

## Et eksempel

Et eksempel på en CSV fil kan se sådan her ud:

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: false
id,test,value,group,note
1,1,12,"A",""
1,2,14,"B",""
2,1,15,"C","My note"
2,2,13,"A",""
```

::: {.callout-tip collapse="true" title="Overvej! Hvad ved vi om data ud fra CSV filen alene ... og hvad ved vi ikke?"}
Udfra den rå tekst fil i CSV filen kan vi udlede, at data består af 5 varibaler og 4 observationer, adskilt af '**,**'. Vi kan gætte på betydningen af variablerne ud fra deres navne i linje 1, men vi kan ikke vide det. **Bemærk** også, at en CSV fil ikke nødvendigvis indeholder en titel linje.

Spørg nu dig selve: 

* Hvad er data typen for hver variabel` (heltal, nummerisk, faktor/kategorisk, etc)? 
* Hvad er de tilladelige eller valide værdier hver variabel kan antage?
* Hvad sker der hvis der mangler en værdi?

...den slags meta-data lagres ikke umiddelbart i en CSV fil og vi skal selv holde styr på det: Det er derfor en god ide at vedligholde en data-definition sammen med selve CSV filen, hvori data strukturen beskrives i nærmere detalje.
:::

### Er er komma det bedste valg til at adskille data?

Faktisk er det lidt et problem, da komma-tal skrives som _0.25_ på nogle sprog  og som _0,25_ på andre -- der er altså en risiko for at decimal-kommaet bliver fejltolket som et data-adskillelses-komma, og vice versa. Det er derfor ikke ualmindeligt at bruge et semi-kolon i stedet.

## Tidyverse løsning

* Tidyverse inkluderer pakken [readr](https://readr.tidyverse.org/) som indeholder et antal funktioner til at indlæse CSV filer.
* Funktionen `read_delim()` er en generisk funktion som læser data i tabel format, adskilt af et hvilken som helst tegn der specificeres i funktions kaldet.
* Funktionerne `read_csv()`, `read_tsv()` og `read_csv2()` er bare særlige tilfælde af `read_delim()` (som forventer komma, tabulator og semi-kolon som adskillelses tegn).

::: {.callout-tip collapse="true" title="Hvis du har brug for et base-R alternativ.."}
Base R inkludrer funktionen `read.table()` som har et antal særlige tilfælde, inklusiv `read.csv()` der også tjener til at indlæse tabel data fra en CSV fil. **Bemærk** brugen af et punktum i funktions navnet frem for '_underscore_'.
:::

## RTFM -- Read the fine manual

Til en start, læs vejledningen om `read_delim()` funktionen i R's hjælpe funktion: [help function](https://www.r-project.org/help.html). 

## Prøv det selv

Ideelt set, skal du bruge din egen CSV fil til disse øvelser.

Alternativt, kan du brge den [CSV fil](./example_csv_file.csv).

* Inspicér data med `my_data` og `str(my_data)`.

::: {.callout-tip collapse="true" title="Kode eksempel.."}

```{r}
#| eval: false
#| echo: true
library(readr)
my_data <- read_csv(here("path_to_file", "fil.csv"))
my_data
str(my_data)
```
:::


## Øvelser

* Hvad sker der hvis du bruger henholdsvis `read_csv()` og `read_csv2()` uden at angive et  '_delimiter_' tegn?
* Hvad sker der hvis du sætter parameteren `col_names = FALSE`?
* Hvad sker der hvis du sætter parameteren `na = "NA"`?
* Kig på din data struktur med funktionen `str()`: Er alle variabler af den type du havde forventet?
    - Hvordan kunne du bruge parameteren `col_types` til at specificere data typerne?

<script src="https://giscus.app/client.js"
        data-repo="sorenoneill/r4phd"
        data-repo-id="R_kgDOJ9etDQ"
        data-category="Announcements"
        data-category-id="DIC_kwDOJ9etDc4CYApF"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="0"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="cobalt"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>