---
title: "Workflow"
author:
  - name: Søren O'Neill
    url: www.oneill.dk
date: '`r Sys.Date()`'
output:
  distill::distill_article:
    self_contained: false
#collections:
#  posts:
#    disqus: reproducible-finance-with-r
#categories:
#  - Installation
creative_commons: CC BY
format: 
  html:
    code-line-numbers: true
editor: source
---

```{r include=FALSE}
library(DiagrammeR)
```

# Workflow and documentation in RR

## Automation

The **entire process** from raw data to output should be:

- scripted
- reproducible
- reversible.

:::{.callout-note collapse=false}
## Exercise #1

Look at this code, and when you understand what it does, consider the following: Why add a line of code to filter away the user with id "2321369-1212" which will be repeated every time the script is run? Why not just delete that used from the csv file, once-and-for-all?

```r
data <- read.csv("my_data_file.csv")
# excluded as participant entered an invalid CPR number
data <- data %>% filter(id != "2321369-1212")
```
:::

:::{.callout-note collapse=true}
## Exercise #1 Solution

Deleting the observation in the raw data file would break _reprodicibility_ by violating all three points above. The deletion would no be scripted, you would not be able to reproduce the process whereby you deleted the observation and importantly, it would be irreversible.

At some later point, when you have forgotten the details, you (or someone else) will re-visit the data, and find that you exported n=123 observations from the database to a csv file, but in your publication, n is reported as 122. No one knows what happened to the missing observation. No one remembers that it was deleted, or why? 

Those two simple lines in you R script means you can document what happened and why (the comment).

:::

![](gfx/RR/data-science-explore.png)


This is a goog place to read more about [best practices for importing into R](http://www.sthda.com/english/wiki/best-practices-in-preparing-data-files-for-importing-into-r)

# Structuring workflow

:::{.callout-note collapse=false}
# Exercise #2

## Example project

* Download [this zip file](scrips/RR_example.zip) which contains an R project
* Unzip the file in an appropriate folder
* Create a new R-project in that existing folder

## Examine the project files

For now don't change anything and don't get bogged down in all the details of the code in each file ... just get an overview, see if you can understand the code and how it ties together.

This exercise is best done in pairs.

* What is the project all about?
* What do the individual files do?
* How are the files related to each other?

:::

## Overview of the project

Let's try to:

* Knit a manuscript to html or work or pdf

# Working with the manuscript

## A simple problem

* The data for participant with ID=7 was corrupted (equipment failure)
    - What to do?
    - How to do it?
    
## Another simple problem

The manuscript you are submitting to have some specific requirements:

* Tables should be included in text close to first reference
* Figure should be included in a section 'Figures' (just before References) and a placeholder **\<\<FIGURE X ABOUT HERE>>** where it is referenced.

How would you change the code?

# Working with literature citations

## BibTeX, csl, zotero and friends

<!-- -->

## BibTeX

A simple human readable text file format for references

* Export directly from PubMED and others
* Export from Zotero, EndNote(?) and others

## Zotero

An open source, free reference manager -- well integrated with firefox.

Allows for shared libraries.

Plugin _BetterBibTex_ for ... well, better bibTeX.

Alternatives: Mendeley (Elsevier), EndNote, RefManager, etc

## Zotero

### Let me demonstrate...

* how to find a new reference
* include it in zoteros library
* automatically update bibTeX file (per project)
* cite in Rmd file

## Zotero got style!

Loads of styles ... 10.000+ ... from APA to Ugeskrift for Læger

...and you can write your own if need be.

https://www.zotero.org/styles

## Exercise 

(without Zotero) 

* You have decided to include an extra citation in the main_v1.qmd file
    - Go to scholar.google.com
    - Search for 'What low back pain is and why we need to pay attention'
    - Go to science direct and click 'Cite' to get bibtex
    - Copy bibtex content to your reference file
    - Copy the BibTeX identifier and insert it as a citation
    - Re-render your document

# Collaboration

## Collaborating with other researchers

Three scenarios :

* Your collaborators do _not_ use the R ecosystem (booh!)
* Your collaborators use the R ecosystem (woohoo!)
* You and your collaborators are hardcore nerds (git!)

## Collaborating with R-agnostic colleagues

* Knit your R-markdown code into a Word or OpenDocument file ... send it
* Collaborators can use _Track changes_ in wordprocessor and ... return it
* Manually transfer changes back to Rmd ... start over again

**Benefits**

* Simple
* No new tools to learn (?)
* Anyone can join in (?)
* Separation of comments and revisions

## Collaborating with R-agnostic colleagues

* Knit your R-markdown code into a Word or OpenDocument file ... send it
* Collaborators can use _Track changes_ in wordprocessor and ... return it
* Manually transfer changes back to Rmd ... start over again

**Drawbacks**

* Error prone
* Redundancy
* Messy versioning nightmare
* Focus shifts towards typesetting / presentation

## Collaborating with R users -- the simple way

* Get your Rmd files and ... send it
* Collaborators edit the Rmd directly and ... return it
* _Diff_ the two version of the Rmd file and ... merge them selectively

## Diff'ing two (or more) text files

* **Meld**
* Beyond compare
* Araxis merge
* P4Merge
* DeltaWalker
* (RStudio)
* ..and others

There are also several online version .. e.g. **https://editor.mergely.com/**

...you probably should not upload sensitive information though.

## Collaborating with R users -- the simple way

* Get your Rmd files and ... send it
* Collaborators edit the Rmd directly and ... return it
* _Diff_ the two version of the Rmd file and ... merge them selectively

**Benefits**

* Relatively simple
* New tools are easy learn
* Anyone can join in
* Only one file type -- no knitting
* Focus remains on content

## Collaborating with R users -- the simple way

* Get your Rmd files and ... send it
* Collaborators edit the Rmd directly and ... return it
* _Diff_ the two version of the Rmd file and ... merge them selectively

**Drawback**

* Still some redundancy (Rmd file versions)
* Messy versioning nightmare
* Comments and revisions are not clearly separated 

# Documenting _process_

<!-- -->

## Collaborating with tech savvy nerds

...enter _GIT_ and _renv_

## R package _renv_

Not very difficult at all.

>- Maintains a library of R packages _along_ with r code
>- Updates to R and packages does not break your project
>- Permits you to come back in 5 years and re-execute your code

https://rstudio.github.io/renv/articles/renv.html

## GIT

It is a bit difficult.

>- Instead of storing multiple versions of the same file ...
>- ..it stores just the one file, **and** a (hidden) version-history
>- Changes are handled by Diff'ing versions

>- All changes (process) are documented
>- All changes (process) are reversible
>- Projects are _forkable_ and _mergable_

>- indispensable for LARGE projects
>- GIT is a separate program, supported by RStudio.

# Summary

<!-- -->

## Summary

* Comment your code
* Comment your project
* Meaningful names
* Structured files/folders
* Human readable files
* SCRIPTED AUTOMATION !! 
* Split the process into 'chunks' (data / analyses / output)
* Split the code into files
* Split the code-in-files into chunks

## Later in your R journey: 

* Accessing databases directly (RedCAP, ao)
* Creating interactive websitesand documents
* Making graphs come alive with animations
* _Live_ data analyses dashboards
* ..and much much more (it can even order pizza)

## Getting help

* Google 
* Stackoverflow
* Stackoverflow -- R4PHD

<script src="https://giscus.app/client.js"
        data-repo="sorenoneill/r4phd"
        data-repo-id="R_kgDOJ9etDQ"
        data-category="Announcements"
        data-category-id="DIC_kwDOJ9etDc4CYApF"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="0"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="cobalt"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>