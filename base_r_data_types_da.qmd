---
title: "Base R - data types"
author: "Søren O'Neill"
date: today
output:
  distill::distill_article:
    self_contained: false
creative_commons: CC BY
format: html
editor: 
  mode: source
execute: 
  output: false
---

# Data typer - hvorfor er de vigtige

R er bygget med et antal _basis_ data typer:

* logical : TRUE eller FALSE (sandt eller falsk)
* integer : heltal
* numeric : decimaltal
* complex : compleks tal 
* character : alfa-numeriske tegn og andre special tegn
* raw : rå byte data

Det er vigtigt at bruge variabler af den rigtige type i din data management og analyse.

Det er også vigtigt at _vide_ hvilken type data du sidder og arbejder med, ellers kan du få forvirrende resultater. En hyppigt eksempel på en frustrerende fejl er at man læser data ind fra en ekstern kilde (f.eks en .csv fil) og antager at tekst stringe er blevet læst som sådan, men faktisk bliver de læst som en 'factor'. Hvis du er i tvivl om dine datas typer, kan du få hjælp med `class()` or `str()` functionerne.

## Logical (eller boolean)

Kan være enten `TRUE` eller `FALSE`.

**Bemærk** Den logiske værdi kan også anskues som en heltals værdi hvor 1 og 0, svarer til  `TRUE` og `FALSE`.

Kig på denne kode og dens output.

```{r logical}
a <- TRUE
a + 3
```

## Integer

Integer er naturlig heltal: 0, 1, 2, etc. 

R håndterer de fleste konversioner fra en data type til en anden for dig. For eksempel:

```{r integer}
as.integer(3)/as.integer(2)
```

At dividere heltallet 3 med heltallet 2 giver et decimal tal (1.5) -- R klarer konverteringen for dig.

## Numeric

Numeriske værdier er decimal tal som f.eks 2.33. I R, gemmes sådanne tal i computerens hukommelse som 64-bit værdier. Det betyder, at der er en øvre grænse for hvor store tal du kan arbejde med:  9,007,199,254,740,992.

For det mest er det uden betydning, men kig engang på denne kode:

```{r numeric}
x <- 9007199254740992 + 1
y <- 1/3

format(x, scientific=FALSE)
y

```

:::{.callout-note collapse=FALSE}
## Exercise # 1

1. Hvorfor fik x ikke værdien 9007199254740993 (9007199254740992 + 1)?
2. Er 1/3 faktisk lig med 0.3333333?
:::

:::{.callout-note collapse=TRUE}
## Exercise # 1 Solution

1. 9007199254740992 er det største tal R kan arbejde med som en enkelt værdi på en 64-bit computer. Lægger man 1 til, overskrider man den grænse. 
2. Nej, 1/3 er 0.33333333333333333333..[ud i uendeligheden] -- R kan ikke gemme uendeligt store tal
:::

## Complex

Komplekse tal er implementeret med `complex()` funktionen. Ikke så relevant for de meste statistiske analyse.

## Character

Bruges til at gemme alfa-nummeriske tegn, f.eks alfabetets bogstaver, special tegn som '?', '*', etc.

## Raw

Denne data type bruges til at gemme rå byte-data, altså binære tal i 8-but længde. Ikke så relevant for de meste statistiske analyse.




<script src="https://giscus.app/client.js"
        data-repo="sorenoneill/r4phd"
        data-repo-id="R_kgDOJ9etDQ"
        data-category="Announcements"
        data-category-id="DIC_kwDOJ9etDc4CYApF"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="0"
        data-emit-metadata="0"
        data-input-position="bottom"
        data-theme="cobalt"
        data-lang="en"
        crossorigin="anonymous"
        async>
</script>