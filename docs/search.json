[
  {
    "objectID": "day_2_ggplot2_extras.html",
    "href": "day_2_ggplot2_extras.html",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "href": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#gganimate-1",
    "href": "day_2_ggplot2_extras.html#gganimate-1",
    "title": "Extra Material",
    "section": "1 gganimate",
    "text": "1 gganimate\nMost packages have a webpage where the package and its core functions are introduced. Head the gganimate website and read the getting started section. Then continue to exercises here where we will practice using the soldiers dataset that you already know.\nYou need to install gganimate\n\n\n\n\n\n\nInstalling gganimate\n\n\n\n\n\n\ninstall.packages(\"gganimate\")\n\n\n\n\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(gganimate)  # Animate plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\nAnimate this plot so its shows difference between men and women\n\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)\n\n\n\n\n\nAssign the animation to an object\n\n\n\nCode\n# One option\nmy_animation &lt;- soldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  transition_states(sex,\n                    transition_length = 1,\n                    state_length = 2)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")\n\nmy_animation\n\n\n\n\n\nCode\n# Another option\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation, seq_along = sex))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")+\n  transition_states(sex,\n                    transition_length = 0.5,\n                    state_length = 2)+\n  enter_fade()+\n  exit_fly()\n\n\n\n\n\nSave your animation in the plots folder you created earlier\n\n\nCode\nanim_save(\n    filename = here(\"plots\", \"my_animation.gif\"),\n    animation = my_animation\n  )\n\n\n\n\n\nOxboys data\nLoad thenlme package and examine the Oxboys dataset that it comes with.\nYou might need to install the nlme package first.\n\n\nCode\nlibrary(nlme)\nhead(Oxboys)\n?Oxboys\n\n\n\n\nCreate an animation that shows how height changes with age\n\nUse transition_reveal()\n\n\n\nCode\nOxboys %&gt;% \n  ggplot(aes(x = age, y = height))+\n  # geom_boxplot(fill = \"steelblue\", \n  #              alpha = 0.5, \n  #              width = 0.3,\n  #              outlier.shape = NA)+\n  geom_line(aes(group = Subject), color = \"grey\", alpha = 1)+\n  geom_point(aes(group = Subject))+\n  labs(x = \"Standardized age \\n(years)\",\n       y = \"Height\\n(cm)\")+\n  theme_classic()+\n  transition_reveal(age)"
  },
  {
    "objectID": "day_2_ggplot2_extras.html#ggiraph-1",
    "href": "day_2_ggplot2_extras.html#ggiraph-1",
    "title": "Extra Material",
    "section": "2 ggiraph",
    "text": "2 ggiraph\nAnother useful resource for learning R is blogposts. These are often written in a much more accesible language. For learning ggiraph we will use a blogpost written by Albert Rapp. Head to his blogpost about ggiraph and read it. You don’t need to read the sections about shinyapps. When you have done that continue to exercises below.\nYou need to install ggiraph.\n\n\n\n\n\n\nInstalling ggiraph\n\n\n\n\n\n\ninstall.packages(\"ggiraph\")\n\n\n\n\n\n\nLoad the tidyverse, here, ggiraph, patchwork, and the cleaned soldiers dataset\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(ggiraph)    # Interactive plots\nlibrary(patchwork)  # Combining plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\n\nExplore Fort Hood, Camp Arnold, and Fort Doughnut\n\nFilter you data to the three camps\nMake a interactive boxplot that shows the name of the installation\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nYou can use the base R functions paste() or paste0() to combine text and values in your tooltip.\nYou can also use glue() from the glue package, but you need to install that package first. In the blogpost Albert uses the glue() function.\n\n\n\n\n\n\n\n\n\nSize of your interactive plot\n\n\n\n\n\nWith the default options, the interactive plots tends to be oversized. Add this option to reduce it\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\n\n\nCode\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")))+\n  labs(y = NULL)+\n  theme_classic()\n\ngirafe(ggobj = my_plot)\n\n\n\n\nAdd an interactive geom_jitter layer.\n\nfacet the plot on sex\nMake a tooltip that gives you the subjectid, BMI, height, weight, biceps circumference, and waist circumference.\n\n\n\n\n\n\n\nHint line breaks\n\n\n\n\n\n“” Gives you a line break\n\n\n\n\n\nCode\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL)+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.3,\n    shape = 21\n  )+\n  theme_classic()\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\nCreate another interactive plot with geom_jitter_interactive()\n\nCombine your new plot with the one you made above using patchwork\nSet the data_id argument to: data_id = subjectid for the points\nUse the options that Alfred suggested in his post (see tip below)\n\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))\n\n\n\n\n\n\nCode\nmy_plot_a &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation, ))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"BMI\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot_b &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = waistcircumference, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"Waist circumference\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot &lt;- my_plot_a + my_plot_b +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html",
    "href": "rstudio_introduction_to_gui_1_da.html",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "href": "rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "href": "rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "title": "RStudios GUI #1",
    "section": "2 Ændre størrelse på panelerne",
    "text": "2 Ændre størrelse på panelerne\nKlik og træk..\n\n\n\nÆndring af panel størrelserne med klik-og-træk\n\n\nBemærk også minimize og maximize ikonerne øverst til højre i hvert panel: \n\n\n\nMinimizing and maximizing panes in RStudio"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "href": "rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "title": "RStudios GUI #1",
    "section": "3 RStudio layout",
    "text": "3 RStudio layout\nØnsker du at ændre layout (forskellige farver, skrifttyper, tekst størrelse, osv) i RSudio? Klik: Tools / Global options / Appearance … men indtil videre, lad de andre indstillinger være i fred, f.eks General, Code, etc.\n\n\n\nChanging the RStudio appearance"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "href": "rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "title": "RStudios GUI #1",
    "section": "4 Flere faneblade i hvert panel",
    "text": "4 Flere faneblade i hvert panel\nHvert panel i RStudio har som regel adskillige fanebalde. For eksempel, i billedet herunder, indeholder ‘Output’ panel fanebladene Files, Plots, Packages, Help, Viewer og Presentation.\n\n\n\nMultiple tabs in each RStudio pane\n\n\nBemærk, at de faneblade som ses vil variere afhængigt hvad type dokument du arbejder med. Visse ekstra funktioner, som eksempelvis Git versionerings kontrol, vil også ændre på hvilke faneblade der præsenteres.\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nPrøv at gennemføre følgende:\n\nLav tre faneblade i ‘Text editor’ panelet.\nBrug hjælpefunktionen til at afgøre hvordan du kan bruge R til at finde ud af hvilken version af R du har installeret på din computer.\nFind din R konsol. Tast: a &lt;- 5 (tryk enter) – hvad skete der i dit Environment?\nSkift dit RSudio layout til et dark farve skema.\n\n\n\n\n\n\n\n\n\n\nSvar på øvelse #1\n\n\n\n\n\n\nLav blot tre nye tomme dokumenter at redigere: File / New file / R script (CTRL+SHIFT+n).\nBemærk, at der er to søgefelter på ‘help’ fanebladet i ‘Output’ panelet – brug den til højre til at lære mere om (base)funktionen R.Version.\nI Environment fanebladet i Environment panelet, skulle du se en liste af ‘Values’ hvor ‘a’ er ‘5’.\nI Tools / Global options / Appearance, vælg f.eks ‘Cobalt’ i Editor theme dialogen."
  },
  {
    "objectID": "installation_cloud_da.html",
    "href": "installation_cloud_da.html",
    "title": "Posit Cloud",
    "section": "",
    "text": "VIGTIGT\n\n\n\nFirmaet Posit som står bag RStudio (og rigtigt mange R pakker), tilbyder også en online version af RStudio og R økosystemet, som hedder Posit Cloud.\n\nPosit Cloud (formerly RStudio Cloud) lets you access Posit’s powerful set of data science tools right in your browser – no installation or complex configuration required.\n\nDe tilbyder endda en gratis version med visse begrænsninger. Men i udgangspunktet anbefaler vi at du installerer R, RStudio, etc på din egen computer med mindre der er helt særlige grunde til at vælge cloud løsningen."
  },
  {
    "objectID": "installation_rstudio_en.html",
    "href": "installation_rstudio_en.html",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "installation_rstudio_en.html#download-and-install-rstudio",
    "href": "installation_rstudio_en.html#download-and-install-rstudio",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "reproducible_research_basics_exercises_da.html",
    "href": "reproducible_research_basics_exercises_da.html",
    "title": "Thinking about RRR",
    "section": "",
    "text": "Thinking about reproducibility …\n\n\n\n\n\n\n\nHvorfor har alle videnskabelige artikler en metodesektion?\nEr det overhovedet videnskab, hvis det ikke er reproducerbart?\nEr metodesektionen tilstrækkelig?\nHar du hørt om nogen offentligt kendte tilfælde af videnskabelig uredelighed? Hvordan blev det opdaget?"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_da.html",
    "href": "reproducible_research_basics_file_structure_da.html",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.xml\n\n\n\nStick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?\n\n\n\n\n\nMain points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_da.html#the-root",
    "href": "reproducible_research_basics_file_structure_da.html#the-root",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_da.html#file-types",
    "href": "reproducible_research_basics_file_structure_da.html#file-types",
    "title": "Files",
    "section": "",
    "text": "Text always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.xml"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_da.html#file-types-1",
    "href": "reproducible_research_basics_file_structure_da.html#file-types-1",
    "title": "Files",
    "section": "",
    "text": "Stick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_da.html#files-and-folders-1",
    "href": "reproducible_research_basics_file_structure_da.html#files-and-folders-1",
    "title": "Files",
    "section": "",
    "text": "Main points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  }
]