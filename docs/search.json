[
  {
    "objectID": "base_r_data_types.html",
    "href": "base_r_data_types.html",
    "title": "Base R",
    "section": "",
    "text": "R is constructed to work with a number of basic data types:\n\nlogical : TRUE or FALSE\ninteger : whole numbers\nnumeric : decimal numbers\ncomplex : complex numbers\ncharacter : alphabetic and other characters\nraw : byte data\n\nIt is important to use the right data type for your data management and analyses.\nIt is also important to know the type of the data you are working with, otherwise you may get confusing output. We will see examples of this later.\n\n\nAssumes either TRUE or FALSE.\nNote That logical values can also be regarded as integer values 1 and 0, corresponding to TRUE and FALSE.\nLook at this code and its output:\n\na &lt;- TRUE\na+3"
  },
  {
    "objectID": "base_r_data_types.html#logical-or-boolean",
    "href": "base_r_data_types.html#logical-or-boolean",
    "title": "Base R",
    "section": "",
    "text": "Assumes either TRUE or FALSE.\nNote That logical values can also be regarded as integer values 1 and 0, corresponding to TRUE and FALSE.\nLook at this code and its output:\n\na &lt;- TRUE\na+3"
  },
  {
    "objectID": "day_1_basics_of_Rstudio.html",
    "href": "day_1_basics_of_Rstudio.html",
    "title": "Basics of Rstudio",
    "section": "",
    "text": "1 Rstudio\nTogether in groups of two or three explain the following to each other:\n\nWhat and where is the Console?\nWhat and where is the Script?\nWhat is the difference between writing 2+2in the console and the script?\nWhat happens if you write a # in the script??\nWhen and why can comments in your code be useful?\nWhat and where is the Environment Pane?\nWhat and where is the “Files, Help, Plots, Packages, and Viewer” Pane?\nWhat does F1 and ?[some_function] do?\nWhat is an R Project, and why is it a good idea to use?"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#section",
    "href": "day_1_basics_of_R_code.html#section",
    "title": "Basics of R code",
    "section": "1.1 <-",
    "text": "1.1 &lt;-\n\nDo you have a short cut for the assignment operator? (Tools -&gt; Show Command Palette -&gt; and type “assignment”)\nWhat does the assign operator &lt;- do?\n\n\n\nAssign the inbuilt datset iris to an object called my_data\niris is available to you when you load R. It´s an inbuilt dataset. So it is available to you even though you cant find it in the Environment pane. Just type iris.\n\n\nShow me the code\nmy_data &lt;- iris\n\n\n\n\n\nprint my_data\n\n\nShow me the code\nmy_data"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#c",
    "href": "day_1_basics_of_R_code.html#c",
    "title": "Basics of R code",
    "section": "1.2 c()",
    "text": "1.2 c()\nThe c is short for concatenate, and means to link together.\nThis function combines values into a vector or list. For now you can think of a vector as a sequence of values. The values are seperated by a ,\n\n\nUse c() to create a sequence of numbers from 0 to 4\n\n\nShow me the code\nc(0, 1, 2, 3, 4)\n\n\n\n\nUse c() to create a sequence of numbers from 0 to 4 in steps of 2\n\n\nShow me the code\nc(0, 2, 4)"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#seq",
    "href": "day_1_basics_of_R_code.html#seq",
    "title": "Basics of R code",
    "section": "1.3 seq()",
    "text": "1.3 seq()\nOf course, such predictable operations can be done with ease in a more reliable way. We will use the function seq() as an example. The output of this function is a sequence of numbers. The sequence of numbers is dictated by the arguments that you provide.\nRead the arguments section on help page for seq()\nType ?seq() in the console or type seq()and pres F1 while the cursor stands on the on the letters.\n\n\nMake a sequence of numbers that goes from 0 to 100\n\n\nShow me the code\nseq(from = 0,\n    to = 100)\n\n# This simple operation can also be done by just writing 0:100\n\n\n\n\n\nMake a sequence of numbers that goes from 0 to 100 in steps of 2\n\n\nShow me the code\nseq(from = 0,\n    to = 100,\n    by = 2)"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#sample",
    "href": "day_1_basics_of_R_code.html#sample",
    "title": "Basics of R code",
    "section": "1.4 sample()",
    "text": "1.4 sample()\n\nUsing sample(), take a sample of 5 random numbers between 1 and 100\n\n\nShow me the code\nsample(1:100, 5)\n\n\n\n\nWhat does the argument replace do? What is the default value?"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#mean",
    "href": "day_1_basics_of_R_code.html#mean",
    "title": "Basics of R code",
    "section": "1.5 mean()",
    "text": "1.5 mean()\nAnother function we can use is mean(). This function gives you the mean value of a sequence of numbers. Read the arguments section of the help page for mean()\n\n\nWhat type of input does the first arguments of the mean() function require?\n\n\nShow me the code\n# It requires a vector. \n# You can still think of this as a sequence of numbers\n# c()\n\n\n\n\n\nUsing c(), take the mean of the numbers 5, 3, 1, and 10\n\n\nShow me the code\nmean(c(5, 3, 1, 10))\n\n\n\n\n\nTake the mean of this vector c(2, 4, 6, NA)\n\n\nShow me the code\nmean(c(2, 4, 6, NA))\n\n\n\n\n\nTake the mean of this vector c(2, 4, 6, NA), disregarding NA values\n\n\n\n\n\n\nHint\n\n\n\n\n\nRead about the na.rm argument in the mean() function. What is the default value?\n\n\n\n\n\nShow me the code\nmean(c(2, 4, 6, NA),\n     na.rm = TRUE)\n\n\n\n\n\nYou will find the na.rm argument in many functions. It always defaults to FALSE. Discuss if this is a good idea? Is it different from other programs?"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#section-1",
    "href": "day_1_basics_of_R_code.html#section-1",
    "title": "Basics of R code",
    "section": "1.6 %>%",
    "text": "1.6 %&gt;%\n\nWhat is your keyboard shortcut to write the pipe %&gt;% ? (Pres CTRL+SHIFT+P and type pipe in the search field).\n\n\nLoad the tidyverse\nWhy? The %&lt;% is a part of the tidyverse, and is not included in Base R\n\nlibrary(tidyverse)\n\n\n\n\nUsing the pipe, create a sequence of numbers going from 0 til 100 and then take the mean of the sequence.\n\n\nShow me the code\nseq(from = 0,\n    to = 100) %&gt;%\n  mean()\n\n\n\n\n\nUsing the pipe, create a sequence of numbers going from 1 to 20 in 39 steps, and then sample 10 random numbers from the sequence\n\n\nShow me the code\nseq(from = 1,\n    to = 20,\n    length.out = 39) %&gt;% \n  sample(10)\n\n\n\n\n\nRewrite this code to use the pipe instead\n\nsort(\n  sample(seq(1:100),\n         10,\n         replace = TRUE)\n  )\n\n\n\nShow me the code\nseq(1:100) %&gt;% \n  sample(10,\n         replace = TRUE) %&gt;% \n  sort()"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#explore",
    "href": "day_1_basics_of_R_code.html#explore",
    "title": "Basics of R code",
    "section": "1.7 Explore",
    "text": "1.7 Explore\nInvestigate the following functions that we may need later on in this course.\n\nquantile()\nrnorm()\nmedian()\n\ncumsum()\nmin()\n\nmax()\n\nn()\nset.seed()"
  },
  {
    "objectID": "day_1_dplyr.html#load-the-tidyverse-and-the-here-package",
    "href": "day_1_dplyr.html#load-the-tidyverse-and-the-here-package",
    "title": "dplyr",
    "section": "Load the tidyverse and the here package",
    "text": "Load the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)"
  },
  {
    "objectID": "day_1_dplyr.html#here",
    "href": "day_1_dplyr.html#here",
    "title": "dplyr",
    "section": "1.1 here()",
    "text": "1.1 here()\n\nTry out the here() function\n\nWhat happens if you write here() ?\nWhat happens if you write here(\"raw_data\") ?\n\nCompare your output with your neighbors.\nCompare your output with someone who has a different operating system (Windows, Mac, Linux) than you. (Hint: look for \\ /)\nDiscuss if and how the here()function could ever be of any use to anybody\n\n\n\n\n\nLoad the soldiers dataset\nUse the function read_csv2()\nThe file argument should be here(\"raw_data\", \"soldiers.csv\")\n\n\nShow the code\nread_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\n\nAssign the soldiers dataset to an object called soldiers\nGreat, now read the data again and assign it (remember &lt;-) to an object called soldiers\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))"
  },
  {
    "objectID": "day_1_dplyr.html#skim",
    "href": "day_1_dplyr.html#skim",
    "title": "dplyr",
    "section": "1.2 skim()",
    "text": "1.2 skim()\nThere are many ways to explore a dataframe. In this course we will take a shortcut and use the skim() function from the skimr package. The skim() function provides an exellent overview of a dataframe.\nLoad the skimr package and use the skim() function to get an impression of the soldiers dataset.\nDiscuss with your neighbor:\n\nNr of rows?\nNr of columns?\nMissing values?\nTypes of variables?\nHow many unique values does the different character variables have?\n\nAny fake data? (hint: Yes, for educational purposes I have added some fake data)\n\n\n\nShow the code\nlibrary(skimr)\nskim(soldiers)"
  },
  {
    "objectID": "day_1_dplyr.html#select",
    "href": "day_1_dplyr.html#select",
    "title": "dplyr",
    "section": "2.1 select()",
    "text": "2.1 select()\n\nselect the columns subjectid, sex, age\n\n\nShow the code\nsoldiers %&gt;% \n  select(subjectid, sex, age)\n\n\n\n\n\n\nselect the columns 1, 3, 5:7\n\n\nShow the code\nsoldiers %&gt;% \n  select(1,3,5:7)\n\n\n\n\n\n\nremove the columns 3:5\n\n\nShow the code\nsoldiers %&gt;% \n  select(-(3:5))\n\n\n\n\n\n\nselect all columns that contains the word “circumference”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nUse one of the tidyselect helper functions.\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  select(contains(\"circumference\"))\n\n\n\n\n\nremove all columns containing the letter “c”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nUse one of the tidyselect helper functions.\nUse a minus sign.\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  select(-contains(\"c\"))\n\n\n\n\n\nselect all columns that contains a “c” OR “x” OR “y” OR “z”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nIn R(and many other programming languages) the | sign is used as a logical operator for OR.\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  select(contains(\"c\") | contains(\"x\") | contains(\"y\") | contains(\"z\"))\n\n\n\n\n\nselect all columns that contains a “c” OR “x” OR “y” OR “z”\nThis time use the tidyselect helper function called matches()\nmatches() allows you to use logical operators inside the function. E.g., matches(\"this|that\")\n\n\nShow the code\nsoldiers %&gt;% \n  select(matches(\"c|x|y|z\"))\n\n\n\n\n\nChallenge: Why not always use matches()?\nUse the preloaded iris data-set. (just write iris)\nTry to use matches() to select all columns containing a “.”\n\n\nShow the code\niris %&gt;% \n  select(matches(\".\")) %&gt;% \n  head() # This line is just to prevent a very long output.\n\n\n\nWhy did we select the Species column?\nWhat happens if we use contains() instead\n\n\nShow the code\niris %&gt;% \n  select(contains(\".\")) %&gt;% \n  head() # This line is just to prevent a very long output.\n\n\n\nWhat is the difference in the output? Why is it different?\n\n\nANSWER\n\ncontains(): Contains a literal string.\nmatches(): Matches a regular expression.\nIn regular expressions . is a wildcard.\n\nThe wildcard . matches any character. For example, a.b matches any string that contains an “a”, and then any character and then “b”; and a.*b matches any string that contains an “a”, and then the character “b” at some later point.\nhttps://en.wikipedia.org/wiki/Regular_expression"
  },
  {
    "objectID": "day_1_dplyr.html#filter",
    "href": "day_1_dplyr.html#filter",
    "title": "dplyr",
    "section": "2.2 filter()",
    "text": "2.2 filter()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nKeep all rows where sex is Female:\n\n\n\n\n\n\nHint\n\n\n\n\n\n???? == \"Female\"\n\n\n\n\n\nShow the code\nsoldiers %&gt;% filter(sex == \"Female\")\n\n\n\n\n\nKeep all rows where weightkg is missing (NA value)\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the is.na() function\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  filter(is.na(weightkg))\n\n\n\n\n\nKeep all rows where WritingPreference is “Left hand” AND sex is “Female”\n\n\nShow the code\nsoldiers %&gt;% \n  filter(WritingPreference == \"Left hand\" ,  sex == \"Female\")  # you can use & instead of a ,\n\n\n\n\n\nKeep all rows where WritingPreference is “Left hand” OR sex is “Female”\n\n\nShow the code\nsoldiers %&gt;% \n  filter(WritingPreference == \"Left hand\" |  sex == \"Female\")  \n\n\n\n\n\nWhat is going wrong in this code?\n\nsoldiers %&gt;% \n  select(1:5) %&gt;% \n  filter(WritingPreference == \"Left hand\" |  sex == \"Female\")  \n\nThe error message is:\n\nError in `filter()`:\nℹ In argument: `WritingPreference == \"Left hand\" | sex == \"Female\"`.\nCaused by error:\n! object 'WritingPreference' not found\nRun `rlang::last_error()` to see where the error occurred.\n\n\n\nANSWER\nThe variable WritingPreference was not selected in the first line.\n\n\n\n\n\nKeep all rows where age is above 30 and the weightkg is below 600\n\n\nShow the code\nsoldiers %&gt;% \n  filter(age &gt; 30, weightkg &lt; 600)\n\n\n\n\n\n\nKeep all rows where Ethnicity is either “Mexican” OR “Filipino” OR “Caribbean Islander”\n\n\n\n\n\n\nHint\n\n\n\n\n\nyou need to use %in% and c()\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  filter(Ethnicity %in% c(\"Mexican\", \"Filipino\", \"Caribbean Islander\"))\n\n\n\n\n\n\n\n\nDifference between == and %in%\n\n\n\n\n\ntldr - Use %in% instead of == when you want to filter for multiple values.\nRead on if you want to understand why. (You don’t have to)\nThe code filter(Ethnicity == c(\"Mexican\", \"Filipino\")) is likely not doing what you expect. The ‘==’ operator does an element-wise comparison, which means it compares the first element of ‘Ethnicity’ to the first element of the vector (“Mexican”), the second element of ‘Ethnicity’ to the second element of the vector (“Filipino”). The short vector is then recycled so now the third element of ‘Ethnicity’ is compared to the first element of the vector (“Mexican”), the fourth element of ‘Ethnicity’ to the second element of the vector (“Filipino”), and so on.\nInspect the differences in how may rows these lines of code produce\n\nsoldiers %&gt;% \n  filter(Ethnicity %in% c(\"Mexican\", \"Filipino\"))\n\nsoldiers %&gt;% \n  filter(Ethnicity == c(\"Mexican\", \"Filipino\"))\n\nRun this code chunk line by line. Inspect the differences.\n\n# Create a data frame\ndf &lt;- data.frame(\n  Ethnicity = c(\"Mexican\", \"Filipino\", \"Italian\", \"Mexican\", \"Italian\", \"Filipino\"),\n  Name = c(\"John\", \"Maria\", \"Luigi\", \"Carlos\", \"Francesco\", \"Jose\"),\n  stringsAsFactors = FALSE\n)\n\n# Investigate the data frame\ndf\n\n# Filter using %in%\ndf %&gt;% filter(Ethnicity %in% c(\"Mexican\", \"Filipino\"))\n\n# Filter using ==\ndf %&gt;% filter(Ethnicity == c(\"Mexican\", \"Filipino\"))"
  },
  {
    "objectID": "day_1_dplyr.html#summarise",
    "href": "day_1_dplyr.html#summarise",
    "title": "dplyr",
    "section": "2.3 summarise()",
    "text": "2.3 summarise()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nCalculate the mean and standard deviation of footlength\n\n\nShow the code\nsoldiers %&gt;% summarise(\n  footlength_avg = mean(footlength),\n  footlength_sd = sd(footlength))\n\n\n\n\n\nCalculate the median and interquartile range of earlength\n\n\nHINT\n\nuse the IQR() function\n\n\n\nShow the code\nsoldiers %&gt;% \n  summarise(\n    earlength_median = median(earlength),\n    earlength_iqr = IQR(earlength))\n\n\n\n\n\nCount the number of rows where WritingPreference is equal to “Right hand”\n\n\nShow the code\nsoldiers %&gt;%  \n  summarise(\n    n_righthanded = sum(WritingPreference == \"Right hand\"))\n\n\n\n\n\n\nHow old is the oldest soldier?\n\n\nHINT if you can’t work out why get an NA value\n\nMany Base R functions, including mean(), does not ignore NA values by default. This means that if the vector contains an NA value the result will be NA. Is this a good or bad thing?\nYou can set the argument na.rm = TRUE, to ignore missing values.\n\n\n\nShow the code\nsoldiers %&gt;% \n  summarise(\n    age_max = max(age, na.rm = TRUE))\n\n\n\n\n\n\nCalculate the mean weight of the Females\n\n\nHINT if you can’t work out why get an NA value\n\nMany Base R functions, including mean(), does not ignore NA values by default. This means that if the vector contains an NA value the result will be NA. Is this a good or bad thing?\nYou can set the argument na.rm = TRUE, to ignore missing values.\n\n\n\nShow the code\nsoldiers %&gt;% \n  filter(sex == \"Female\") %&gt;% \n  summarise(\n    weight_avg = mean(weightkg, na.rm = TRUE))\n\n\n\n\n\nCalculate the range in weight (max-min) within Males\n\n\nShow the code\nsoldiers %&gt;% \n  filter(sex == \"Male\") %&gt;% \n  summarise(\n    weight_range = max(weightkg, na.rm = TRUE)-min(weightkg, na.rm = TRUE))"
  },
  {
    "objectID": "day_1_dplyr.html#group_by-and-arrange",
    "href": "day_1_dplyr.html#group_by-and-arrange",
    "title": "dplyr",
    "section": "2.4 group_by() and arrange()",
    "text": "2.4 group_by() and arrange()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nCalculate the mean and sd of weightkg and age for all Installations\n\n\nShow the code\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(weight_avg = mean(weightkg, na.rm = TRUE),\n            weight_sd = sd(weightkg, na.rm = TRUE),\n            age_avg = mean(age, na.rm = TRUE),\n            age_sd = sd(age, na.rm = TRUE))\n\n\n\n\n\nCalculate the mean and sd of weightkg and age for all Installations for both sexes\n\n\nShow the code\nsoldiers %&gt;% \n  group_by(Installation, sex) %&gt;% \n  summarise(weight_avg = mean(weightkg, na.rm = TRUE),\n            weight_sd = sd(weightkg, na.rm = TRUE),\n            age_avg = mean(age, na.rm = TRUE),\n            age_sd = sd(age, na.rm = TRUE))\n\n\n\n\n\nCalcualate the average height for each Installation and count the number of missing values within each Installation\n\n\n\n\n\n\nHint\n\n\n\n\n\nTo count missings, use the functions sum() and is.na()\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)))\n\n\n\n\n\nAs before, but now also add the number of observations (rows) within each Installation\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse n()\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)),\n            n = n())\n\n\n\n\n\nAs before, but now arrange the output after number of soldiers at each Installation in descending order.\n\n\nShow the code\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)),\n            n = n()) %&gt;% \n  arrange(desc(n))"
  },
  {
    "objectID": "day_1_dplyr.html#mutate",
    "href": "day_1_dplyr.html#mutate",
    "title": "dplyr",
    "section": "2.5 mutate()",
    "text": "2.5 mutate()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nAdd a column called heightcm with the height of the soldiers in cm\n\nUpdate the soldiers dataset with the new variable\nplace the new variable after Heightin\n\n\n\nShow the code\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    heightcm = Heightin * 2.54,\n    .after = Heightin)\n\n\n\n\n\n\nUpdate the weightkg column to kg instead of kg*10\n\nUpdate the soldiers dataset with the new weightkg column\n\n\n\nShow the code\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    weightkg = weightkg/10\n    )\n\n\n\n\n\n\nAdd a column called BMI with the Body mass index (BMI) of the soldiers\nBMI\n\nUpdate the soldiers dataset to with the new variable\nplace the new variable after weightkg\n\n\n\nShow the code\nsoldiers &lt;- soldiers %&gt;% \n  mutate(BMI = weightkg/(heightcm/100)^2,\n         .after = weightkg)\n\n\n\n\n\n\nAdd a column called obese that contains the value TRUE if BMI is &gt; 30\n\n\nShow the code\nsoldiers %&gt;% \n  mutate(\n    obese = if_else(BMI &gt; 30, TRUE, FALSE),\n    .before = 1 # This line code just places the variable at the front\n  )\n\n# OR\n\nsoldiers %&gt;% \n  mutate(\n    obese = BMI &gt; 30,\n    .before = 1 # This line code just places the variable at the front\n  )\n\n\n\n\n\n\nInspect the below table from Wikipedia\n\n\n\n\n\nCategory\nBMI (kg/m2)\n\n\n\n\nUnderweight (Severe thinness)\n&lt; 16.0\n\n\nUnderweight (Moderate thinness)\n16.0 – 16.9\n\n\nUnderweight (Mild thinness)\n17.0 – 18.4\n\n\nNormal range\n18.5 – 24.9\n\n\nOverweight (Pre-obese)\n25.0 – 29.9\n\n\nObese (Class I)\n30.0 – 34.9\n\n\nObese (Class II)\n35.0 – 39.9\n\n\nObese (Class III)\n&gt;= 40.0\n\n\n\n\n\n\n\n\n\nCreate the variable category that tells us whether the soldiers are “Underweight”, “Normal range”, “Overweight”, or “Obese”\n\nUpdate the soldiers dataset with the new variable\nplace the new variable after BMI\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\nUse case_when()\n\n\n\n\n\n\n\n\n\nHint 2\n\n\n\n\n\n\nsoldiers %&gt;% \n  mutate(\n    category = ????\n    )\n\n\n\n\n\n\n\n\n\n\nHint 3\n\n\n\n\n\n\nsoldiers %&gt;% \n  mutate(\n    category = case_when(\n      #TEST HERE ~ OUTPUT, \n      #TEST HERE ~ OUTPUT,\n      #TEST HERE ~ OUTPUT,\n      #.default = OUTPUT\n    )\n    )\n\n\n\n\n\n\nShow the code\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    category = case_when(\n      BMI &lt; 18.5 ~ \"Underweight\",\n      BMI &lt; 25   ~ \"Normal range\",\n      BMI &lt; 30   ~ \"Overweight\",\n      BMI &gt;= 30  ~ \"Obese\",\n      .default = NA),\n    .after = BMI\n    )"
  },
  {
    "objectID": "day_1_dplyr.html#count",
    "href": "day_1_dplyr.html#count",
    "title": "dplyr",
    "section": "2.6 count()",
    "text": "2.6 count()\nFor simple counting count() is faster than summarise(n = n()) or mutate(n = n())\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count()\n\n\n\nANSWER\n\ncount() works like summarise(n = n())\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count(cut)\n\n\n\nAnswer\n# The code is equivalent to:\ndiamonds %&gt;% group_by(cut) %&gt;% summarise(n = n())\n\n# OR\n\ndiamonds %&gt;% summarise(n = n(), .by = cut)\n\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count(cut, color)\n\n\n\nAnswer\n# The code is equivalent to:\ndiamonds %&gt;% group_by(cut, color) %&gt;% summarise(n = n())\n\n# OR\n\ndiamonds %&gt;% summarise(n = n(), .by = c(cut, color))\n\n\n# However, notice that the first solution returns a grouped tibble\n\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  add_count()\n\n\n\nANSWER\n\nadd_count() works like mutate(n = n())\n\n\n\n\nCount the number of diamonds within each type of cut and calculate the percentage of each cut\n\n\nShow the code\ndiamonds %&gt;% \n  count(cut) %&gt;% \n  mutate(percent = n/sum(n)*100)\n\n\n\n\n\nInspect the output of this code. What is going wrong?\n\ndiamonds %&gt;% \n  group_by(cut) %&gt;% \n  count() %&gt;% \n  mutate(percent = n/sum(n)*100)\n\n# A tibble: 5 × 3\n# Groups:   cut [5]\n  cut           n percent\n  &lt;ord&gt;     &lt;int&gt;   &lt;dbl&gt;\n1 Fair       1610     100\n2 Good       4906     100\n3 Very Good 12082     100\n4 Premium   13791     100\n5 Ideal     21551     100"
  },
  {
    "objectID": "day_1_extra.html",
    "href": "day_1_extra.html",
    "title": "Day 1 Extra #1",
    "section": "",
    "text": "1 Extra materials for those ahead of the curve\n…"
  },
  {
    "objectID": "day_1_other.html",
    "href": "day_1_other.html",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "In this section we will explore a few other functions that you most likely are going to need.\n\npivot_wider() and pivot_longer()\n_join()\nacross()\n\n\n\n\n\n\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\n\n\n\n\n\nIn the realm of data science, it’s common to encounter data in what we call a “wide” format. To visualize this, imagine that each measurement of the same attribute is spread across multiple columns instead of being listed down in rows. Consider a scenario where we record a person’s weight at different intervals; in the wide format, we might see individual columns dedicated to each time point, like weightkg_week0, weightkg_week10 and so forth. Essentially, the column labels often carry dual information: the attribute (in this case, ‘weight’) and the condition or time (like ‘week0’ or ‘week10’).\nOften, data is inputted in this wide format for convenience, as it visually follows the chronological order of data collection or event occurrence. However, in the practice of data science, it’s generally more efficient to work with data in what we call a “long” format.\nIn long format, the data is structured such that each row is a unique observation or instance, and each column represents a unique variable or attribute. Continuing with the weight example, instead of having separate columns for each week’s weight (weightkg_week0, weightkg_week10), we would have separate rows for each weight measurement, with a column for the weight (weightkg) and another column for the time point (week).\nThe long format, also known as “tidy” data, provides a systematic and consistent structure, allowing us to work with data more effectively. Plus, many functions and packages in R, such as the popular ggplot2 for data visualization, are designed to work optimally with this long format.\nBut how do we move from wide format to long format? And vice versa? This is where the pivot_longer() and pivot_wider() functions from the tidyverse in R come into play.\n\n\n\nThe code creates a made-up data set. You dont need to understand the code.\n\nIs the data frame in a wide or long format? How can you tell?\n\n\nset.seed(1)\n\nweight_data &lt;- tibble(\n  id = 1:100,\n  sex = sample(c(\"Male\", \"Female\"), size = 100, replace = TRUE),\n  weightkg_week0 = rnorm(100, mean = 95, sd = 5)) %&gt;% \n  \n  # Mean wiegh more than women\n  mutate(\n    weightkg_week0 = if_else(\n      sex == \"Male\", weightkg_week0 * rnorm(100, mean = 1.15, sd = 0.3),\n      weightkg_week0\n    )\n  ) %&gt;% \n  \n  # Weight change over weeks\n  mutate(\n    weightkg_week1 = rnorm(100, mean = weightkg_week0*0.96, sd = 0.5), \n    weightkg_week2 = rnorm(100, mean = weightkg_week1*0.97, sd = 0.5),\n    weightkg_week3 = rnorm(100, mean = weightkg_week2*0.98, sd = 0.5), \n    weightkg_week4 = rnorm(100, mean = weightkg_week3*0.99, sd = 0.5),\n    weightkg_week5 = rnorm(100, mean = weightkg_week4, sd = 0.5))\n  \n\nweight_data\n\n\n\n\n\nThis exercise is only here to show you how troublesome it can be to work with data in a wide format. You don’t need to write all the code.\n\n\nShow the code\nweight_data %&gt;% \n  group_by(sex) %&gt;% \n  summarise(week0 = mean(weightkg_week0),\n            week1 = mean(weightkg_week1),\n            # etc. etc.\n            )\n\n\n\n\n\n\n\nThe pivot_longer() function takes wide format data and makes it longer by increasing the number of rows and decreasing the number of columns. For example, it can take our weight data from multiple columns (weightkg_week0, weightkg_week10) and collapse them into two columns: one for weight and one for timepoint.\n\n\n\n\n\nShow the code\n?pivot_longer\n\n\n\nWhat does this line in the help file mean?\ncols &lt;tidy-select&gt; Columns to pivot into longer format. ::: {.callout collapse=true} #### Answer This means that you use all the tidyselect functions that you also use with select() when you tell R what columns you to pivot into a longer format. :::\nWhat does the names_to and values_to arguments do?\n\n\n\n\n\n\n\nShow the code\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"))\n\nweight_data_long\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"),\n               names_to = \"week\",\n               values_to = \"weightkg\")\nweight_data_long\n\n\nWe will fix the values in the week column later. For now we are happy with the long data format.\n\n\n\n\n\nassign you results to an object called weight_data_long_sum\n\n\n\nShow the code\nweight_data_long_sum &lt;- weight_data_long %&gt;% \n  group_by(sex, week) %&gt;% \n  summarise(mean = mean(weightkg))\n\nweight_data_long_sum\n\n\n\n\n\n\n\nThe pivot_wider() function takes long format data and makes it wider by decreasing the number of rows and increasing the number of columns. For instance, it can spread our long format weight data back into multiple columns for each week’s weight.\n\n\n\n\n\nShow the code\n?pivot_wider\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"week\",\n              values_from = mean)\n\n\n# A tibble: 2 × 7\n# Groups:   sex [2]\n  sex    weightkg_week0 weightkg_week1 weightkg_week2 weightkg_week3\n  &lt;chr&gt;           &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Female           94.7           90.9           88.3           86.4\n2 Male            113.           108.           105.           103. \n# ℹ 2 more variables: weightkg_week4 &lt;dbl&gt;, weightkg_week5 &lt;dbl&gt;\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"sex\",\n              values_from = mean)\n\n\n# A tibble: 6 × 3\n  week           Female  Male\n  &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n1 weightkg_week0   94.7  113.\n2 weightkg_week1   90.9  108.\n3 weightkg_week2   88.3  105.\n4 weightkg_week3   86.4  103.\n5 weightkg_week4   85.5  102.\n6 weightkg_week5   85.4  102.\n\n\n\n\n\n\n\n\n\n\nChange it into three variables:\n\nsex (“female”, “male”)\npregnant (“yes”, “no”)\ncount, which is a non-negative integer representing the number of observations.\n\n\npreg &lt;- tribble(\n  ~pregnant, ~male, ~female,\n  \"yes\", NA, 10,\n  \"no\", 20, 12\n)\npreg\n\n\n\nShow the code\npreg %&gt;%\n  pivot_longer(c(male, female), names_to = \"sex\", values_to = \"count\")\n\n\n\n\n\n\ntable2 is a dataset that is load with the tidyverse. Try to type table2 in the console.\ntable2 displays the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000. The data contains values associated with four variables (country, year, cases, and population).\nChange table2 into the output below:\n\n\nShow the code\ntable2 %&gt;% \n  pivot_wider(names_from = type,\n              values_from = count)\n\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\n\n\n\n\nThe join functions in the dplyr package in R are used to combine two dataframes based on a shared key (or set of keys). There are several types of joins, each with their own use cases:\n\ninner_join(): This returns only the rows in which the key exists in both dataframes.\nleft_join(): This returns all the rows from the first (left-hand) dataframe, and any rows from the second (right-hand) dataframe that match. If there’s no match, the columns for the right-hand dataframe will be filled with NA.\nright_join(): This is the reverse of left_join(). It returns all the rows from the second (right-hand) dataframe, and any rows from the first (left-hand) dataframe that match. If there’s no match, the columns for the left-hand dataframe will be filled with NA.\nfull_join(): This returns all rows from both dataframes. If there’s no match, the columns for the other dataframe will be filled with NA.\nsemi_join(): This returns all rows from the first (left-hand) dataframe where there are matching values in the second dataframe, but it doesn’t add any columns from the second dataframe.\nanti_join(): This returns all rows from the first (left-hand) dataframe where there are not matching values in the second dataframe. It also doesn’t add any columns from the second dataframe.\n\nThese functions are essential tools for merging and manipulating data in R, allowing you to effectively combine and cross-reference information from multiple dataframes.\n\nRead the slides from Day 1 to see code examples.\n\nRun this code to get example data\n\nset.seed(1)\nA &lt;- tibble(id = c(1:5, 7:8),\n            sex = sample(c(\"Male\", \"Female\"), 7, replace = TRUE),\n            nr_of_orders = sample(5:10, 7, replace = TRUE))\nB &lt;- tibble(id = 1:6,\n            age = sample(25:75, 6),\n            total_order_value = sample(5:50, 6)*100)\n\n\n\n\n\n\nShow the code\nanti_join(A, B)\nanti_join(B, A)\n\n\n\n\n\n\n\nsemi_join(A, B)\n\n\n\n\n\n\n\nShow the code\nleft_join(A, B)\n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  arrange(id)\n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) \n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) %&gt;% \n  group_by(sex) %&gt;% \n  summarise(\n    mean_avg_order_value = mean(avg_order_value, na.rm = TRUE)\n  )\n\n\n\n\n\n\n\nRestart R Load the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\nLoad the soldiers data set and assign it to an object called soliders\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\nThe across() function is part of the dplyr package in R and is used for applying a function (or functions) across multiple columns in a dataframe.\nacross() is particularly useful when you want to perform the same operation on multiple columns but don’t want to write out each operation individually. It works in combination with mutate() and summarise().\nVery importantly the .cols argument allows you to use the tidyselect functions that you are now familiar with.\nHere’s a basic example of its usage.\nLet’s say we want to take the mean of weightkg and earlength in the soldiers dataframe.\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = mean)                         # What function to apply - Notice that mean is not written round()\n    )\n\nYou can see that the mean of weightkg is NA. This is because is has missings values and mean() defaults to na.rm = FALSE. If we want to change this, we have to write a slightly more complicated code. In the following code you will find two new things:\n\n~ You tell R - “I am going to show you a function”\n.x You tell R - “Put the column that you have selected here”\n\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ mean(.x, na.rm = TRUE))     # What function to apply\n    )\n\n.x can also be used outside of a function. Lets say we want to double all the values instead of taking the mean\n\nsoldiers %&gt;% \n  mutate(across(                         # Notice now we use mutate() instead of summarise()\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ .x * 2                           \n    )) \n\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  mutate(across(\n    .cols = contains(\"circumference\"), \n    .fns = ~.x *0.393701))\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1      1017 151168-2263 Male      41 &lt;NA&gt;                   1 Right hand       \n 2      4775 210475-1945 Man       35 &lt;NA&gt;                   1 Left hand        \n 3      2177 290568-1069 Male      42 &lt;NA&gt;                   2 Left hand        \n 4      5026 121283-0610 Female    26 &lt;NA&gt;                   2 Right hand       \n 5      1533 090189-0422 Woman     21 Mexican                3 Right hand       \n 6      4567 020487-3860 Female    23 &lt;NA&gt;                   1 Right hand       \n 7      2347 041287-8106 Female    22 Caribbean Islan…       2 Right hand       \n 8       270 130765-7114 Woman     45 &lt;NA&gt;                   1 Right hand       \n 9      4050 020166-4680 Female    44 &lt;NA&gt;                   2 Left hand        \n10      5307 101188-3148 Female    21 &lt;NA&gt;                   1 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nYou can also target columns based on their type (logical, double, character, factor, numeric). Using the functions is.logical(), is.double(), etc.. However, you need to use them inside the function where()\nIn this example, we change all character columns to factors (You will learn about the column types on day 3). where(is.character) selects the columns where the condition is true (i.e., the column is character), and as.factor is the function that gets applied to these columns. As a result, all character columns get converted to factor.\n\nsoldiers %&gt;% \n  mutate(across(\n    .cols = where(is.character), # What columns to target - notice is.character is not written is.charater()\n    .fns = as.factor             # What function to apply - notice as.factor is written without ()                           \n    )) \n\n\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~.x+1.5\n    )\n  )\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1     1018. 151168-2263 Male    42.5 &lt;NA&gt;                 2.5 Right hand       \n 2     4776. 210475-1945 Man     36.5 &lt;NA&gt;                 2.5 Left hand        \n 3     2178. 290568-1069 Male    43.5 &lt;NA&gt;                 3.5 Left hand        \n 4     5028. 121283-0610 Female  27.5 &lt;NA&gt;                 3.5 Right hand       \n 5     1534. 090189-0422 Woman   22.5 Mexican              4.5 Right hand       \n 6     4568. 020487-3860 Female  24.5 &lt;NA&gt;                 2.5 Right hand       \n 7     2348. 041287-8106 Female  23.5 Caribbean Islan…     3.5 Right hand       \n 8      272. 130765-7114 Woman   46.5 &lt;NA&gt;                 2.5 Right hand       \n 9     4052. 020166-4680 Female  45.5 &lt;NA&gt;                 3.5 Left hand        \n10     5308. 101188-3148 Female  22.5 &lt;NA&gt;                 2.5 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nStandardizing a variable is a statistical process that transforms the variable’s values to have a mean of 0 and a standard deviation of 1. This is often used often used within machinelearning.\nThe most common way of standardizing a values is to subtract the mean from each value and divide by the standard deviation.\nThe standard score (or z-score) of a value x is calculated as:\n\\[z = (x - μ) / σ\\]\n\n\n\n\n\n\nHint\n\n\n\n\n\nIf we would target just a single columns the code could be\n\nsoldiers %&gt;% \n  mutate(\n    weightkg = (weightkg-mean(weightkg, na.rm = TRUE))/sd(weightkg, na.rm=TRUE)\n  )\n\n\n\n\n\n\nShow me the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~(.x - mean(.x, na.rm = TRUE))/sd(.x, na.rm = TRUE)\n    )\n  )\n\n\n\n\n\n\nacross() can do much more than this. For instance, it can invoke multiple functions simultaneously in a single call, like calculating the mean and standard deviation of chosen variables. Or change the names of the newly created columns. Read more here"
  },
  {
    "objectID": "day_1_other.html#getting-started-for-now",
    "href": "day_1_other.html#getting-started-for-now",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\nlibrary(here)"
  },
  {
    "objectID": "day_1_other.html#wide-and-long-data-formats",
    "href": "day_1_other.html#wide-and-long-data-formats",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "In the realm of data science, it’s common to encounter data in what we call a “wide” format. To visualize this, imagine that each measurement of the same attribute is spread across multiple columns instead of being listed down in rows. Consider a scenario where we record a person’s weight at different intervals; in the wide format, we might see individual columns dedicated to each time point, like weightkg_week0, weightkg_week10 and so forth. Essentially, the column labels often carry dual information: the attribute (in this case, ‘weight’) and the condition or time (like ‘week0’ or ‘week10’).\nOften, data is inputted in this wide format for convenience, as it visually follows the chronological order of data collection or event occurrence. However, in the practice of data science, it’s generally more efficient to work with data in what we call a “long” format.\nIn long format, the data is structured such that each row is a unique observation or instance, and each column represents a unique variable or attribute. Continuing with the weight example, instead of having separate columns for each week’s weight (weightkg_week0, weightkg_week10), we would have separate rows for each weight measurement, with a column for the weight (weightkg) and another column for the time point (week).\nThe long format, also known as “tidy” data, provides a systematic and consistent structure, allowing us to work with data more effectively. Plus, many functions and packages in R, such as the popular ggplot2 for data visualization, are designed to work optimally with this long format.\nBut how do we move from wide format to long format? And vice versa? This is where the pivot_longer() and pivot_wider() functions from the tidyverse in R come into play.\n\n\n\nThe code creates a made-up data set. You dont need to understand the code.\n\nIs the data frame in a wide or long format? How can you tell?\n\n\nset.seed(1)\n\nweight_data &lt;- tibble(\n  id = 1:100,\n  sex = sample(c(\"Male\", \"Female\"), size = 100, replace = TRUE),\n  weightkg_week0 = rnorm(100, mean = 95, sd = 5)) %&gt;% \n  \n  # Mean wiegh more than women\n  mutate(\n    weightkg_week0 = if_else(\n      sex == \"Male\", weightkg_week0 * rnorm(100, mean = 1.15, sd = 0.3),\n      weightkg_week0\n    )\n  ) %&gt;% \n  \n  # Weight change over weeks\n  mutate(\n    weightkg_week1 = rnorm(100, mean = weightkg_week0*0.96, sd = 0.5), \n    weightkg_week2 = rnorm(100, mean = weightkg_week1*0.97, sd = 0.5),\n    weightkg_week3 = rnorm(100, mean = weightkg_week2*0.98, sd = 0.5), \n    weightkg_week4 = rnorm(100, mean = weightkg_week3*0.99, sd = 0.5),\n    weightkg_week5 = rnorm(100, mean = weightkg_week4, sd = 0.5))\n  \n\nweight_data\n\n\n\n\n\nThis exercise is only here to show you how troublesome it can be to work with data in a wide format. You don’t need to write all the code.\n\n\nShow the code\nweight_data %&gt;% \n  group_by(sex) %&gt;% \n  summarise(week0 = mean(weightkg_week0),\n            week1 = mean(weightkg_week1),\n            # etc. etc.\n            )"
  },
  {
    "objectID": "day_1_other.html#pivot_longer",
    "href": "day_1_other.html#pivot_longer",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The pivot_longer() function takes wide format data and makes it longer by increasing the number of rows and decreasing the number of columns. For example, it can take our weight data from multiple columns (weightkg_week0, weightkg_week10) and collapse them into two columns: one for weight and one for timepoint.\n\n\n\n\n\nShow the code\n?pivot_longer\n\n\n\nWhat does this line in the help file mean?\ncols &lt;tidy-select&gt; Columns to pivot into longer format. ::: {.callout collapse=true} #### Answer This means that you use all the tidyselect functions that you also use with select() when you tell R what columns you to pivot into a longer format. :::\nWhat does the names_to and values_to arguments do?\n\n\n\n\n\n\n\nShow the code\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"))\n\nweight_data_long\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"),\n               names_to = \"week\",\n               values_to = \"weightkg\")\nweight_data_long\n\n\nWe will fix the values in the week column later. For now we are happy with the long data format.\n\n\n\n\n\nassign you results to an object called weight_data_long_sum\n\n\n\nShow the code\nweight_data_long_sum &lt;- weight_data_long %&gt;% \n  group_by(sex, week) %&gt;% \n  summarise(mean = mean(weightkg))\n\nweight_data_long_sum"
  },
  {
    "objectID": "day_1_other.html#pivot_wider",
    "href": "day_1_other.html#pivot_wider",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The pivot_wider() function takes long format data and makes it wider by decreasing the number of rows and increasing the number of columns. For instance, it can spread our long format weight data back into multiple columns for each week’s weight.\n\n\n\n\n\nShow the code\n?pivot_wider\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"week\",\n              values_from = mean)\n\n\n# A tibble: 2 × 7\n# Groups:   sex [2]\n  sex    weightkg_week0 weightkg_week1 weightkg_week2 weightkg_week3\n  &lt;chr&gt;           &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Female           94.7           90.9           88.3           86.4\n2 Male            113.           108.           105.           103. \n# ℹ 2 more variables: weightkg_week4 &lt;dbl&gt;, weightkg_week5 &lt;dbl&gt;\n\n\n\n\n\n\n\n\nShow the code\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"sex\",\n              values_from = mean)\n\n\n# A tibble: 6 × 3\n  week           Female  Male\n  &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n1 weightkg_week0   94.7  113.\n2 weightkg_week1   90.9  108.\n3 weightkg_week2   88.3  105.\n4 weightkg_week3   86.4  103.\n5 weightkg_week4   85.5  102.\n6 weightkg_week5   85.4  102."
  },
  {
    "objectID": "day_1_other.html#more-examples-of-pivot_wider-and-pivot_longer",
    "href": "day_1_other.html#more-examples-of-pivot_wider-and-pivot_longer",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Change it into three variables:\n\nsex (“female”, “male”)\npregnant (“yes”, “no”)\ncount, which is a non-negative integer representing the number of observations.\n\n\npreg &lt;- tribble(\n  ~pregnant, ~male, ~female,\n  \"yes\", NA, 10,\n  \"no\", 20, 12\n)\npreg\n\n\n\nShow the code\npreg %&gt;%\n  pivot_longer(c(male, female), names_to = \"sex\", values_to = \"count\")\n\n\n\n\n\n\ntable2 is a dataset that is load with the tidyverse. Try to type table2 in the console.\ntable2 displays the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000. The data contains values associated with four variables (country, year, cases, and population).\nChange table2 into the output below:\n\n\nShow the code\ntable2 %&gt;% \n  pivot_wider(names_from = type,\n              values_from = count)\n\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583"
  },
  {
    "objectID": "day_1_other.html#join",
    "href": "day_1_other.html#join",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The join functions in the dplyr package in R are used to combine two dataframes based on a shared key (or set of keys). There are several types of joins, each with their own use cases:\n\ninner_join(): This returns only the rows in which the key exists in both dataframes.\nleft_join(): This returns all the rows from the first (left-hand) dataframe, and any rows from the second (right-hand) dataframe that match. If there’s no match, the columns for the right-hand dataframe will be filled with NA.\nright_join(): This is the reverse of left_join(). It returns all the rows from the second (right-hand) dataframe, and any rows from the first (left-hand) dataframe that match. If there’s no match, the columns for the left-hand dataframe will be filled with NA.\nfull_join(): This returns all rows from both dataframes. If there’s no match, the columns for the other dataframe will be filled with NA.\nsemi_join(): This returns all rows from the first (left-hand) dataframe where there are matching values in the second dataframe, but it doesn’t add any columns from the second dataframe.\nanti_join(): This returns all rows from the first (left-hand) dataframe where there are not matching values in the second dataframe. It also doesn’t add any columns from the second dataframe.\n\nThese functions are essential tools for merging and manipulating data in R, allowing you to effectively combine and cross-reference information from multiple dataframes.\n\nRead the slides from Day 1 to see code examples.\n\nRun this code to get example data\n\nset.seed(1)\nA &lt;- tibble(id = c(1:5, 7:8),\n            sex = sample(c(\"Male\", \"Female\"), 7, replace = TRUE),\n            nr_of_orders = sample(5:10, 7, replace = TRUE))\nB &lt;- tibble(id = 1:6,\n            age = sample(25:75, 6),\n            total_order_value = sample(5:50, 6)*100)\n\n\n\n\n\n\nShow the code\nanti_join(A, B)\nanti_join(B, A)\n\n\n\n\n\n\n\nsemi_join(A, B)\n\n\n\n\n\n\n\nShow the code\nleft_join(A, B)\n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  arrange(id)\n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) \n\n\n\n\n\n\n\n\nShow the code\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) %&gt;% \n  group_by(sex) %&gt;% \n  summarise(\n    mean_avg_order_value = mean(avg_order_value, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "day_1_other.html#across",
    "href": "day_1_other.html#across",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Restart R Load the tidyverse and the here package\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(here)\n\n\nLoad the soldiers data set and assign it to an object called soliders\n\n\nShow the code\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\nThe across() function is part of the dplyr package in R and is used for applying a function (or functions) across multiple columns in a dataframe.\nacross() is particularly useful when you want to perform the same operation on multiple columns but don’t want to write out each operation individually. It works in combination with mutate() and summarise().\nVery importantly the .cols argument allows you to use the tidyselect functions that you are now familiar with.\nHere’s a basic example of its usage.\nLet’s say we want to take the mean of weightkg and earlength in the soldiers dataframe.\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = mean)                         # What function to apply - Notice that mean is not written round()\n    )\n\nYou can see that the mean of weightkg is NA. This is because is has missings values and mean() defaults to na.rm = FALSE. If we want to change this, we have to write a slightly more complicated code. In the following code you will find two new things:\n\n~ You tell R - “I am going to show you a function”\n.x You tell R - “Put the column that you have selected here”\n\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ mean(.x, na.rm = TRUE))     # What function to apply\n    )\n\n.x can also be used outside of a function. Lets say we want to double all the values instead of taking the mean\n\nsoldiers %&gt;% \n  mutate(across(                         # Notice now we use mutate() instead of summarise()\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ .x * 2                           \n    )) \n\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  mutate(across(\n    .cols = contains(\"circumference\"), \n    .fns = ~.x *0.393701))\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1      1017 151168-2263 Male      41 &lt;NA&gt;                   1 Right hand       \n 2      4775 210475-1945 Man       35 &lt;NA&gt;                   1 Left hand        \n 3      2177 290568-1069 Male      42 &lt;NA&gt;                   2 Left hand        \n 4      5026 121283-0610 Female    26 &lt;NA&gt;                   2 Right hand       \n 5      1533 090189-0422 Woman     21 Mexican                3 Right hand       \n 6      4567 020487-3860 Female    23 &lt;NA&gt;                   1 Right hand       \n 7      2347 041287-8106 Female    22 Caribbean Islan…       2 Right hand       \n 8       270 130765-7114 Woman     45 &lt;NA&gt;                   1 Right hand       \n 9      4050 020166-4680 Female    44 &lt;NA&gt;                   2 Left hand        \n10      5307 101188-3148 Female    21 &lt;NA&gt;                   1 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nYou can also target columns based on their type (logical, double, character, factor, numeric). Using the functions is.logical(), is.double(), etc.. However, you need to use them inside the function where()\nIn this example, we change all character columns to factors (You will learn about the column types on day 3). where(is.character) selects the columns where the condition is true (i.e., the column is character), and as.factor is the function that gets applied to these columns. As a result, all character columns get converted to factor.\n\nsoldiers %&gt;% \n  mutate(across(\n    .cols = where(is.character), # What columns to target - notice is.character is not written is.charater()\n    .fns = as.factor             # What function to apply - notice as.factor is written without ()                           \n    )) \n\n\n\n\n\n\n\nShow the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~.x+1.5\n    )\n  )\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1     1018. 151168-2263 Male    42.5 &lt;NA&gt;                 2.5 Right hand       \n 2     4776. 210475-1945 Man     36.5 &lt;NA&gt;                 2.5 Left hand        \n 3     2178. 290568-1069 Male    43.5 &lt;NA&gt;                 3.5 Left hand        \n 4     5028. 121283-0610 Female  27.5 &lt;NA&gt;                 3.5 Right hand       \n 5     1534. 090189-0422 Woman   22.5 Mexican              4.5 Right hand       \n 6     4568. 020487-3860 Female  24.5 &lt;NA&gt;                 2.5 Right hand       \n 7     2348. 041287-8106 Female  23.5 Caribbean Islan…     3.5 Right hand       \n 8      272. 130765-7114 Woman   46.5 &lt;NA&gt;                 2.5 Right hand       \n 9     4052. 020166-4680 Female  45.5 &lt;NA&gt;                 3.5 Left hand        \n10     5308. 101188-3148 Female  22.5 &lt;NA&gt;                 2.5 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nStandardizing a variable is a statistical process that transforms the variable’s values to have a mean of 0 and a standard deviation of 1. This is often used often used within machinelearning.\nThe most common way of standardizing a values is to subtract the mean from each value and divide by the standard deviation.\nThe standard score (or z-score) of a value x is calculated as:\n\\[z = (x - μ) / σ\\]\n\n\n\n\n\n\nHint\n\n\n\n\n\nIf we would target just a single columns the code could be\n\nsoldiers %&gt;% \n  mutate(\n    weightkg = (weightkg-mean(weightkg, na.rm = TRUE))/sd(weightkg, na.rm=TRUE)\n  )\n\n\n\n\n\n\nShow me the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~(.x - mean(.x, na.rm = TRUE))/sd(.x, na.rm = TRUE)\n    )\n  )\n\n\n\n\n\n\nacross() can do much more than this. For instance, it can invoke multiple functions simultaneously in a single call, like calculating the mean and standard deviation of chosen variables. Or change the names of the newly created columns. Read more here"
  },
  {
    "objectID": "day_1_quarto_documents.html#quarto-documents",
    "href": "day_1_quarto_documents.html#quarto-documents",
    "title": "quarto documents",
    "section": "1 quarto documents",
    "text": "1 quarto documents\n\n\nStart a new .qmd document\nFile -&gt; New File -&gt; Quarto Document -&gt;\n\nMake sure the settings are set to “Document” and “HTML” (both are default settings),\nUncheck ‘Use visual markdown editor’\npress “Create”\n\nThe document contains three types of code YAML, R, and Markdown code. Take a look at the document and see if you can recognize the sections with R code.\n\nSave your file (Important: file_name_matters).\n\nPres “Render” and see what happens."
  },
  {
    "objectID": "day_1_quarto_documents.html#yaml-code",
    "href": "day_1_quarto_documents.html#yaml-code",
    "title": "quarto documents",
    "section": "2 YAML code",
    "text": "2 YAML code\nYAML (Yet Another Markup Language).\nThe YAML code is at the very top of the document. It begins with --- and ends with ---. It gives instructions to your computer on how it should build your document. You will learn about YAML code later. For now - notice that it is there and forget about it.\n\nDelete everything in the document except the YAML code"
  },
  {
    "objectID": "day_1_quarto_documents.html#markdown-code",
    "href": "day_1_quarto_documents.html#markdown-code",
    "title": "quarto documents",
    "section": "3 Markdown code",
    "text": "3 Markdown code\nMarkdown is a simple, text-based language used to style text on the web. You control the display of text by adding non-intrusive symbols: headings are made with hashtags (#), bold text with asterisks (*) or underscores (_), links with brackets and parentheses, among others. It’s quick to learn and write.\n\n\nHeadlines\nHeadlines are made using one or more # signs followed by a space\n# Largest headline\n## Second largest headline\n### Third largest headline\n##### Smallest headline possible.\n\nPractice making different headlines.\n\n\n\n\nBold and Italic\n*text* becomes text\n**text** becomes text\n***text*** becomes text\n\nPractice writing something in italics and bold\n\n\n\n\nNew lines\nTo break a line in R Markdown and have it appear in your output, use two trailing spaces and then hit return.\nIf you want a hard line break end your lines with a \\\n\nPractice making line-breaks.\n\n\n\n\nMarkdown Code\nYou can more about Markdown code here"
  },
  {
    "objectID": "day_1_quarto_documents.html#r-code",
    "href": "day_1_quarto_documents.html#r-code",
    "title": "quarto documents",
    "section": "4 R code",
    "text": "4 R code\n\n\nR code chunks\nInsert a code chunk in your document (Default CTRL+Alt+I)\nIf pressing CTRL+Alt+I doesn’t work click Tools -&gt; Command Palette -&gt; and type “Chunk” in the search field\nWhat you write inside the codechunk will be evaluated as R code.\nWrite 2+2 inside the Code chunk you just created, and Render the document.\n\n\n\n\n\n\nsolution\n\n\n\n\n\nYour code block should look something like this:\n```{r}\n2+2\n```\n\n\n\n\n\n\nRun Code chunk\nYou don’t need to Render your document in order to see the output of your code.\nPlace the cursor inside the code chunk you just made and Click the green triangle (play-sign) in the right side of the code chunk.\nNotice the output in the console.\nR comes with many inbuilt datasets, one of them is the iris dataset.\nPlot the iris dataset.\nInsert a codechunk, and write plot(iris) inside the codechunk.\nClick the green triangle.\n\n\n\n\n\n\nsolution\n\n\n\n\n\nYour code block should look something like this:\n```{r}\nplot(iris)\n```\n\n\n\n\n\n\n\n\n\nLifehack\n\n\n\npressing ALT+Enter will run the current line or selection.\npressing CTRL+Enter will run the current line or selection and jump to next line.\npressing CTRL+ALT+C will run the current code chunk (instead of just the current line).\n\n\n\n\n\nInline R code\nInline R code allows you to incorporate the results of your R code directly into the text of a document. It is useful because it lets you weave the results of your data analysis directly into your written text, making your documents more reproducible and prevents errors if your data changes.\nInline R code is written within the text and is surrounded by backticks and includes an “r” at the start. `r  3 + 4` will display the result 7 in the rendered document.\n\nUse the function nrow() and inline R code to write a sentence that says how many rows the iris dataset has\n\n\n\n\n\n\n\nsolution\n\n\n\n\n\nThe iris dataset contains `r nrow(iris)` rows\nor\nThe iris dataset contains `r iris %&gt;%  nrow()` rows"
  },
  {
    "objectID": "day_1_settting_up_your_course_project.html",
    "href": "day_1_settting_up_your_course_project.html",
    "title": "Setting up your course project",
    "section": "",
    "text": "1 Setting up your course project\nFollow these instructions step by step:\n\nStart a new project. Think about the name and where you place the project. You are going to be using this project a lot. (Important: project_and_folder_names_matter)\nCreate a folder in your project called raw_data\n\nCreate a folder in your project called clean_data\n\nCreate a folder in your project called scripts\n\nPlace the soldiers.csv file from ItsLearning in the raw_data folder\n\nCreate an R script (File -&gt; New File -&gt; R script), save it in the scripts folder and call it 01_import.R\n\nClose the R script you just created and leave it for now.\n\nThis file and folder structure is a basic setup that will work for most projects. We will return to this later today, and on day 4 you will learn how to improve this setup even further.\n\n\n\nDiscuss with you neighbor what the meaning of this madness can be about?\n\n\n\n\n\n2 Setting up your course project (continued)\n\n\n\n\n\n\nImportant\n\n\n\nYou should not do this before you have completed the wrangling exercises for select(), filter(), summarise(), group_by(), arrange(), and mutate()\n\n\nYou now have the skills to continue the work we started in Section 1.\nThis coming task is important for the rest of your course.\n\nAs you have noticed the soldiers dataset is not perfect when we load it, e.g., Height is measured in inches, weightkg is measured in Kg*10, etc..\nTherefore, we need to change a few things before we can continue our work with this data.\nIt is essential in datascience and research that this process is documented and reproducible.\n\n\n\nOpen the R script 01_import.R that you created in Section 1.\n\nFor the rest of this section you are going to work in this R script.\n\n \n\n\nWrite the necessary code to import the soldiers.csv file and update the data\nWrite comments and explain your code as you solve the steps below\n\nAdd heightcm (height in cm)\nFix weightkg\nExplore the sex variable and fix it\nAdd BMI\nAdd category (level of BMI)\nAdd race - Base the values in race on the description below\nRemove Heightin\nPlace the variables in an order that you like (use relocate())\nMake sure that all changes are assigned to soldiers. Your script should provide you with an updated version of soldiers in the environment pane.\n\n\n\n\n\n\n\nrace in soldiers\n\n\n\n\n\nDODRace is a variable in the soldiers dataset. The description is given below: \nDODRace – Department of Defense Race; a single digit indicating a subject’s self-reported preferred single race where selecting multiple races is not an option. This variable is intended to be comparable to the Defense Manpower Data Center demographic data. Where 1 = White, 2 = Black, 3 = Hispanic, 4 = Asian, 5 = Native American, 6 = Pacific Islander, 8 = Other"
  },
  {
    "objectID": "day_2_ggplot2_basics.html",
    "href": "day_2_ggplot2_basics.html",
    "title": "ggplot2",
    "section": "",
    "text": "Create a new quarto document\nInsert a code chunk and load 2 important libraries\nInsert a new code chunk- Write source(here(\"scripts\", \"01_import.R\")) in the chunk\nDiscuss what the code does and run it\nWrite a short headline to each code chunk\n\n\n\nShow me the code\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#getting-started",
    "href": "day_2_ggplot2_basics.html#getting-started",
    "title": "ggplot2",
    "section": "",
    "text": "Create a new quarto document\nInsert a code chunk and load 2 important libraries\nInsert a new code chunk- Write source(here(\"scripts\", \"01_import.R\")) in the chunk\nDiscuss what the code does and run it\nWrite a short headline to each code chunk\n\n\n\nShow me the code\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#guess-the-output",
    "href": "day_2_ggplot2_basics.html#guess-the-output",
    "title": "ggplot2",
    "section": "1 Guess the output",
    "text": "1 Guess the output\n\nLook at and discuss the code below.\nYou’ll need to guess a little because you haven’t seen all the datasets and functions yet, but use your common sense! See if you can predict what each plot will look like before running the code.\n\nggplot(mpg, aes(cty, hwy)) + geom_point()\n\nggplot(diamonds, aes(carat, price)) + geom_point()\n\nggplot(economics, aes(date, unemploy)) + geom_line()\n\nggplot(mpg, aes(cty)) + geom_histogram()"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#aesthetic-mappings---aes",
    "href": "day_2_ggplot2_basics.html#aesthetic-mappings---aes",
    "title": "ggplot2",
    "section": "2 Aesthetic mappings - aes()",
    "text": "2 Aesthetic mappings - aes()\nUse the mpg dataset.\n\n\n2.1 Explore the columntypes in the mpg dataset\nUse one or more of: ?mpg, head(), glimpse(), summary(), and/or skim()\n\n\nShow me the code\n?mpg\nmpg %&gt;%  head()\nmpg %&gt;%  glimpse()\nmpg %&gt;% skimr::skim()  # or library(skimr) and then mpg %&gt;% skim()\n\n\n\n\n\n2.2 Experiment with the colour, shape, and size aesthetics.\nUse this basic code, and add/change the colour, shape, and size aesthetics.\n\nggplot(mpg, aes(cty, hwy)) + \n  geom_point()\n\n\n\n\n\nWhat happens when you map continuous variables to one or more of the aesthetics?\nWhat about categorical variables?\nWhat happens when you use multiple aesthetics in a plot?\n\n\n\nShow me the code\n## Examples\n\n# Categorial\nggplot(mpg, aes(cty, hwy, colour = class)) + \n  geom_point()\n\n# Continuous \nggplot(mpg, aes(cty, hwy, size = displ)) + \n  geom_point()\n\n# Continuous \nggplot(mpg, aes(cty, hwy, color = hwy)) +  # Notice hwy is mapped to both y axis and color\n  geom_point()\n\n## A continuous variable doesn't work for shape\nggplot(mpg, aes(cty, hwy, shape = displ)) + \n  geom_point()\n\n# Multiple Categorical - a legend for each aesthetic is created\nggplot(mpg, aes(cty, hwy, colour = class, shape = fl)) + \n  geom_point()\n\n\n\n\n\n2.3 What’s gone wrong with this code? Why are the points not blue?\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, color = \"blue\"))\n\n\n\nShow me the code\n# If you want all the points to be colored blute, then color = \"blue\" must be placed outside the aes() function.\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             color = \"blue\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_point-and-geom_smooth",
    "href": "day_2_ggplot2_basics.html#geom_point-and-geom_smooth",
    "title": "ggplot2",
    "section": "3 geom_point() and geom_smooth()",
    "text": "3 geom_point() and geom_smooth()\n\nUse your soldiers dataset\n\n\nExplore the relationship between heightcm and weightkg using geom_point()\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point()\n\n\n\n\n\nColor the points according to BMI\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = BMI))+\n  geom_point()\n\n\n\n\n\nColor the points according to category\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = category))+\n  geom_point()\n\n\n\n\nExplore the relationship between heightcm and weightkg using geom_point() and geom_smooth()\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n\n\n\n\ncolor by sex\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = sex))+\n  geom_point()+\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#facet_wrap",
    "href": "day_2_ggplot2_basics.html#facet_wrap",
    "title": "ggplot2",
    "section": "4 facet_wrap()",
    "text": "4 facet_wrap()\n\nWhat arguments can you use to control how many rows and columns appear in the output?\nWhat does the scales argument in facet_wrap() do? When might you use it?\n\n\n\nExplore the relationship between heightcm and weightkg\n\nUse geom_point() and geom_smooth()\nfacet by sex\ncolor the points by category\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point(aes(color = category))+\n  geom_smooth(method = \"lm\")+\n  facet_wrap(~sex)"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_bar",
    "href": "day_2_ggplot2_basics.html#geom_bar",
    "title": "ggplot2",
    "section": "5 geom_bar()",
    "text": "5 geom_bar()\n\n\nUse geom_bar() to explore how many soldiers of each race there is\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = race))+\n  geom_bar()\n\n\n\n\n\n\nUse geom_bar() to explore how many soldiers are at each Installation\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = Installation))+\n  geom_bar()\n\n# OR - Whats the difference?\n\nsoldiers %&gt;% \n  ggplot(aes(y = Installation))+\n  geom_bar()\n\n\n\n\n\nUse the fill aestetic to color the Installation bars according to race\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, fill = race))+\n  geom_bar()\n\n\n \n\nChange something so that you can visually evaluate if race is equally distributed across the Installations\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, fill = race))+\n  geom_bar(position = \"fill\",   #  All bars have full length/height - this makes it easier to see proportional differences between groups\n           color = \"black\"      #  Adds a black line around each box.\n           )"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_boxplot",
    "href": "day_2_ggplot2_basics.html#geom_boxplot",
    "title": "ggplot2",
    "section": "6 geom_boxplot()",
    "text": "6 geom_boxplot()\n\n\nUse geom_boxplot to explore weightkg across the different Installations\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(x = Installation, y = weightkg))+\n  geom_boxplot()\n\n# OR\n\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot()\n\n\n\n\n\nRemove the outliers from the boxplot (read the documentation)\nAdd some jittered points to give an impression of the nr of soldiers at each installation\nGive the jittered points some transparency (decrease alpha) to avoid overplotting\n\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot(\n    outlier.shape = NA)+\n  geom_jitter(\n    height = 0.2,\n    alpha = 0.1)\n\n\n\n* Use facet_wrap() to split on sex have the plots placed in one column\n\n\nShow me the code\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot(\n    outlier.shape = NA)+\n  geom_jitter(\n    height = 0.2,\n    alpha = 0.1)+\n  facet_wrap(~sex, ncol = 1)"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#annotations-title-legends-etc.",
    "href": "day_2_ggplot2_basics.html#annotations-title-legends-etc.",
    "title": "ggplot2",
    "section": "7 Annotations (title, legends, etc.)",
    "text": "7 Annotations (title, legends, etc.)\n\n\nRead the documentation for labs()\nWhat can we control with this function?\n\n\n\nUse labs() and recreate this plot\nTo create a completely blank plot just type ggplot()\n\n\nShow me the code\nggplot()+\n  labs(x = \"X-axis\",\n       y = \"Y-axis\",\n       title = \"Title\",\n       subtitle = \"Subtitle\",\n       caption = \"Caption\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#themes",
    "href": "day_2_ggplot2_basics.html#themes",
    "title": "ggplot2",
    "section": "8 Themes",
    "text": "8 Themes\n\nWhat theme was used for this plot?\n\nTo recreate the basic plot use: ggplot(mpg, aes(hwy, cty))+ geom_point()\nTry another theme. Type theme_ and try some of the suggestions.\n\n\n\n\n\n\n\n\n\nWant more?\nUse install.packages() to download the ggthemes package. When you have done that add library(ggthemes) to the code chunk where you call your libraries and execute the line.\nWatch the gallery"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#explore-soldiers-further",
    "href": "day_2_ggplot2_basics.html#explore-soldiers-further",
    "title": "ggplot2",
    "section": "9 Explore soldiers further",
    "text": "9 Explore soldiers further\n\nTogether with your neighbor\nCome up with a research question for the dataset\nDiscuss what variables to map\nDiscuss what geoms to use\nFix the labels in your plot (x, y, title, etc..)\nWhen you are done - show your plot to another group and take a look at their plot\nTry to work out the code they must have used to create that plot"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#saving-plots",
    "href": "day_2_ggplot2_basics.html#saving-plots",
    "title": "ggplot2",
    "section": "10 Saving plots",
    "text": "10 Saving plots\nIn your project folder, create a new folder for saving plots and/or tables (e.g. “plots”)\n\n\nread the documentation for ggsave()\n\nWhat does the arguments I have specified below do?\nAre they different from the defaults?\n\n\nggsave(filename = here(\"[YOUR FOLDER]\", \"[THE NAME OF YOUR FILE].png\"), # .png .pdf .jpg are typical options\n       plot = [The name of the ggplot object],                      # \n       dpi = \"retina\", \n       device = NULL                                                # Why can we leave this as NULL?\n       )\n\n\n\n\nCreate a simple plot and save it to your folder using ggsave()\n\nggplot(mpg, aes(hwy, cty))+\n  geom_point()+\n  theme_classic()\n\nggsave(filename = here(\"plots\", \"my_plot.png\"),\n       plot = last_plot(),\n       dpi = \"retina\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#color-and-fill-scales",
    "href": "day_2_ggplot2_basics.html#color-and-fill-scales",
    "title": "ggplot2",
    "section": "11 color and fill scales",
    "text": "11 color and fill scales\n\n\nPut a different fill scale on this plot\n\nstarwars %&gt;% \n  ggplot(aes(y = skin_color, fill = sex))+\n  geom_bar() \n\n\n\n\n\n\nShow me the code\nstarwars %&gt;% \n  ggplot(aes(y = skin_color, fill = sex))+\n  geom_bar() +\n  scale_fill_brewer(type = \"qual\", palette = 3)\n\n\n\n\n\nPut a different color scale on this plot\n\nmtcars %&gt;%\n  ggplot(aes(x = mpg, y = disp, color = hp)) +\n  geom_point(size = 6)\n\n\n\n\n\n\nShow me the code\nmtcars %&gt;%\n  ggplot(aes(x = mpg, y = disp, color = hp)) +\n  geom_point(size = 6) +\n  scale_color_continuous(type = \"viridis\", option = \"magma\")\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graph.\n\n\n\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graphs.\n\n\nHINT\n\nHINT: Think position=?????"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#overplotting",
    "href": "day_2_ggplot2_basics.html#overplotting",
    "title": "ggplot2",
    "section": "12 Overplotting",
    "text": "12 Overplotting\n\nFix this plot\n\nchange alpha\nchange shape\n\n\ndiamonds %&gt;% \n  filter(x&gt;3 & x&lt;9) %&gt;% \n  ggplot(aes(x = x, y = price))+\n  geom_point()\n\n\n\n\n\n\nShow me the code\n# alpha and point\ndiamonds %&gt;% \n  filter(x&gt;3 & x&lt;9) %&gt;% \n  ggplot(aes(x = x, y = price))+\n  geom_point(alpha = 0.2,\n             shape = \".\") # This shape gives each point the size of a pixel"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#arranging-plots",
    "href": "day_2_ggplot2_basics.html#arranging-plots",
    "title": "ggplot2",
    "section": "13 Arranging Plots",
    "text": "13 Arranging Plots\n\nInstall the patchwork package and load it\nUse install.packages() to download the patchwork package. When you have done that add library(patchwork) to the code chunk where you call your libraries and execute the line.\n\n\n\nRun this code and then recreate the plot below\n\np &lt;- ggplot(diamonds)\npf &lt;- ggplot(diamonds %&gt;% filter(carat&lt;3))\np1 &lt;- p + geom_bar(aes(x = cut, fill = clarity), position = \"fill\") +labs(title = \"p1\")\np2 &lt;- p + geom_bar(aes(x = cut, fill = clarity)) +labs(title = \"p2\")\np3 &lt;- pf + geom_histogram(aes(x = carat, fill = clarity), binwidth = 0.1, position = \"fill\", na.rm = TRUE) +labs(title = \"p3\")\np4 &lt;- pf + geom_histogram(aes(x = carat, fill = clarity), binwidth = 0.1, position = \"dodge\", na.rm = TRUE) +labs(title = \"p4\")\n\n\n\nShow me the code\n(p1|p2/(p3+p4)) + plot_layout(guide = \"collect\")\n\n\n\n\n\n\n\n\n\nRead the documentation for plot_annotation()\n\nWhat does the function overall do?\nWhat does the argument tag_levels = 'A' do?\n\n\n\n\nTag the plots with roman numerals, and suffix the numerals with a “.”\n\n\nShow me the code\n(p1|p2/(p3+p4)) + \n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\")\n\n\n\n\n\nAdd a catchy title\n\n\nShow me the code\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\", \n                  title = \"A catchy title\")\n\n\n\n\n\nRemove the small plot titles (p1, p2, p3, p4) from the four plots\nYou need to use the & symbol to do this the smart way You need to use the labs() function You need to set an argument in the labs() function to NULL\n\n\nShow me the code\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\", \n                  title = \"A catchy title\") &\n  labs(title = NULL)\n\n\n\n\n\nApply the theme_void() and the viridis magma fill scale\n\n\nShow me the code\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\",\n                  title = \"A catchy title\") & \n  theme_void() &\n  scale_fill_viridis_d(option = \"magma\")\n\n\n\n\n\nSave the plot to your plot folder\n\n\nShow me the code\nggsave(filename = here(\"plots\", \"my_patchwork_plot.png\"),\n       plot = last_plot(),\n       dpi = \"retina\")"
  },
  {
    "objectID": "day_2_ggplot2_extras.html",
    "href": "day_2_ggplot2_extras.html",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "href": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#gganimate-1",
    "href": "day_2_ggplot2_extras.html#gganimate-1",
    "title": "Extra Material",
    "section": "2 gganimate",
    "text": "2 gganimate\nMost packages have a webpage where the package and its core functions are introduced. Head the gganimate website and read the getting started section. Then continue to exercises here where we will practice using the soldiers dataset that you already know.\nYou need to install gganimate. ::: {.callout-tip collapse=true} #### Installing gganimate\n\ninstall.packages(\"gganimate\")\n\n:::\n\n\nShow me the code\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(gganimate)  # Animate plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\nAnimate the this plot so its shows difference between men and women\n\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)\n\n\n\n\n\nAssign the animation to an object\n\n\n\nShow me the code\n# One option\nmy_animation &lt;- soldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  transition_states(sex,\n                    transition_length = 1,\n                    state_length = 2)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")\n\nmy_animation\n\n\n\n\n\nShow me the code\n# Another option\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation, seq_along = sex))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")+\n  transition_states(sex,\n                    transition_length = 0.5,\n                    state_length = 2)+\n  enter_fade()+\n  exit_fly()\n\n\n\n\n\nSave your animation in the plots folder you created earlier\n\n\nShow me the code\nanim_save(\n    filename = here(\"plots\", \"my_animation.gif\"),\n    animation = my_animation\n  )\n\n\n\n\n\nOxboys data\nLoad thenlme package and examine the Oxboys dataset that it comes with.\nYou might need to install the nlme package first.\n\n\nShow me the code\nlibrary(nlme)\nhead(Oxboys)\n?Oxboys\n\n\n\n\nCreate an animation that shows how height changes with age\n\nUse transition_reveal()\n\n\n\nShow me the code\nOxboys %&gt;% \n  ggplot(aes(x = age, y = height))+\n  # geom_boxplot(fill = \"steelblue\", \n  #              alpha = 0.5, \n  #              width = 0.3,\n  #              outlier.shape = NA)+\n  geom_line(aes(group = Subject), color = \"grey\", alpha = 1)+\n  geom_point(aes(group = Subject))+\n  labs(x = \"Standardized age \\n(years)\",\n       y = \"Height\\n(cm)\")+\n  theme_classic()+\n  transition_reveal(age)"
  },
  {
    "objectID": "day_2_ggplot2_extras.html#ggiraph-1",
    "href": "day_2_ggplot2_extras.html#ggiraph-1",
    "title": "Extra Material",
    "section": "3 ggiraph",
    "text": "3 ggiraph\nAnother useful resource for learning R is blogposts. These are often written in a much more accesible language. For learning ggiraph we will use a blogpost written by Albert Rapp. Head to his blogpost about ggiraph and read it. You don’t need to read the sections about shinyapps. When you have done that continue to exercises below.\nYou need to install ggiraph. ::: {.callout-tip collapse=true} #### Installing ggiraph\n\ninstall.packages(\"ggiraph\")\n\n:::\n\n\nLoad the tidyverse, here, ggiraph, patchwork, and the cleaned soldiers dataset\n\n\nShow me the code\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(ggiraph)    # Interactive plots\nlibrary(patchwork)  # Combining plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\n\nExplore Fort Hood, Camp Arnold, and Fort Doughnut\n\nFilter you data to the three camps\nMake a interactive boxplot that shows the name of the installation\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nYou can use the base R functions paste() or paste0() to combine text and values in your tooltip.\nYou can also use glue() from the glue package, but you need to install that package first. In the blogpost Albert uses the glue() function.\n\n\n\n\n\n\n\n\n\nSize of your interactive plot\n\n\n\n\n\nWith the default options, the interactive plots tends to be oversized. Add this option to reduce it\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\n\n\nShow me the code\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")))+\n  labs(y = NULL)+\n  theme_classic()\n\ngirafe(ggobj = my_plot)\n\n\n\n\nAdd an interactive geom_jitter layer.\n\nfacet the plot on sex\nMake a tooltip that gives you the subjectid, BMI, height, weight, biceps circumference, and waist circumference.\n\n\n\n\n\n\n\nHint line breaks\n\n\n\n\n\n“” Gives you a line break\n\n\n\n\n\nShow me the code\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL)+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.3,\n    shape = 21\n  )+\n  theme_classic()\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\nCreate another interactive plot with geom_jitter_interactive()\n\nCombine your new plot with the one you made above using patchwork\nSet the data_id argument to: data_id = subjectid for the points\nUse the options that Alfred suggested in his post (see tip below)\n\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))\n\n\n\n\n\n\nShow me the code\nmy_plot_a &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation, ))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"BMI\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot_b &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = waistcircumference, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"Waist circumference\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot &lt;- my_plot_a + my_plot_b +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))"
  },
  {
    "objectID": "gfx/RR/prefer_text_files.html",
    "href": "gfx/RR/prefer_text_files.html",
    "title": "1 Human-readable files",
    "section": "",
    "text": "1 Human-readable files\nAre always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but complex\nApplication files (.odt, .docx) are often very complex markup files"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R4phd",
    "section": "",
    "text": "Klik for at skifte til dansk."
  },
  {
    "objectID": "index.html#welcome-to-r4phd",
    "href": "index.html#welcome-to-r4phd",
    "title": "R4phd",
    "section": "1 Welcome to R4phd",
    "text": "1 Welcome to R4phd\nThe idea behind this webpage was to form the basis for regular classroom teaching of R, RStudio and the R ecosystem. Primarily with Ph.D. courses based at the University of Southern Denmark in mind.\nYou will find a plethora of guides, examples, videos and FAQs on the internet, but it can be difficult to naviagte and it is not structured for classroom teaching.\n\nYou can start by looking at the table of content in the collapsable menu (top-left hand corner).\n\n\n\n\n\n\nHow to use this website\n\n\n\n\n\n\n2 Operating system – Windows, MacOS or Linux?\nThe teaching material on this site was prepared mainly on a Linux computer.\nIf you use Microsoft Windows or Apple MacOS you should expect things to look sightly different here, from how they appear on your own screen.\nIt should not give rise to any important issues however, as R and RStudio work very well and almost identically on all three operating systems. None-the-less, where I am aware of any real differences between the operating systems, I will illustrate it using three tabs in the following way (click the relevant tab):\n\nWindowsMacOSLinux\n\n\n…Windows specific content\n\n\n…MacOS specific content\n\n\n…Linux specific content\n\n\n\n\n\n3 Exercises\nOn occasion you will find small exercises in collapsible boxes, like this:\n(Click the collapsible box below):\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nIf there are important differences between Windows, MacOS and Linux, you can find the information relevant to you:\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n… and similarly, the solution will be found in a collapsible box:\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n\n\n4 Navigation\nThere are several ways to navigate between pages:\n\nIn the left-hand side, you will find a table of content of pages by category\nAt the end of every page in a section, you will find links to the preceding and following pages.\nA search function is available in the top-right hand corner\n\n\n\n5 Comments and questions\nIt is possible to leave comments, suggestions and questions at the end of each page – please help improve the R4PhD content by doing so:\n\nYou will need a github account, which can be created free of charge and which will probably come in handy at later time.\nAlso note, that as pages on the R4PhD site are paired in English and Danish, comments will appear on both pages – stick to English if possible.\n\nWe also recommend using Stack Overflow as great starting point for getting support when you run into trouble. We have created a Stack Overflow for Teams group specifically for this class but, by all means, use the general Stack Overflow community – you will find help is forthcoming very quickly, if you can word your questions succinctly.\nIt is possible to create a separate account in Stack Overflow, or you can just log in using the GitHub account you just created (?) or alternatively a Google or Facebook account."
  },
  {
    "objectID": "index.html#operating-system-windows-macos-or-linux",
    "href": "index.html#operating-system-windows-macos-or-linux",
    "title": "R4phd",
    "section": "2 Operating system – Windows, MacOS or Linux?",
    "text": "2 Operating system – Windows, MacOS or Linux?\nThe teaching material on this site was prepared mainly on a Linux computer.\nIf you use Microsoft Windows or Apple MacOS you should expect things to look sightly different here, from how they appear on your own screen.\nIt should not give rise to any important issues however, as R and RStudio work very well and almost identically on all three operating systems. None-the-less, where I am aware of any real differences between the operating systems, I will illustrate it using three tabs in the following way (click the relevant tab):\n\nWindowsMacOSLinux\n\n\n…Windows specific content\n\n\n…MacOS specific content\n\n\n…Linux specific content"
  },
  {
    "objectID": "index.html#exercises",
    "href": "index.html#exercises",
    "title": "R4phd",
    "section": "3 Exercises",
    "text": "3 Exercises\nOn occasion you will find small exercises in collapsible boxes, like this:\n(Click the collapsible box below):\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nIf there are important differences between Windows, MacOS and Linux, you can find the information relevant to you:\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n… and similarly, the solution will be found in a collapsible box:\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen"
  },
  {
    "objectID": "index.html#navigation",
    "href": "index.html#navigation",
    "title": "R4phd",
    "section": "4 Navigation",
    "text": "4 Navigation\nThere are several ways to navigate between pages:\n\nIn the left-hand side, you will find a table of content of pages by category\nAt the end of every page in a section, you will find links to the preceding and following pages.\nA search function is available in the top-right hand corner"
  },
  {
    "objectID": "index.html#comments-and-questions",
    "href": "index.html#comments-and-questions",
    "title": "R4phd",
    "section": "5 Comments and questions",
    "text": "5 Comments and questions\nIt is possible to leave comments, suggestions and questions at the end of each page – please help improve the R4PhD content by doing so:\n\nYou will need a github account, which can be created free of charge and which will probably come in handy at later time.\nAlso note, that as pages on the R4PhD site are paired in English and Danish, comments will appear on both pages – stick to English if possible.\n\nWe also recommend using Stack Overflow as great starting point for getting support when you run into trouble. We have created a Stack Overflow for Teams group specifically for this class but, by all means, use the general Stack Overflow community – you will find help is forthcoming very quickly, if you can word your questions succinctly.\nIt is possible to create a separate account in Stack Overflow, or you can just log in using the GitHub account you just created (?) or alternatively a Google or Facebook account."
  },
  {
    "objectID": "index_da.html",
    "href": "index_da.html",
    "title": "R4phd",
    "section": "",
    "text": "Click to switch to English"
  },
  {
    "objectID": "index_da.html#velkommen-til-r4phd",
    "href": "index_da.html#velkommen-til-r4phd",
    "title": "R4phd",
    "section": "1 Velkommen til R4phd",
    "text": "1 Velkommen til R4phd\nDet var tanken med denne webside at danne basis for almindelig ‘klasseværelses’ undervisning i brugen af R, RStudio og resten af R-økosystemet. Mest med tanke for PhD kurser og med udgangspunktet i Sundhedsvidenskab på Syddansk universitet i Odense.\nDer findes i forvejen et overflødighedshorn af vejledninger, eksempler, videoer, FAQ’s og mere rundt omkring på internettet, men det kan være svært at finde rundt i og det er overvejende på Engelsk.\n\nDu kan starte ved at kigge i indholdsfortegnelsen i fold-ud menuen (øverst til venstre).\n\n\n\n\n\n\nSådan bruger du hjemmesiden\n\n\n\n\n\n\n2 Styresystem – Windows, MacOS eller Linux?\nUndervisningsmaterialet her på siden er lavet på en Linux computer.\nHvis du bruger Microsoft Windows eller Apple MacOS må du derfor forvente at mine video eksempler ser lidt anderledes ud end de gør på din egen skærm.\nDet burde ikke give anledning til problemer da R og RStudio fungerer fint og næsten ens på alle tre styresystemer, men der hvor jeg er bekendt med forskelle mellem styresystemerne vil jeg gøre opmærksom på det med tre forskellige faneblade på denne måde (klik på den relevante fane):\n\nWindowsMacOSLinux\n\n\n…Windows specifikt indhold\n\n\n…MacOS specifikt indhold\n\n\n…Linux specifikt indhold\n\n\n\n\n\n3 Øvelser\nNogle steder vil du finde små øvelser placeret i fold-ud bokse som denne her.\nKlik på fold-ud boksen herunder:\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nHvis der er forskelle mellem Windows, MacOS og Linux, vil du kunne finde den relevante information:\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n… og løsningen placeret i tilsvarende fold-ud bokse.\n\n\n\n\n\n\nLøsning øvelse #1\n\n\n\n\n\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n\n\n4 Navigation\nDer er flere muligheder for at navigere mellem siderne:\n\nI venstre side findes et indeks over afsnit og underordnede sider\nPå hver side i et afsnit, vil der nederst være links til forrige og næste side\nEn søge funktion er tilgængelig i øverste højre hjørne\n\n\n\n5 Kommentarer og spørgsmål\nDet er muligt at efterlade kommentarer, forslag og spørgsmål nederst på hver side – hjælp venligst med til at forbedre indholdet på R4PhD i kommentar felterne:\n\nDu skal bruge en github konto, som kan oprettes gratis og som formentligt vil vise sig nyttig i fremtiden.\nBemærk også, at da siderne her på R4PhD er skrevet parvist på dansk og engelsk, vil kommentarer vises på begge sider – hvis det er muligt så skriv derfor alle kommentarer på engelsk.\n\nVi anbefaler også at bruge Stack Overflow som indgangspunkt til R’s internet samfund (online community) når du får brug for hjælp. Vi har oprettet en Stack Overflow for Teams gruppe specifikt til denne undervisning, men brug bare det overordnede Stack Overflow. Du vil opdage at du nok skal få hjælp dér, meget hurtigt hvis du kan formulere dine spørgsmål klart og tydeligt.\nDet er muligt at oprette en separat konto ved Stack Overflow, men du kan også logge ind dér med den GitHub konto du netop (?) har oprettet. Alternativt kan du også logge en med en Google eller Facebook konto.\nVi har (indtil videre) besluttet, at bruge Stack Overflow for Teams som platform for kommentarer og spørgsmål.\nDet er muligt at oprette en konto ved Stack Overflow, eller at logge ind med en Google, Github eller Facebook konto, hvis man har sådan én i forvejen."
  },
  {
    "objectID": "index_da.html#styresystem-windows-macos-eller-linux",
    "href": "index_da.html#styresystem-windows-macos-eller-linux",
    "title": "R4phd",
    "section": "2 Styresystem – Windows, MacOS eller Linux?",
    "text": "2 Styresystem – Windows, MacOS eller Linux?\nUndervisningsmaterialet her på siden er lavet på en Linux computer.\nHvis du bruger Microsoft Windows eller Apple MacOS må du derfor forvente at mine video eksempler ser lidt anderledes ud end de gør på din egen skærm.\nDet burde ikke give anledning til problemer da R og RStudio fungerer fint og næsten ens på alle tre styresystemer, men der hvor jeg er bekendt med forskelle mellem styresystemerne vil jeg gøre opmærksom på det med tre forskellige faneblade på denne måde (klik på den relevante fane):\n\nWindowsMacOSLinux\n\n\n…Windows specifikt indhold\n\n\n…MacOS specifikt indhold\n\n\n…Linux specifikt indhold"
  },
  {
    "objectID": "index_da.html#øvelser",
    "href": "index_da.html#øvelser",
    "title": "R4phd",
    "section": "3 Øvelser",
    "text": "3 Øvelser\nNogle steder vil du finde små øvelser placeret i fold-ud bokse som denne her.\nKlik på fold-ud boksen herunder:\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nHvis der er forskelle mellem Windows, MacOS og Linux, vil du kunne finde den relevante information:\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n… og løsningen placeret i tilsvarende fold-ud bokse.\n\n\n\n\n\n\nLøsning øvelse #1\n\n\n\n\n\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen"
  },
  {
    "objectID": "index_da.html#navigation",
    "href": "index_da.html#navigation",
    "title": "R4phd",
    "section": "4 Navigation",
    "text": "4 Navigation\nDer er flere muligheder for at navigere mellem siderne:\n\nI venstre side findes et indeks over afsnit og underordnede sider\nPå hver side i et afsnit, vil der nederst være links til forrige og næste side\nEn søge funktion er tilgængelig i øverste højre hjørne"
  },
  {
    "objectID": "index_da.html#kommentarer-og-spørgsmål",
    "href": "index_da.html#kommentarer-og-spørgsmål",
    "title": "R4phd",
    "section": "5 Kommentarer og spørgsmål",
    "text": "5 Kommentarer og spørgsmål\nDet er muligt at efterlade kommentarer, forslag og spørgsmål nederst på hver side – hjælp venligst med til at forbedre indholdet på R4PhD i kommentar felterne:\n\nDu skal bruge en github konto, som kan oprettes gratis og som formentligt vil vise sig nyttig i fremtiden.\nBemærk også, at da siderne her på R4PhD er skrevet parvist på dansk og engelsk, vil kommentarer vises på begge sider – hvis det er muligt så skriv derfor alle kommentarer på engelsk.\n\nVi anbefaler også at bruge Stack Overflow som indgangspunkt til R’s internet samfund (online community) når du får brug for hjælp. Vi har oprettet en Stack Overflow for Teams gruppe specifikt til denne undervisning, men brug bare det overordnede Stack Overflow. Du vil opdage at du nok skal få hjælp dér, meget hurtigt hvis du kan formulere dine spørgsmål klart og tydeligt.\nDet er muligt at oprette en separat konto ved Stack Overflow, men du kan også logge ind dér med den GitHub konto du netop (?) har oprettet. Alternativt kan du også logge en med en Google eller Facebook konto.\nVi har (indtil videre) besluttet, at bruge Stack Overflow for Teams som platform for kommentarer og spørgsmål.\nDet er muligt at oprette en konto ved Stack Overflow, eller at logge ind med en Google, Github eller Facebook konto, hvis man har sådan én i forvejen."
  },
  {
    "objectID": "installation_background_da.html",
    "href": "installation_background_da.html",
    "title": "R versus RStudio",
    "section": "",
    "text": "Selve R er et kodesprog og udviklingsmiljø som er særligt velegnet til statistik og data-science.\nR kode ser eksempelvis sådan her ud:\n\nmine_nye_data &lt;- read.csv(\"data_mappe/min_data_fil.csv\")\nmine_nye_data &lt;- mine_nye_data %&gt;%\n  select(-cpr_nummer)\nantal_observationer &lt;- mine_nye_data %&gt;% nrow()\nmin_fine_graf &lt;- mine_nye_data %&gt;% ggplot() + geom_histogram()\n\nR er med andre ord det kode sprog du bruger til indlæse og rense dine data, definere dine analyser, generere dine tabeller og grafer, osv, osv.\n\n\n\nDerimod er RStudio et grafisk program som ‘bare’ gør det nemmere at arbejde med R. Det er egentligt ikke nødvendigt at bruge RStudio, men der er en god grund til at næste alle R-brugere gør det.\nRStudio ser eksempelvis sådan her ud:\n\n\n\nScreenshot af RStudio som det så ud mens jeg sad og skrev denne webside … det kan man nemlig også bruge R-økosystemet til :-)\n\n\n\n\n\nR økosystemet er et veritabelt overflødighedshorn af ekstra funktionalitet som kan lægges over på selve R. Det kommer først og fremmest i form af R pakker, som der findes mange tusinde af, men det er også vejledninger, youTube videoer, chat-fora og meget andet. Uanset hvilke problemer du kommer ud for på din R rejse, kan du være næste 100% sikker på at nogen allerede har beskrevet løsningen … den ligger allerede klar til dig derude i R økosystemet.\nMen før vi kaster os over alt det, så skal vi altså først have installeret R."
  },
  {
    "objectID": "installation_background_da.html#r-mig-her-og-r-mig-der",
    "href": "installation_background_da.html#r-mig-her-og-r-mig-der",
    "title": "R versus RStudio",
    "section": "",
    "text": "Selve R er et kodesprog og udviklingsmiljø som er særligt velegnet til statistik og data-science.\nR kode ser eksempelvis sådan her ud:\n\nmine_nye_data &lt;- read.csv(\"data_mappe/min_data_fil.csv\")\nmine_nye_data &lt;- mine_nye_data %&gt;%\n  select(-cpr_nummer)\nantal_observationer &lt;- mine_nye_data %&gt;% nrow()\nmin_fine_graf &lt;- mine_nye_data %&gt;% ggplot() + geom_histogram()\n\nR er med andre ord det kode sprog du bruger til indlæse og rense dine data, definere dine analyser, generere dine tabeller og grafer, osv, osv.\n\n\n\nDerimod er RStudio et grafisk program som ‘bare’ gør det nemmere at arbejde med R. Det er egentligt ikke nødvendigt at bruge RStudio, men der er en god grund til at næste alle R-brugere gør det.\nRStudio ser eksempelvis sådan her ud:\n\n\n\nScreenshot af RStudio som det så ud mens jeg sad og skrev denne webside … det kan man nemlig også bruge R-økosystemet til :-)\n\n\n\n\n\nR økosystemet er et veritabelt overflødighedshorn af ekstra funktionalitet som kan lægges over på selve R. Det kommer først og fremmest i form af R pakker, som der findes mange tusinde af, men det er også vejledninger, youTube videoer, chat-fora og meget andet. Uanset hvilke problemer du kommer ud for på din R rejse, kan du være næste 100% sikker på at nogen allerede har beskrevet løsningen … den ligger allerede klar til dig derude i R økosystemet.\nMen før vi kaster os over alt det, så skal vi altså først have installeret R."
  },
  {
    "objectID": "installation_background_en.html",
    "href": "installation_background_en.html",
    "title": "R versus RStudio",
    "section": "",
    "text": "R itself is a coding language and development environment which is particularly well suited for statistical analyses and data science.\nR code might for example look like this:\n\nmy_new_data &lt;- read.csv(\"data_folder/my_data_file.csv\")\nmy_new_data &lt;- my_new_data %&gt;%\n  select(-cpr_nummer)\nnumber_of_observations &lt;- my_new_data %&gt;% nrow()\nmy_fancy_plot &lt;- my_new_data %&gt;% ggplot() + geom_histogram()\n\nIn other words, R is the code you use to read data, clean and wrangle data, define analyses, generate plots and tables, etc.\n\n\n\nRStudio, on the other hand, is ‘just’ a graphical user interface which makes it easier to work in R. It is, in fact, perfectly possible to do without RStudio, but there are good reasons why most R users use it.\nRStudio might for instance look like this:\n\n\n\nScreenshot of RStudio as it appeared when I was creating this website … you see, it is possible to that in the R ecosystem as well :-)\n\n\n\n\n\nThe R ecosystem, is a veritable plethora of extra functionality that can be added on to of R itself. This is first and foremost in the form of R packages, of which there are many thousands, but it also includes online guides, youTube videos, chat-forums, etc. No matter what problems you encounter on your R journey, you can be almost 100% certain that some has found a solution already … it is already prepared for you, out there in the R ecosystem.\nBut before we get started with all of that, we have to install R."
  },
  {
    "objectID": "installation_background_en.html#r-here-there-and-everywhere",
    "href": "installation_background_en.html#r-here-there-and-everywhere",
    "title": "R versus RStudio",
    "section": "",
    "text": "R itself is a coding language and development environment which is particularly well suited for statistical analyses and data science.\nR code might for example look like this:\n\nmy_new_data &lt;- read.csv(\"data_folder/my_data_file.csv\")\nmy_new_data &lt;- my_new_data %&gt;%\n  select(-cpr_nummer)\nnumber_of_observations &lt;- my_new_data %&gt;% nrow()\nmy_fancy_plot &lt;- my_new_data %&gt;% ggplot() + geom_histogram()\n\nIn other words, R is the code you use to read data, clean and wrangle data, define analyses, generate plots and tables, etc.\n\n\n\nRStudio, on the other hand, is ‘just’ a graphical user interface which makes it easier to work in R. It is, in fact, perfectly possible to do without RStudio, but there are good reasons why most R users use it.\nRStudio might for instance look like this:\n\n\n\nScreenshot of RStudio as it appeared when I was creating this website … you see, it is possible to that in the R ecosystem as well :-)\n\n\n\n\n\nThe R ecosystem, is a veritable plethora of extra functionality that can be added on to of R itself. This is first and foremost in the form of R packages, of which there are many thousands, but it also includes online guides, youTube videos, chat-forums, etc. No matter what problems you encounter on your R journey, you can be almost 100% certain that some has found a solution already … it is already prepared for you, out there in the R ecosystem.\nBut before we get started with all of that, we have to install R."
  },
  {
    "objectID": "installation_check_da.html",
    "href": "installation_check_da.html",
    "title": "Check all is OK",
    "section": "",
    "text": "1 Tjek din R installation\nUnder antagelse af, at du har en fungerende installation af R and RStudio, så gør følgende:\n\n\n\n\n\n\nVis mig hvordan\n\n\n\n\n\n\n\n\n\n1. Først udfold call-out boksen herunder (‘Installations tjekker’)\n2. Dernæst, kopier koden fra kode-feltet ved at klikke på clip-board ikonet i øverste, højre hjørne af feltet som kommer frem når musen er over\n3. Luk for call-out boksen igen\n\n\n\n\n\n\nInstallations tjekker\n\n\n\n\n\n\n# This script is intented to test whether the basic\n# requirements for an R-installation is met, prior\n# to taking part in the R4PHD courses.\n\n### Operating system\n\nsys_name &lt;- Sys.info()[['sysname']]\nsys_version &lt;- Sys.info()[['release']]\nsys_machine &lt;- Sys.info()[['machine']]\n\nif (sys_name %in% c(\"Linux\", \"MacOS\", \"Windows\")) {\n  print(paste0(\"[OK] Your operating system is \", sys_name, \" (version \", sys_version,\")\"))\n} else {\n  print(paste0(\"[WARNING] Your operating system is reported as '\", sys_name, \"'. 'Linux', MacOS' or 'Windows' was expected.\"))\n}\n\n### CPU architecture\n\nif (sys_machine %in% c(\"x86_64\", \"amd64\", \"arm64\", \"x86-64\")) {\n  print(\"[OK] You computer has a 64 bit CPU\")\n} else if (sys_machine %in% c(\"i386\", \"i586\", \"i686\")) {\n  print(\"[WARNING] You computer has an older 32 bit CPU\")\n} else {\n  print(paste0(\"[WARNING] You computer is reported as \",sys_machine,\" ... not what was expected.\"))\n}\n\n### R version\n\nr_version_major &lt;- R.Version()[['major']]\nr_version_string &lt;- R.Version()[['version.string']]\n\nif (r_version_major &gt;= \"4\") {\n  print(paste0(\"[OK] R installation is: \", r_version_string))\n} else {\n  print(paste0(\"[WARNING] An R version 4.x.x is recommended. You installation is \", r_version_string))\n}\n\n### RStudio version\n\nrstudio_type &lt;- rstudioapi::versionInfo()$mode\nrstudio_version &lt;- rstudioapi::versionInfo()$version\n\nif (rstudio_type == \"desktop\") {\n  print(\"[OK] The RStudio installation is 'desktop'\")\n} else {\n  print(paste0(\"[WARNING] The RStudio installation is '\", rstudio_type,\"'. Version 'desktop' is recommended!\"))\n}\n\nif (rstudio_version &gt; \"2023\") {\n  print(paste0(\"[OK] The RStudio version is \",rstudio_version))\n} else {\n  print(paste0(\"[WARNING] The RStudio version is \",rstudio_version, \". Version 2023+ was expected.\"))\n}\n\nall_installed_packages &lt;- .packages(all.available = TRUE)\nrecommended_packages &lt;- c(\"tidyverse\", \"here\", \"skimr\", \"gt\", \"gtExtras\", \"gtsummary\", \"patchwork\", \"naniar\", \"reprex\", \"ggstatsplot\", \"easystats\", \"vroom\")\n\nfor (p in recommended_packages) {\n  if (p %in% all_installed_packages) {\n    print(paste0(\"[OK] '\", p, \"' (package) is installed.\"))\n  } else {\n    print(paste0(\"[WARNING] '\", p, \"' (package) is NOT installed.\"))\n  }\n}\n\n\n\n\n4. Åben RStudio\n5. Lav et nyt, tomt R script dokument via tastatus: CTRL-SHIFT-n eller menu: File / New File / R Script\n6. Indsæt den kopierede kode i dokumentet\n7. Eksekvér hele koden via tastatur: CTRL-SHIFT-s, eller menu: Code / Source eller med musen: klik ‘Source’ i øverste højre hjørne af tekst editor panelet.\n8. Gennemlæs out i konsollen"
  },
  {
    "objectID": "installation_check_en.html",
    "href": "installation_check_en.html",
    "title": "Check all is OK",
    "section": "",
    "text": "1 Check your R installation\nAssuming you now have a working installation of R and RStudio, do the following:\n\n\n\n\n\n\nShow me how to\n\n\n\n\n\n\n\n\n\n1. First unfold the call-out box below (‘Installation checker’)\n2. Next copy the code presented in the code listing by clicking the clip-board icon in the right hand corner of the code listing filed, which appears on mouse-over\n3. Close the call-out box again\n\n\n\n\n\n\nInstallation checker\n\n\n\n\n\n\n# This script is intented to test whether the basic\n# requirements for an R-installation is met, prior\n# to taking part in the R4PHD courses.\n\n### Operating system\n\nsys_name &lt;- Sys.info()[['sysname']]\nsys_version &lt;- Sys.info()[['release']]\nsys_machine &lt;- Sys.info()[['machine']]\n\nif (sys_name %in% c(\"Linux\", \"MacOS\", \"Windows\")) {\n  print(paste0(\"[OK] Your operating system is \", sys_name, \" (version \", sys_version,\")\"))\n} else {\n  print(paste0(\"[WARNING] Your operating system is reported as '\", sys_name, \"'. 'Linux', MacOS' or 'Windows' was expected.\"))\n}\n\n### CPU architecture\n\nif (sys_machine %in% c(\"x86_64\", \"amd64\", \"arm64\", \"x86-64\")) {\n  print(\"[OK] You computer has a 64 bit CPU\")\n} else if (sys_machine %in% c(\"i386\", \"i586\", \"i686\")) {\n  print(\"[WARNING] You computer has an older 32 bit CPU\")\n} else {\n  print(paste0(\"[WARNING] You computer is reported as \",sys_machine,\" ... not what was expected.\"))\n}\n\n### R version\n\nr_version_major &lt;- R.Version()[['major']]\nr_version_string &lt;- R.Version()[['version.string']]\n\nif (r_version_major &gt;= \"4\") {\n  print(paste0(\"[OK] R installation is: \", r_version_string))\n} else {\n  print(paste0(\"[WARNING] An R version 4.x.x is recommended. You installation is \", r_version_string))\n}\n\n### RStudio version\n\nrstudio_type &lt;- rstudioapi::versionInfo()$mode\nrstudio_version &lt;- rstudioapi::versionInfo()$version\n\nif (rstudio_type == \"desktop\") {\n  print(\"[OK] The RStudio installation is 'desktop'\")\n} else {\n  print(paste0(\"[WARNING] The RStudio installation is '\", rstudio_type,\"'. Version 'desktop' is recommended!\"))\n}\n\nif (rstudio_version &gt; \"2023\") {\n  print(paste0(\"[OK] The RStudio version is \",rstudio_version))\n} else {\n  print(paste0(\"[WARNING] The RStudio version is \",rstudio_version, \". Version 2023+ was expected.\"))\n}\n\nall_installed_packages &lt;- .packages(all.available = TRUE)\nrecommended_packages &lt;- c(\"tidyverse\", \"here\", \"skimr\", \"gt\", \"gtExtras\", \"gtsummary\", \"patchwork\", \"naniar\", \"reprex\", \"ggstatsplot\", \"easystats\", \"vroom\")\n\nfor (p in recommended_packages) {\n  if (p %in% all_installed_packages) {\n    print(paste0(\"[OK] '\", p, \"' (package) is installed.\"))\n  } else {\n    print(paste0(\"[WARNING] '\", p, \"' (package) is NOT installed.\"))\n  }\n}\n\n\n\n\n4. Open RStudio\n5. Create a new, empty R Script by keyboard: CTRL-SHIFT-n or menu: File / New File / R Script\n6. Paste the code into the empty document\n7. Execute all the code by keyboard: CTRL-SHIFT-s, or menu: Code / Source or mouse: click ‘Source’ in the top-right hand corner of the text editor panel.\n8. Examine the output in the Console"
  },
  {
    "objectID": "installation_cloud_da.html",
    "href": "installation_cloud_da.html",
    "title": "Posit Cloud",
    "section": "",
    "text": "VIGTIGT\n\n\n\nFirmaet Posit som står bag RStudio (og rigtigt mange R pakker), tilbyder også en online version af RStudio og R økosystemet, som hedder Posit Cloud.\n\nPosit Cloud (formerly RStudio Cloud) lets you access Posit’s powerful set of data science tools right in your browser – no installation or complex configuration required.\n\nDe tilbyder endda en gratis version med visse begrænsninger. Men i udgangspunktet anbefaler vi at du installerer R, RStudio, etc på din egen computer med mindre der er helt særlige grunde til at vælge cloud løsningen."
  },
  {
    "objectID": "installation_cloud_en.html",
    "href": "installation_cloud_en.html",
    "title": "Posit Cloud",
    "section": "",
    "text": "Important\n\n\n\nThe company Posit which develops RStudio (and a great many R packages), also offer an online version of RStudio and the R ecosystem, called Posit Cloud.\n\nPosit Cloud (formerly RStudio Cloud) lets you access Posit’s powerful set of data science tools right in your browser – no installation or complex configuration required.\n\nThey even offer a free (as in free beer) version with some limitations. However, we recommend you install R, RStudio, etc on your own computer unless there are very specific reasons to choose a cloud hosted solution."
  },
  {
    "objectID": "installation_ecosystem_da.html",
    "href": "installation_ecosystem_da.html",
    "title": "The R ecosystem",
    "section": "",
    "text": "R-økosystemet består af rigtigt mange separate programmer der på dynamisk vis kan hentes ned fra internettet og kombineres for at give nye funktioner: Alt fra simpel data manipulation til dynamiske hjemmesider, grafiske animationer og meget mere.\nVi får kun brug for tre af disse elementer:\n\nSelve R som er et udviklingsmiljø (kodesprog) til data-science og statistik\nRStudio som er et grafisk program til at arbejde med R kode\nEn mindre gruppe af R pakker med ekstra funktionalitet\n\nPå de næste sider vil jeg gennemgå hvordan elementerne installeres, et ad gangen."
  },
  {
    "objectID": "installation_ecosystem_da.html#r-økosystemet",
    "href": "installation_ecosystem_da.html#r-økosystemet",
    "title": "The R ecosystem",
    "section": "",
    "text": "R-økosystemet består af rigtigt mange separate programmer der på dynamisk vis kan hentes ned fra internettet og kombineres for at give nye funktioner: Alt fra simpel data manipulation til dynamiske hjemmesider, grafiske animationer og meget mere.\nVi får kun brug for tre af disse elementer:\n\nSelve R som er et udviklingsmiljø (kodesprog) til data-science og statistik\nRStudio som er et grafisk program til at arbejde med R kode\nEn mindre gruppe af R pakker med ekstra funktionalitet\n\nPå de næste sider vil jeg gennemgå hvordan elementerne installeres, et ad gangen."
  },
  {
    "objectID": "installation_ecosystem_da.html#en-bemærkning-om-free-and-open-source-software-foss",
    "href": "installation_ecosystem_da.html#en-bemærkning-om-free-and-open-source-software-foss",
    "title": "The R ecosystem",
    "section": "2 En bemærkning om “Free and Open Source Software” (FOSS)",
    "text": "2 En bemærkning om “Free and Open Source Software” (FOSS)\nR-økosystemet er udviklet og frigivet som Free and Open Source Software og er som sådan frit og gratis tilgængeligt på internettet.\nDet er en kæmpe fordel. Ikke bare på grund af prisen (gratis), men i høj grad også af principielle årsager … principper som burde være af særlig betydning for en forsker … og det opfordres du hermed til at læse lidt mere her:\n\n\n\n\n\n\nMere om FOSS? Klik her!\n\n\n\n\n\nFree and Open Source software udvikles efter de samme grundlæggende principper som den videnskabelige proces: viden (software) udvikles og offentliggøres på en åben og gennemsigtig måde, som gør det muligt for alle at undersøge, kritisere og forbedre resultatet, og at videre-udvikle derpå.\nDet står i kontrast til lukkede og proprietære udviklingsprocesser hvor viden (software) holdes skjult i lukkede formater der forhindrer uafhængig kritisk gennemsyn, men til gengæld understøtter en lukrativ forretningsmodel.\nHvis du vil vide mere, kan du nemt finde information derom på internettet … altså det internet som næsten udelukkende er baseret open source software.\nHvis du i dit forskningsbudget har afsat midler til indkøb af IT udstyr og software, kan du jo overveje at donere et beløb du finder passende til f.eks R projektet."
  },
  {
    "objectID": "installation_ecosystem_en.html",
    "href": "installation_ecosystem_en.html",
    "title": "The R ecosystem",
    "section": "",
    "text": "The R-ecosystem consists of a lot of separate programs which can be downloaded fromthe internet and dynamically combined to provide extra functionality: This encompasses everything from simple data manipulation to the creation of dynamic websites, graphical animations and much more.\nWe will only be using three elements:\n\nR itself, which is a development environment (coding language) for data-science and statistics\nRStudio which is a graphical interface with which to work in R code\nA smaller sample of R packages with extra functionality\n\nIn the following pages, I will guide you to the installation of these three eleents - one at a time."
  },
  {
    "objectID": "installation_ecosystem_en.html#the-r-ecosystem",
    "href": "installation_ecosystem_en.html#the-r-ecosystem",
    "title": "The R ecosystem",
    "section": "",
    "text": "The R-ecosystem consists of a lot of separate programs which can be downloaded fromthe internet and dynamically combined to provide extra functionality: This encompasses everything from simple data manipulation to the creation of dynamic websites, graphical animations and much more.\nWe will only be using three elements:\n\nR itself, which is a development environment (coding language) for data-science and statistics\nRStudio which is a graphical interface with which to work in R code\nA smaller sample of R packages with extra functionality\n\nIn the following pages, I will guide you to the installation of these three eleents - one at a time."
  },
  {
    "objectID": "installation_ecosystem_en.html#a-note-about-free-and-open-source-software-foss",
    "href": "installation_ecosystem_en.html#a-note-about-free-and-open-source-software-foss",
    "title": "The R ecosystem",
    "section": "2 A note about “Free and Open Source Software” (FOSS)",
    "text": "2 A note about “Free and Open Source Software” (FOSS)\nThe R-ecosystem is developed and released as Free and Open Source Software and as such it is freely available to download from the internet at no monetary cost.\nThat is a good thing! Not just because of the price tag (free as in ‘free beer’), but most definitely also on principle (free as in ‘free speech’) … principles, which ought to be of particular importance to researcher … and you are herewith urged to read more below:\n\n\n\n\n\n\nMore about FOSS? Click here!\n\n\n\n\n\nFree and Open Source software is developed according to the same principles as the scietific proces; knowledge (software) is developed and released in an open and transparent manner, which allows everyone to examine, criticize and improve on the results, and to develope it further.\nThis is in contrast to closed and proprietary development processes where knowledge (software) is kept hidden behind closed formats which prevent external review, but allows for a profitable business.\nIf you want to know more, you can easily find a lot information about it on the internet … that is, the internet which runs almost exclusively on open source software.\nIf you have funds set aside within your research budget for software and computer equipment, you might consider donating an amount that you find appropriate to e.g. the R projektet."
  },
  {
    "objectID": "installation_prerequisites_da.html",
    "href": "installation_prerequisites_da.html",
    "title": "Prerequisites",
    "section": "",
    "text": "…du får brug for en computer, ja du gør.\n\nEn nogenlunde moderne computer\n\nTilstrækkeligt med plads (+500 Mb) på din harddisk til installationen\nTilstrækkeligt med RAM (+1 Gb) - jo mere, jo bedre\n\nEt nogenlunde moderne styresystem\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nEn fungerende internetforbindelse\n\nHvis du er i tvivl eller din computer blev udleveret af SDU, SLB, eller OUH, så se venligst herunder:\n\n\n\n\n\n\nSådan kan du finde information om din computer\n\n\n\n\n\nHvis du allerede har en fungerende installation af R kan du bruge denne R kode til at udskrive al relevant information om din computer og dens software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\nHvis du kører Linux ved du garanteret al den slags i forvejen, inklusive din RAMs clock-frekvens og ext4’s blok størrelse, men hvis ikke:\n\n\nKør følgende i en konsol:\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nKør følgende i en konsol:\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nDu har helt sikkert ikke brug for hjælp her …\n\n\n\n\n\n\n\n\n\n\n\n\n\nEr din computer gammel?\n\n\n\n\n\nHvis din computer er af ældre dato, vil det absolut være tilrådeligt at sikre dig personlig hjælp til installation i god tid før du deltager i et R-kursus.\nEllers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\nR-økosystemet er konstant i udvikling og der kommer hele tiden nye funktioner til som du vil gå glip af med en ældre installation.\nIkke fordi din computer absolut skal være sprit ny, men er du i tvivl, så kontakt underviserne i god tid og spørg dem til råds.\nAktuelt (sommeren 2022) vil jeg anbefale at du bruger R version 4.x.x og RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nEr din computer forbundet til et institutions netværk drev?\n\n\n\n\n\nBemærk, at hvis din computer er sat op til at bruge din institutions netværks drev (f.eks Microsoft OneDrive) i modsætning til at bruge dens egen lokale harddisk, så vil tingene køre langsommere … det vil stadigvæk køre, men bare langsommere pga netværks trafikken.\n\n\n\n\n\n\n\n\n\nEr din computer en SDU-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nPå en SDU computer, er det nemmest hvis du kan installere softwaren via SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nEr din computer en SLB-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet.\n\n\n\n\n\n\n\n\n\nEr din computer en OUH-computer?\n\n\n\n\n\nEnkelte OUH ansatte har tidligere fået anvist adgang til en server-baseret R/RStudio løsning, istedet for installation på din egen computer – det fungerer ikke godt. Vi anbefaler klart, en lokal installation på harddisken.\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet."
  },
  {
    "objectID": "installation_prerequisites_da.html#forudsætninger",
    "href": "installation_prerequisites_da.html#forudsætninger",
    "title": "Prerequisites",
    "section": "",
    "text": "…du får brug for en computer, ja du gør.\n\nEn nogenlunde moderne computer\n\nTilstrækkeligt med plads (+500 Mb) på din harddisk til installationen\nTilstrækkeligt med RAM (+1 Gb) - jo mere, jo bedre\n\nEt nogenlunde moderne styresystem\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nEn fungerende internetforbindelse\n\nHvis du er i tvivl eller din computer blev udleveret af SDU, SLB, eller OUH, så se venligst herunder:\n\n\n\n\n\n\nSådan kan du finde information om din computer\n\n\n\n\n\nHvis du allerede har en fungerende installation af R kan du bruge denne R kode til at udskrive al relevant information om din computer og dens software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\nHvis du kører Linux ved du garanteret al den slags i forvejen, inklusive din RAMs clock-frekvens og ext4’s blok størrelse, men hvis ikke:\n\n\nKør følgende i en konsol:\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nKør følgende i en konsol:\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nDu har helt sikkert ikke brug for hjælp her …\n\n\n\n\n\n\n\n\n\n\n\n\n\nEr din computer gammel?\n\n\n\n\n\nHvis din computer er af ældre dato, vil det absolut være tilrådeligt at sikre dig personlig hjælp til installation i god tid før du deltager i et R-kursus.\nEllers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\nR-økosystemet er konstant i udvikling og der kommer hele tiden nye funktioner til som du vil gå glip af med en ældre installation.\nIkke fordi din computer absolut skal være sprit ny, men er du i tvivl, så kontakt underviserne i god tid og spørg dem til råds.\nAktuelt (sommeren 2022) vil jeg anbefale at du bruger R version 4.x.x og RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nEr din computer forbundet til et institutions netværk drev?\n\n\n\n\n\nBemærk, at hvis din computer er sat op til at bruge din institutions netværks drev (f.eks Microsoft OneDrive) i modsætning til at bruge dens egen lokale harddisk, så vil tingene køre langsommere … det vil stadigvæk køre, men bare langsommere pga netværks trafikken.\n\n\n\n\n\n\n\n\n\nEr din computer en SDU-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nPå en SDU computer, er det nemmest hvis du kan installere softwaren via SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nEr din computer en SLB-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet.\n\n\n\n\n\n\n\n\n\nEr din computer en OUH-computer?\n\n\n\n\n\nEnkelte OUH ansatte har tidligere fået anvist adgang til en server-baseret R/RStudio løsning, istedet for installation på din egen computer – det fungerer ikke godt. Vi anbefaler klart, en lokal installation på harddisken.\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet."
  },
  {
    "objectID": "installation_prerequisites_en.html",
    "href": "installation_prerequisites_en.html",
    "title": "Prerequisites",
    "section": "",
    "text": "You’r going to need a computer …\n\nA somewhat modern computer\n\nSufficient storage (+500 Mb) on your harddisk for the installation\nSufficient memory (+1 Gb) - the more, the better\n\nA somehwat modern operating system\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nA working internet connection\n\nIf you are in doubt or your computer was issues by SDU, SLB, or OUH, please see below:\n\n\n\n\n\n\nHow to find the information about your computer\n\n\n\n\n\nIf you already have a working installation of R, you can use this script to list all the relevant information about your computer and its software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\n\n\nIf you’re running Linux, you probably know all this stuff already, down to the clock speed of your RAM and the block size of ext4, but if not:\nRun the following in a terminal, to get information about your operating system (uname), your hardware (lscpu) and disk space (df):\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nRun the following in a terminal, to get information about your operating system (hostnamectl), your hardware (lscpu) and disk space (df):\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nYou definitely do not need any assistance here…\n\n\n\n\n\n\n\n\n\n\n\n\n\nIs you computer an older model?\n\n\n\n\n\nIf your computer is an older model, we recomment that you get someone to help you install R well in time before the R-course.\nOtherwise, you risk spending all your class time wrangling your computer instead of playing with R.\nThe R-ecosystem is constantly developing and new functionality is added all the time, which may be unavailable to you with an older R installation.\nYour computer doesn’t have to be brand spanking new, but if in doubt, contact the teachers before the R course starts.\nAt the time of writting (summer 2022) we reommend you use R version4.x.x and RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nAre you connected to an institutional network drive\n\n\n\n\n\nNote, that if your computer is set up to use an institutional network drive (such as Microsoft OneDrive) as opposed to its local harddisk, it may slow things down somewhat … it will still run, but slower due to the net-traffic overhead.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SDU?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\nOn an SDU issued computer, your best bet is to install software via the SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SLB?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by OUH?\n\n\n\n\n\nSome OUH employees in the past, have been advised to use a server-based R/RStudio solution, in place of a local installation on your computer – that does not work well. We highly recommend a local installation on your own harddrive.\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system."
  },
  {
    "objectID": "installation_prerequisites_en.html#prerequisites",
    "href": "installation_prerequisites_en.html#prerequisites",
    "title": "Prerequisites",
    "section": "",
    "text": "You’r going to need a computer …\n\nA somewhat modern computer\n\nSufficient storage (+500 Mb) on your harddisk for the installation\nSufficient memory (+1 Gb) - the more, the better\n\nA somehwat modern operating system\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nA working internet connection\n\nIf you are in doubt or your computer was issues by SDU, SLB, or OUH, please see below:\n\n\n\n\n\n\nHow to find the information about your computer\n\n\n\n\n\nIf you already have a working installation of R, you can use this script to list all the relevant information about your computer and its software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\n\n\nIf you’re running Linux, you probably know all this stuff already, down to the clock speed of your RAM and the block size of ext4, but if not:\nRun the following in a terminal, to get information about your operating system (uname), your hardware (lscpu) and disk space (df):\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nRun the following in a terminal, to get information about your operating system (hostnamectl), your hardware (lscpu) and disk space (df):\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nYou definitely do not need any assistance here…\n\n\n\n\n\n\n\n\n\n\n\n\n\nIs you computer an older model?\n\n\n\n\n\nIf your computer is an older model, we recomment that you get someone to help you install R well in time before the R-course.\nOtherwise, you risk spending all your class time wrangling your computer instead of playing with R.\nThe R-ecosystem is constantly developing and new functionality is added all the time, which may be unavailable to you with an older R installation.\nYour computer doesn’t have to be brand spanking new, but if in doubt, contact the teachers before the R course starts.\nAt the time of writting (summer 2022) we reommend you use R version4.x.x and RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nAre you connected to an institutional network drive\n\n\n\n\n\nNote, that if your computer is set up to use an institutional network drive (such as Microsoft OneDrive) as opposed to its local harddisk, it may slow things down somewhat … it will still run, but slower due to the net-traffic overhead.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SDU?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\nOn an SDU issued computer, your best bet is to install software via the SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SLB?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by OUH?\n\n\n\n\n\nSome OUH employees in the past, have been advised to use a server-based R/RStudio solution, in place of a local installation on your computer – that does not work well. We highly recommend a local installation on your own harddrive.\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system."
  },
  {
    "objectID": "installation_quick_preparation_da.html",
    "href": "installation_quick_preparation_da.html",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "En egnet computer\nEn fungerende installation af R\nEn fungerende installation af RStudio\nEt antal R pakker installeret\n\nPå de næste sider, hjælper vi dig igennem punkterne, et af gangen … bemærkede du linket nederst til højre på denne side? Følg det link for at komme videre i Installations sektionen."
  },
  {
    "objectID": "installation_quick_preparation_da.html#du-får-brug-for-følgende",
    "href": "installation_quick_preparation_da.html#du-får-brug-for-følgende",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "En egnet computer\nEn fungerende installation af R\nEn fungerende installation af RStudio\nEt antal R pakker installeret\n\nPå de næste sider, hjælper vi dig igennem punkterne, et af gangen … bemærkede du linket nederst til højre på denne side? Følg det link for at komme videre i Installations sektionen."
  },
  {
    "objectID": "installation_quick_preparation_en.html",
    "href": "installation_quick_preparation_en.html",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "A suitable computer\nA working installation of R\nA working installation of RStudio\nA number of R packages\n\nIn the following pages, we will guide your through each of these steps … did you notice the link at the bottom right-hand side of the screen? Follow that link to the next page in the Installation section."
  },
  {
    "objectID": "installation_quick_preparation_en.html#what-you-will-need",
    "href": "installation_quick_preparation_en.html#what-you-will-need",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "A suitable computer\nA working installation of R\nA working installation of RStudio\nA number of R packages\n\nIn the following pages, we will guide your through each of these steps … did you notice the link at the bottom right-hand side of the screen? Follow that link to the next page in the Installation section."
  },
  {
    "objectID": "installation_rstudio_da.html",
    "href": "installation_rstudio_da.html",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUAndre\n\n\nInstallér RStudio via SDU ITs Software Center.\n\n\nDu finder RStudio installations programmet til dit styre system på RStudios hjemmeside\n\n\nDer er fire forskellige programmer du kan hente ned til din computer – sørg for at du henter den som hedder RStudio Desktop Open Source License Free. Klik på den blå ‘DOWNLOAD’ knap.\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link: yderst til venstre ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nDu bliver nu præsenteret for flere muligheder programmer – sørg for at vælge det program som passer til dit styresystem (klik på det blå tekst link i kolonnen ‘Download’).\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link i kolonnen ’Download: Windows, MacOS eller Linux.\n\n\nInstallér derpå programmet som vanligt for dit styresystem."
  },
  {
    "objectID": "installation_rstudio_da.html#hent-og-installer-rstudio",
    "href": "installation_rstudio_da.html#hent-og-installer-rstudio",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUAndre\n\n\nInstallér RStudio via SDU ITs Software Center.\n\n\nDu finder RStudio installations programmet til dit styre system på RStudios hjemmeside\n\n\nDer er fire forskellige programmer du kan hente ned til din computer – sørg for at du henter den som hedder RStudio Desktop Open Source License Free. Klik på den blå ‘DOWNLOAD’ knap.\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link: yderst til venstre ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nDu bliver nu præsenteret for flere muligheder programmer – sørg for at vælge det program som passer til dit styresystem (klik på det blå tekst link i kolonnen ‘Download’).\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link i kolonnen ’Download: Windows, MacOS eller Linux.\n\n\nInstallér derpå programmet som vanligt for dit styresystem."
  },
  {
    "objectID": "installation_rstudio_en.html",
    "href": "installation_rstudio_en.html",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "installation_rstudio_en.html#download-and-install-rstudio",
    "href": "installation_rstudio_en.html#download-and-install-rstudio",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "installation_r_da.html",
    "href": "installation_r_da.html",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nHvis din computer er udleveret af SDU IT, anbefales det at du installerer R via SDUs Software Center.\nLINK?\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for Windows.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for macOS.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR er med al sandsynlighed en del af din foretrukne Linux distributions standard software repositorie. Bruger du en Debian baseret distribution, vil det derfor formentligt være så simpelt som:\n\nuser@linux$ sudo apt install r-base\n\nDerforuden kan du med fordel installere følgende andre pakker hvis du vil bruge R til at generere litteratur referencer (pandoc) og/eller PDF filer (texlive) som output.\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nBruger du en anden distribution, som ikke er baseret på Debian (f.eks Arch eller Fedora) skal du installere tilsvarende pakker fra deres repositorier med deres pakke håndterings funktioner (yum, rpm, etc)"
  },
  {
    "objectID": "installation_r_da.html#installation",
    "href": "installation_r_da.html#installation",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nHvis din computer er udleveret af SDU IT, anbefales det at du installerer R via SDUs Software Center.\nLINK?\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for Windows.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for macOS.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR er med al sandsynlighed en del af din foretrukne Linux distributions standard software repositorie. Bruger du en Debian baseret distribution, vil det derfor formentligt være så simpelt som:\n\nuser@linux$ sudo apt install r-base\n\nDerforuden kan du med fordel installere følgende andre pakker hvis du vil bruge R til at generere litteratur referencer (pandoc) og/eller PDF filer (texlive) som output.\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nBruger du en anden distribution, som ikke er baseret på Debian (f.eks Arch eller Fedora) skal du installere tilsvarende pakker fra deres repositorier med deres pakke håndterings funktioner (yum, rpm, etc)"
  },
  {
    "objectID": "installation_r_da.html#tjek-at-r-er-installeret-og-fungerer",
    "href": "installation_r_da.html#tjek-at-r-er-installeret-og-fungerer",
    "title": "R installation",
    "section": "2 Tjek at R er installeret og fungerer",
    "text": "2 Tjek at R er installeret og fungerer\nHvis installationsprocessen forløb som forventet burde du nu have R installeret på din computer – før vi går videre til at installere RStudio, er det en god ide lige at kontrollere at du nu også har et fungerende R udviklingsmiljø på plads:\n\nWindowsMacOSLinux\n\n\nFor at tjekke om R er installeret skal du først åbne Terminal programmet på din Windows computer:\nÅben Run window dialogen ved at trykke på tasterne Windows + R, i ‘Åben’ feltet i ‘Kør’ vinduet taster du wt (for Windows Terminal) og klikker på OK.\nI Windows Terminal indtaster du nu:\n\n...SKAF BILLEDE FRA EN WINDOWS\n\n\n\nFor at tjekke om R er installeret skal du først åbne Terminal programmet på din Mac computer:\nTerminal kan findes i Utilities under Applications eller du kan trykke Command-space for at åbne Spotlight og indtaste “Terminal” og derpå dobbelt klikke på søge resultatet.\nI MacOS Terminalen indtaster du nu:\n\n...SKAF BILLEDE FRA EN MAC\n\n\n\nÅbn dit favorit command-line interface og afprøve følgende:\n\nuser@linux: R\n\nDit output skulle gerne være noget i stil med:\n\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R."
  },
  {
    "objectID": "installation_r_en.html",
    "href": "installation_r_en.html",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nIf your computer was issued by the SDU IT department, you can install R via SDUs Software Center.\nLINK?\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for Windows.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for MacOS.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR is, in all probablity, already part of your preferred Linux distributions software repositories. If you use a Debian based distribution, it should be as simple as::\n\nuser@linux$ sudo apt install r-base\n\nIf you want to generate literature references (pandoc) and/or generate PDF output (texlive), you probably also want the following software installed:\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nIf you are using another distribution (Arch, Red Hat, etc) you simply need to install the same software using their package managers (yum, rpm, etc)\n\n\n\nYou will find a video guide to R installation"
  },
  {
    "objectID": "installation_r_en.html#installation",
    "href": "installation_r_en.html#installation",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nIf your computer was issued by the SDU IT department, you can install R via SDUs Software Center.\nLINK?\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for Windows.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for MacOS.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR is, in all probablity, already part of your preferred Linux distributions software repositories. If you use a Debian based distribution, it should be as simple as::\n\nuser@linux$ sudo apt install r-base\n\nIf you want to generate literature references (pandoc) and/or generate PDF output (texlive), you probably also want the following software installed:\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nIf you are using another distribution (Arch, Red Hat, etc) you simply need to install the same software using their package managers (yum, rpm, etc)\n\n\n\nYou will find a video guide to R installation"
  },
  {
    "objectID": "installation_r_en.html#check-that-r-is-installed-and-working",
    "href": "installation_r_en.html#check-that-r-is-installed-and-working",
    "title": "R installation",
    "section": "2 Check that R is installed and working",
    "text": "2 Check that R is installed and working\nIf the installation process completed as expected, you should now have a working R environment on your computer – before we go any further, it is a good idea to confirm that:\n\nWindowsMacOSLinux\n\n\nTo confirm that R is installed and working, first open a Terminal on your Windows computer:\nOpen the Run window dialogue by holding the Windows key and pressing R, in the window ‘Execute’ in the field ‘Open’ type wt (for Windows Terminal) and click OK.\nIn the Windows Terminal type the following:\n\n...SKAF BILLEDE FRA EN WINDOWS\n\n\n\nTo confirm that R was installed and working on your MacOS, first open a Terminal:\nYou cna find the Terminal in Utilities under Applications or your can hold down the Command key while pressing space to open Spotlight and enter “Terminal” – then double click the appropriate search result.\nIn the MacOS Terminal type:\n\n...SKAF BILLEDE FRA EN MAC\n\n\n\nOpen your favorite command-line interface and try this:\n\nuser@linux: R\n\nThe output should look something like this:\n\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R."
  },
  {
    "objectID": "installation_r_packages_da.html",
    "href": "installation_r_packages_da.html",
    "title": "R package installation",
    "section": "",
    "text": "Standard installationen af R består af et sæt ‘kerne’ funktioner. I tillæg dertil er det muligt at installere en meget lang række af pakker med ekstra funktioner. Disse pakker udvikles både af firmaet bag RStudio (Posit), af andre firmaer, universiteter og af R brugerne … måske en dag vil du også udvikle og offentliggøre en R pakke?\nNogle af disse pakker er udviklet med et meget specifikt og snævert formål for øje – f.eks Steen Harsteds pakke til at håndtere motion capture data kaldet mocapr. Andre pakker er mere alment anvendelige og nogle af dem vil du stifte bekendtskab med i undervisningen. Det gælder f.eks:\n\ntidyverse – en meta-pakke der gør det nemmere at arbejde med R syntaksen – f.eks brugen af pipes.\nggplot2 – en pakke til at konstruere grafer og plots\nggpubr – en pakke som bygger på ggplot2 pakken med det formål at gøre det nemme at producere grafer som er klar til publikation\n\nDer er et par tekniske ting du skal forstå ift R pakker:\n\n\nFor at kunne installere visse R pakker på Windows operativ systemer, kræves installation af programmet RTools. Du kan læse mere om RTools på (dette link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] som inkluderer link til RTools installationsprogrammet og en mere udførlig vejledning.\nBemærk venligst, at der tidligere har været problemer med at installere RTools på SDU computere, det er derfor en god idé at tjekke om den kan installeres via SDU-ITs Software Center.\n\n\n\nR pakker kan være specifikke ift den underliggende R version – når der kommer en ny version af R kan det med andre ord tage lidt tid for pakke-udviklerne at opdatere deres pakker. Det er ikke altid en fordel at bruge den absolut nyeste version af R – specielt ikke hvis du også bruger nogle niché pakker.\n\n\n\nHvis du vil bruge en R pakke skal den både installeres og indlæses før du kan bruge den.\n\nNår du installerer pakken, hentes den ned og gemmes lokalt på din computer.\nNår du indlæser pakker, læser du den ind i computerens hukommelse.\n\nFørst når pakken er indlæst i computerens hukommelse vil dens funktioner være tilgængelig for brug i din kode.\n\n\n\nLangt de fleste pakker du kan tænkes at få brug for er tilgængelige på internettet fra the Comprehensive R Archive Network – CRAN.\nSkal du installere en sådan pakke kan du vælge at gøre det via RStudios grafiske brugerflade eller via en R kommando i konsollen. Umiddelbart vil vi anbefale at bruge konsollen da det kan give nogle nyttige informationer hvis installationen fejler.\n\n\n\n\n\n\nVideo : Installation af R pakker\n\n\n\n\n\n\n\nVideo\nEksempel på installation af en R pakke"
  },
  {
    "objectID": "installation_r_packages_da.html#hvad-er-en-r-pakke",
    "href": "installation_r_packages_da.html#hvad-er-en-r-pakke",
    "title": "R package installation",
    "section": "",
    "text": "Standard installationen af R består af et sæt ‘kerne’ funktioner. I tillæg dertil er det muligt at installere en meget lang række af pakker med ekstra funktioner. Disse pakker udvikles både af firmaet bag RStudio (Posit), af andre firmaer, universiteter og af R brugerne … måske en dag vil du også udvikle og offentliggøre en R pakke?\nNogle af disse pakker er udviklet med et meget specifikt og snævert formål for øje – f.eks Steen Harsteds pakke til at håndtere motion capture data kaldet mocapr. Andre pakker er mere alment anvendelige og nogle af dem vil du stifte bekendtskab med i undervisningen. Det gælder f.eks:\n\ntidyverse – en meta-pakke der gør det nemmere at arbejde med R syntaksen – f.eks brugen af pipes.\nggplot2 – en pakke til at konstruere grafer og plots\nggpubr – en pakke som bygger på ggplot2 pakken med det formål at gøre det nemme at producere grafer som er klar til publikation\n\nDer er et par tekniske ting du skal forstå ift R pakker:\n\n\nFor at kunne installere visse R pakker på Windows operativ systemer, kræves installation af programmet RTools. Du kan læse mere om RTools på (dette link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] som inkluderer link til RTools installationsprogrammet og en mere udførlig vejledning.\nBemærk venligst, at der tidligere har været problemer med at installere RTools på SDU computere, det er derfor en god idé at tjekke om den kan installeres via SDU-ITs Software Center.\n\n\n\nR pakker kan være specifikke ift den underliggende R version – når der kommer en ny version af R kan det med andre ord tage lidt tid for pakke-udviklerne at opdatere deres pakker. Det er ikke altid en fordel at bruge den absolut nyeste version af R – specielt ikke hvis du også bruger nogle niché pakker.\n\n\n\nHvis du vil bruge en R pakke skal den både installeres og indlæses før du kan bruge den.\n\nNår du installerer pakken, hentes den ned og gemmes lokalt på din computer.\nNår du indlæser pakker, læser du den ind i computerens hukommelse.\n\nFørst når pakken er indlæst i computerens hukommelse vil dens funktioner være tilgængelig for brug i din kode.\n\n\n\nLangt de fleste pakker du kan tænkes at få brug for er tilgængelige på internettet fra the Comprehensive R Archive Network – CRAN.\nSkal du installere en sådan pakke kan du vælge at gøre det via RStudios grafiske brugerflade eller via en R kommando i konsollen. Umiddelbart vil vi anbefale at bruge konsollen da det kan give nogle nyttige informationer hvis installationen fejler.\n\n\n\n\n\n\nVideo : Installation af R pakker\n\n\n\n\n\n\n\nVideo\nEksempel på installation af en R pakke"
  },
  {
    "objectID": "installation_r_packages_en.html",
    "href": "installation_r_packages_en.html",
    "title": "R package installation",
    "section": "",
    "text": "The standard installation of R consists of a set of ‘core’ functions. In addition to those, it is possible to install a large variety of packages with extra functionality. These packages are developed by the company behind RStudio (Posit), by other companies, universities and by R users … perhaps, some day you will write and publish an R package too?\nSome of these packages have a very specific and narrow forus – e.g. Steen Harsteds packages for handling motion capture data called mocapr. Other packages er more generic and you will get to know some of them during the course. For instance:\n\ntidyverse – en meta-pakckage which makes it easier to work with the R syntax – e.g. by using pipes.\nggplot2 – a package for constructing graphs or plots.\nggpubr – a package which extends ggplot2, aiming to make it easier to produce publication ready plots.\n\nThere are just a few technicalities about R packages, that you need to understand:\n\n\nTo install certain R packages on Windows operating systems, you need to install a program called RTools. You can read more about RTools at (this link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] which includes links to the RTools installer and a more detailed tutorial.\nPlease note, that this has previously presented problems for those using SDU issued computers, thus check to see if RTools is available through the SDU IT Software Center.\n\n\n\nR packages are specific to the underlying version of R – when a new version of R is published it may take some time for package developers to update their packages. In other words, depending on the packages you make use of, it is not always a good idea to run the absolute latest release of R, but this is mostly an issue if you used ‘niche’ packages.\n\n\n\nIf you want to make use of an R package, you need to install and load it before it is available.\n\nWhen you install a package, it is downloaded from the internet and stored on your harddrive.\nWhen you load the package, it is read into your computeres RAM memory.\n\nNot until the package is in your computers RAM memory will it be available to your code.\n\n\n\nBy far the majority of packages are available online through the Comprehensive R Archive Network – CRAN.\nIf you want to install a CRAN package you can choose to do so via RStudios graphical user interface or via R in an R console. When installing via the R console, you may get some useful information about the installation process, especially if it fails.\n\n\n\n\n\n\nVideo : Installation of R pakker\n\n\n\n\n\n\n\nVideo\nExample installation of an R package"
  },
  {
    "objectID": "installation_r_packages_en.html#what-is-an-r-package",
    "href": "installation_r_packages_en.html#what-is-an-r-package",
    "title": "R package installation",
    "section": "",
    "text": "The standard installation of R consists of a set of ‘core’ functions. In addition to those, it is possible to install a large variety of packages with extra functionality. These packages are developed by the company behind RStudio (Posit), by other companies, universities and by R users … perhaps, some day you will write and publish an R package too?\nSome of these packages have a very specific and narrow forus – e.g. Steen Harsteds packages for handling motion capture data called mocapr. Other packages er more generic and you will get to know some of them during the course. For instance:\n\ntidyverse – en meta-pakckage which makes it easier to work with the R syntax – e.g. by using pipes.\nggplot2 – a package for constructing graphs or plots.\nggpubr – a package which extends ggplot2, aiming to make it easier to produce publication ready plots.\n\nThere are just a few technicalities about R packages, that you need to understand:\n\n\nTo install certain R packages on Windows operating systems, you need to install a program called RTools. You can read more about RTools at (this link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] which includes links to the RTools installer and a more detailed tutorial.\nPlease note, that this has previously presented problems for those using SDU issued computers, thus check to see if RTools is available through the SDU IT Software Center.\n\n\n\nR packages are specific to the underlying version of R – when a new version of R is published it may take some time for package developers to update their packages. In other words, depending on the packages you make use of, it is not always a good idea to run the absolute latest release of R, but this is mostly an issue if you used ‘niche’ packages.\n\n\n\nIf you want to make use of an R package, you need to install and load it before it is available.\n\nWhen you install a package, it is downloaded from the internet and stored on your harddrive.\nWhen you load the package, it is read into your computeres RAM memory.\n\nNot until the package is in your computers RAM memory will it be available to your code.\n\n\n\nBy far the majority of packages are available online through the Comprehensive R Archive Network – CRAN.\nIf you want to install a CRAN package you can choose to do so via RStudios graphical user interface or via R in an R console. When installing via the R console, you may get some useful information about the installation process, especially if it fails.\n\n\n\n\n\n\nVideo : Installation of R pakker\n\n\n\n\n\n\n\nVideo\nExample installation of an R package"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#data-transformation-with-dplyr",
    "href": "presentations/Day_1_wrangling_presentation.html#data-transformation-with-dplyr",
    "title": "Day 1 - Data Wrangling",
    "section": "Data transformation with dplyr",
    "text": "Data transformation with dplyr\n\n\nWe will use the dplyr package that loads with the tidyverse.\nAt current dplyr contains 293 functions.\nThe main 6 functions in dplyr that we will use today are:\n\nselect()\nfilter()\nsummarise()\ngroup_by()\nmutate()\ncount()\n\ndplyr cheatsheet"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#load-the-dplyr-library",
    "href": "presentations/Day_1_wrangling_presentation.html#load-the-dplyr-library",
    "title": "Day 1 - Data Wrangling",
    "section": "Load the dplyr library",
    "text": "Load the dplyr library\n\nlibrary(tidyverse) \n\ndplyr is one of the many packages that are loaded with the tidyverse"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#take-a-look-at-the-starwars-dataset",
    "href": "presentations/Day_1_wrangling_presentation.html#take-a-look-at-the-starwars-dataset",
    "title": "Day 1 - Data Wrangling",
    "section": "Take a look at the starwars dataset",
    "text": "Take a look at the starwars dataset\nstarwars is one of several datasets that loads when you load the tidyverse.\nThe datasets are great for practising.\n\nWe call the dataset by typing its name.\n\n\n\nstarwars\n\n\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 &lt;NA&gt;       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#select-1",
    "href": "presentations/Day_1_wrangling_presentation.html#select-1",
    "title": "Day 1 - Data Wrangling",
    "section": "select()",
    "text": "select()\nFunction:\nSelect a subset of columns (variables). Gets rid of all other columns. You can refer to the columns by the column position (first column) or by name.\nThe order in which you list the column names/positions is the order that the columns will be displayed.\n\nExample\nIn the starwars dataset, only keep the columns name and homeworld:\n\n\n\n\nstarwars %&gt;% \n  select(name, homeworld)\n\n\n# A tibble: 87 × 2\n   name               homeworld\n   &lt;chr&gt;              &lt;chr&gt;    \n 1 Luke Skywalker     Tatooine \n 2 C-3PO              Tatooine \n 3 R2-D2              Naboo    \n 4 Darth Vader        Tatooine \n 5 Leia Organa        Alderaan \n 6 Owen Lars          Tatooine \n 7 Beru Whitesun lars Tatooine \n 8 R5-D4              Tatooine \n 9 Biggs Darklighter  Tatooine \n10 Obi-Wan Kenobi     Stewjon  \n# ℹ 77 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#select-2",
    "href": "presentations/Day_1_wrangling_presentation.html#select-2",
    "title": "Day 1 - Data Wrangling",
    "section": "select()",
    "text": "select()\n\nOnly keep the first five columns:\n\nstarwars %&gt;% select(1:5)\nstarwars %&gt;% select(1,2,3,4,5)\n\n\nKeep all of the columns except for name:\n\nstarwars %&gt;% select(-name)\n\n\nKeep all of the columns except for name and mass:\n\nstarwars %&gt;% select(-name, -mass)\n\n\nKeep all of the columns except for the first five columns:\n\nstarwars %&gt;% select (-1,-2,-3,-4,-5)\nstarwars %&gt;% select(-(1:5))"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#select-and-the-tidyselect-helpers",
    "href": "presentations/Day_1_wrangling_presentation.html#select-and-the-tidyselect-helpers",
    "title": "Day 1 - Data Wrangling",
    "section": "select() and the tidyselect helpers",
    "text": "select() and the tidyselect helpers\n\n\n\nstarts_with()\nends_with()\ncontains()\n\n\nAre three of the tidyselect helper functions.\nYou can use them inside the select() function.\n\nExample\nselect all columns that start with “s”\n\n\nstarwars %&gt;% \n  select(starts_with(\"s\"))\n\n\n# A tibble: 87 × 4\n   skin_color  sex    species starships\n   &lt;chr&gt;       &lt;chr&gt;  &lt;chr&gt;   &lt;list&gt;   \n 1 fair        male   Human   &lt;chr [2]&gt;\n 2 gold        none   Droid   &lt;chr [0]&gt;\n 3 white, blue none   Droid   &lt;chr [0]&gt;\n 4 white       male   Human   &lt;chr [1]&gt;\n 5 light       female Human   &lt;chr [0]&gt;\n 6 light       male   Human   &lt;chr [0]&gt;\n 7 light       female Human   &lt;chr [0]&gt;\n 8 white, red  none   Droid   &lt;chr [0]&gt;\n 9 light       male   Human   &lt;chr [1]&gt;\n10 fair        male   Human   &lt;chr [5]&gt;\n# ℹ 77 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-select",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-select",
    "title": "Day 1 - Data Wrangling",
    "section": "Lets practice using select()",
    "text": "Lets practice using select()"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#filter-1",
    "href": "presentations/Day_1_wrangling_presentation.html#filter-1",
    "title": "Day 1 - Data Wrangling",
    "section": "filter()",
    "text": "filter()\nFunction:\nOnly keep specific rows of data that meet the specified requirement(s).\n\nExample\nIn the starwars dataset, only Keep the rows where height is above 150:\n\n\n\nstarwars %&gt;% \n  filter(height&gt;150)\n\n\n\n# A tibble: 69 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   &lt;chr&gt;     &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n 3 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 4 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 5 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 6 Biggs D…    183    84 black      light      brown           24   male  mascu…\n 7 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n 8 Anakin …    188    84 blond      fair       blue            41.9 male  mascu…\n 9 Wilhuff…    180    NA auburn, g… fair       blue            64   male  mascu…\n10 Chewbac…    228   112 brown      unknown    blue           200   male  mascu…\n# ℹ 59 more rows\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#filter-2",
    "href": "presentations/Day_1_wrangling_presentation.html#filter-2",
    "title": "Day 1 - Data Wrangling",
    "section": "filter()",
    "text": "filter()\nWorks with the logical operators:\n\n\n\n\n\n\n\nOperator\nAction\n\n\n\n\n!\nNOT\n\n\n==\nEQUAL TO\n\n\n!=\nNOT EQUAL TO\n\n\n|\nOR\n\n\n&gt;\nGREATER THAN\n\n\n&gt;=\nGREATER THAN OR EQUAL TO\n\n\n&lt;\nLESS THAN\n\n\n&lt;=\nLESS THAN OR EQUAL TO\n\n\n&\nAND\n\n\n\n\n\nActually, most functions that output either TRUE or FALSE e.g., is.NA() will work within filter()\nFurther reading"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#filter-3",
    "href": "presentations/Day_1_wrangling_presentation.html#filter-3",
    "title": "Day 1 - Data Wrangling",
    "section": "filter()",
    "text": "filter()\nKeep all rows where gender is masculine:\nnotice == not =\nnotice “masculine” not masculine\n\nstarwars %&gt;% filter(gender == \"masculine\")\n\n\nKeep all rows where hair_color is missing (NA value)\n\nstarwars %&gt;% filter(is.na(hair_color))\n\n\nKeep all rows where hair_color is “blond” AND eye_color is “blue”\n\nstarwars %&gt;% filter(hair_color == \"blond\" &  eye_color == \"blue\")\nstarwars %&gt;% filter(hair_color == \"blond\" ,  eye_color == \"blue\") \n\n\nKeep all rows where hair_color is “blond” OR eye_color is “blue”\n\nstarwars %&gt;% filter(hair_color == \"blond\" |  eye_color == \"blue\")\n\n\nKeep all rows where hair_color is either “blond” OR “white”\n\nstarwars %&gt;% filter(hair_color %in% c(\"blond\", \"white\"))"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-filter-function",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-filter-function",
    "title": "Day 1 - Data Wrangling",
    "section": "Lets Practice using the filter() function",
    "text": "Lets Practice using the filter() function"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#summarise-1",
    "href": "presentations/Day_1_wrangling_presentation.html#summarise-1",
    "title": "Day 1 - Data Wrangling",
    "section": "summarise()",
    "text": "summarise()\nFunction:\nCollapses all rows and returns a one-row summary.\n\nExample\n\nIn the diamonds dataset, calculate the mean price\n\ndiamonds %&gt;% \n  summarise(\n    avg_price = mean(price))\n\n\n\n# A tibble: 1 × 1\n  avg_price\n      &lt;dbl&gt;\n1     3933."
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#summarise-2",
    "href": "presentations/Day_1_wrangling_presentation.html#summarise-2",
    "title": "Day 1 - Data Wrangling",
    "section": "summarise()",
    "text": "summarise()\nSome functions that often go inside summarise()\n\nmean()\nsd\nn()\nmedian()\nquantile()\nsum()\nmax()\nmin()\nIQR()"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#summarise-3",
    "href": "presentations/Day_1_wrangling_presentation.html#summarise-3",
    "title": "Day 1 - Data Wrangling",
    "section": "summarise",
    "text": "summarise\nCalculate the mean and standard deviation of price\n\ndiamonds %&gt;% \n  summarise(\n    price_avg = mean(price),\n    price_sd = sd(price))\n\n\nCalculate the median and interquartile range of price\n\ndiamonds %&gt;% \n  summarise(\n    price_median = median(price),\n    price_iqr = IQR(price))\n\n\nCount the number of rows where cut is equal to “Ideal”\n\ndiamonds %&gt;%\n  summarise(\n    n_ideal = sum(cut == \"Ideal\"))\n\n\nWhat is the price of the most expensive diamond?\n\ndiamonds %&gt;% \n  summarise(\n    price_max = max(price))"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-summarise-function",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-summarise-function",
    "title": "Day 1 - Data Wrangling",
    "section": "Lets Practice using the summarise() function",
    "text": "Lets Practice using the summarise() function"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#group_by-1",
    "href": "presentations/Day_1_wrangling_presentation.html#group_by-1",
    "title": "Day 1 - Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFunction:\nTakes existing data and groups specific variables together for future operations.\n\nExample\n\nGroup the diamonds dataset by cut\n\ndiamonds %&gt;% \n  group_by(cut)\n\n\n\n# A tibble: 53,940 × 10\n# Groups:   cut [5]\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#group_by-2",
    "href": "presentations/Day_1_wrangling_presentation.html#group_by-2",
    "title": "Day 1 - Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nFunction:\nTakes existing data and groups specific variables together for future operations.\n\nExample\n\nGroup the diamonds dataset by cut, then caluclate the mean price\n\ndiamonds %&gt;% \n  group_by(cut) %&gt;% \n  summarise(avg_price = mean(price))\n\n\n\n# A tibble: 5 × 2\n  cut       avg_price\n  &lt;ord&gt;         &lt;dbl&gt;\n1 Fair          4359.\n2 Good          3929.\n3 Very Good     3982.\n4 Premium       4584.\n5 Ideal         3458."
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#group_by-3",
    "href": "presentations/Day_1_wrangling_presentation.html#group_by-3",
    "title": "Day 1 - Data Wrangling",
    "section": "group_by()",
    "text": "group_by()\nYou can group by multiple columns\n\nExample\n\nGroup the diamonds dataset by cut and clarity, then caluclate the mean and sd of price\n\ndiamonds %&gt;% \n  group_by(cut, color) %&gt;% \n  summarise(avg_price = mean(price),\n            sd_price = sd(price))\n\n\n\n# A tibble: 35 × 4\n# Groups:   cut [5]\n   cut   color avg_price sd_price\n   &lt;ord&gt; &lt;ord&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 Fair  D         4291.    3286.\n 2 Fair  E         3682.    2977.\n 3 Fair  F         3827.    3223.\n 4 Fair  G         4239.    3610.\n 5 Fair  H         5136.    3886.\n 6 Fair  I         4685.    3730.\n 7 Fair  J         4976.    4050.\n 8 Good  D         3405.    3175.\n 9 Good  E         3424.    3331.\n10 Good  F         3496.    3202.\n# ℹ 25 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#group_by-and-ungroup",
    "href": "presentations/Day_1_wrangling_presentation.html#group_by-and-ungroup",
    "title": "Day 1 - Data Wrangling",
    "section": "group_by() and ungroup",
    "text": "group_by() and ungroup\nYou can undo a group_by() with ungroup()\n\ndiamonds %&gt;% \n  group_by(cut) %&gt;% \n  ungroup()\n\n\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#arrange",
    "href": "presentations/Day_1_wrangling_presentation.html#arrange",
    "title": "Day 1 - Data Wrangling",
    "section": "arrange()",
    "text": "arrange()\nFunction:\nArranges (sorts) your tibble based on the values within a variable.\n\nExample\n\nArrange the diamonds dataset by cut\n\ndiamonds %&gt;% \n  arrange(cut)\n\n\n\n# A tibble: 53,940 × 10\n   carat cut   color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt; &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.22 Fair  E     VS2      65.1    61   337  3.87  3.78  2.49\n 2  0.86 Fair  E     SI2      55.1    69  2757  6.45  6.33  3.52\n 3  0.96 Fair  F     SI2      66.3    62  2759  6.27  5.95  4.07\n 4  0.7  Fair  F     VS2      64.5    57  2762  5.57  5.53  3.58\n 5  0.7  Fair  F     VS2      65.3    55  2762  5.63  5.58  3.66\n 6  0.91 Fair  H     SI2      64.4    57  2763  6.11  6.09  3.93\n 7  0.91 Fair  H     SI2      65.7    60  2763  6.03  5.99  3.95\n 8  0.98 Fair  H     SI2      67.9    60  2777  6.05  5.97  4.08\n 9  0.84 Fair  G     SI1      55.1    67  2782  6.39  6.2   3.47\n10  1.01 Fair  E     I1       64.5    58  2788  6.29  6.21  4.03\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#arrange-and-desc",
    "href": "presentations/Day_1_wrangling_presentation.html#arrange-and-desc",
    "title": "Day 1 - Data Wrangling",
    "section": "arrange() and desc()",
    "text": "arrange() and desc()\nFunction:\narrange() Arranges (sorts) your tibble based on the values within a variable.\ndesc() is put inside arrange() to make the order descending\n\nExample\nArrange the diamonds dataset by price\n\n\ndiamonds %&gt;% \n  arrange(price)\n\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n# ℹ 53,930 more rows\n\n\n\n\nArrange the diamonds dataset in descending order by price\n\n\ndiamonds %&gt;% \n  arrange(desc(price))\n\n\n# A tibble: 53,940 × 10\n   carat cut       color clarity depth table price     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  2.29 Premium   I     VS2      60.8    60 18823  8.5   8.47  5.16\n 2  2    Very Good G     SI1      63.5    56 18818  7.9   7.97  5.04\n 3  1.51 Ideal     G     IF       61.7    55 18806  7.37  7.41  4.56\n 4  2.07 Ideal     G     SI2      62.5    55 18804  8.2   8.13  5.11\n 5  2    Very Good H     SI1      62.8    57 18803  7.95  8     5.01\n 6  2.29 Premium   I     SI1      61.8    59 18797  8.52  8.45  5.24\n 7  2.04 Premium   H     SI1      58.1    60 18795  8.37  8.28  4.84\n 8  2    Premium   I     VS1      60.8    59 18795  8.13  8.02  4.91\n 9  1.71 Premium   F     VS2      62.3    59 18791  7.57  7.53  4.7 \n10  2.15 Ideal     G     SI2      62.6    54 18791  8.29  8.35  5.21\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-group_by-and-arrange-functions",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-group_by-and-arrange-functions",
    "title": "Day 1 - Data Wrangling",
    "section": "Lets Practice using the group_by() and arrange() functions",
    "text": "Lets Practice using the group_by() and arrange() functions"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#mutate-1",
    "href": "presentations/Day_1_wrangling_presentation.html#mutate-1",
    "title": "Day 1 - Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nFunction:\nAdds new columns or modifies current variables in the tibble.\n\n\nExample\nIn the diamonds dataset, create a new variable called tax equal to 25% of price\n\n\n\ndiamonds %&gt;% \n  mutate(\n    tax = price*0.25)\n\n\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price     x     y     z   tax\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43  81.5\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31  81.5\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31  81.8\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63  83.5\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75  83.8\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48  84  \n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47  84  \n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53  84.2\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49  84.2\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39  84.5\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#mutate-2",
    "href": "presentations/Day_1_wrangling_presentation.html#mutate-2",
    "title": "Day 1 - Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nFunction:\nAdds new columns or modifies current variables in the tibble.\n\n\nExample\nIn the diamonds dataset, create a new variable called tax equal to 25% of price\nPlace the new variable tax right after price\n\ndiamonds %&gt;% \n  mutate(\n    tax = price*0.25,\n    .after = price)\n\n\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price   tax     x     y     z\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  81.5  3.95  3.98  2.43\n 2  0.21 Premium   E     SI1      59.8    61   326  81.5  3.89  3.84  2.31\n 3  0.23 Good      E     VS1      56.9    65   327  81.8  4.05  4.07  2.31\n 4  0.29 Premium   I     VS2      62.4    58   334  83.5  4.2   4.23  2.63\n 5  0.31 Good      J     SI2      63.3    58   335  83.8  4.34  4.35  2.75\n 6  0.24 Very Good J     VVS2     62.8    57   336  84    3.94  3.96  2.48\n 7  0.24 Very Good I     VVS1     62.3    57   336  84    3.95  3.98  2.47\n 8  0.26 Very Good H     SI1      61.9    55   337  84.2  4.07  4.11  2.53\n 9  0.22 Fair      E     VS2      65.1    61   337  84.2  3.87  3.78  2.49\n10  0.23 Very Good H     VS1      59.4    61   338  84.5  4     4.05  2.39\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#mutate-3",
    "href": "presentations/Day_1_wrangling_presentation.html#mutate-3",
    "title": "Day 1 - Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\nAdd a new colum called dummy with only TRUE values\n\ndiamonds %&gt;% \n  mutate(dummy = TRUE)\n\n\n\nAdd a new collum called cubic_volume that multiplies x, y, and z\n\ndiamonds %&gt;% \n  mutate(cubic_volume = x*y*z)\n\n\n\nAdd a new column that calculates the difference in price from the mean price\n\ndiamonds %&gt;% \n  mutate(price_dm = price-mean(price))"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#if_else-often-goes-inside-mutate",
    "href": "presentations/Day_1_wrangling_presentation.html#if_else-often-goes-inside-mutate",
    "title": "Day 1 - Data Wrangling",
    "section": "if_else() often goes inside mutate()",
    "text": "if_else() often goes inside mutate()\nFunction:\nif_else()contains 3 parts:  \n\nA test\nWhat to do if the test is TRUE\nWhat to do if the test is FALSE\n\n\n\nExample\n\n\n\ndiamonds %&gt;% \n  mutate(\n    buy = if_else(cut == \"Ideal\" & price &lt; mean(price), \"YES\", \"NO\"))\n\n\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price     x     y     z buy  \n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 YES  \n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 NO   \n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 NO   \n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 NO   \n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 NO   \n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 NO   \n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47 NO   \n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53 NO   \n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49 NO   \n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39 NO   \n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#case_when-often-goes-inside-mutate",
    "href": "presentations/Day_1_wrangling_presentation.html#case_when-often-goes-inside-mutate",
    "title": "Day 1 - Data Wrangling",
    "section": "case_when() often goes inside mutate()",
    "text": "case_when() often goes inside mutate()\nFunction: \ncase_when() contains a series of tests instead of just one.\nThe output of a passed test is written after a ~\ncase_when ends with TRUE ~ (what to do if none of the tests are passed) \n\nExample\n\n\n\ndiamonds %&gt;% \n  mutate(\n    buy = case_when(\n      cut == \"Ideal\" & price &lt; mean(price) ~ \"YES\", \n      cut == \"Premium\" & price &lt; mean(price) ~ \"MAYBE\",\n      TRUE ~ \"NO\"))\n\n\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price     x     y     z buy  \n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43 YES  \n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31 MAYBE\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31 NO   \n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63 MAYBE\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75 NO   \n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48 NO   \n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47 NO   \n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53 NO   \n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49 NO   \n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39 NO   \n# ℹ 53,930 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-mutate-function",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-using-the-mutate-function",
    "title": "Day 1 - Data Wrangling",
    "section": "Lets Practice using the mutate() function",
    "text": "Lets Practice using the mutate() function\nand if_else() and case_when()"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#count-1",
    "href": "presentations/Day_1_wrangling_presentation.html#count-1",
    "title": "Day 1 - Data Wrangling",
    "section": "count()",
    "text": "count()\ncount() is very useful for fast counting and to get an overview of the number of observations within a (grouped) dataset\n\n\ndiamonds %&gt;% \n  count()\n\n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1 53940\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  count(cut)\n\n\n# A tibble: 5 × 2\n  cut           n\n  &lt;ord&gt;     &lt;int&gt;\n1 Fair       1610\n2 Good       4906\n3 Very Good 12082\n4 Premium   13791\n5 Ideal     21551\n\n\n\n\n\n\n\ndiamonds %&gt;% \n  count(cut, color)\n\n\n# A tibble: 35 × 3\n   cut   color     n\n   &lt;ord&gt; &lt;ord&gt; &lt;int&gt;\n 1 Fair  D       163\n 2 Fair  E       224\n 3 Fair  F       312\n 4 Fair  G       314\n 5 Fair  H       303\n 6 Fair  I       175\n 7 Fair  J       119\n 8 Good  D       662\n 9 Good  E       933\n10 Good  F       909\n# ℹ 25 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#join",
    "href": "presentations/Day_1_wrangling_presentation.html#join",
    "title": "Day 1 - Data Wrangling",
    "section": "[]_join",
    "text": "[]_join\nIt’s rare that a data analysis involves only a single table of data. In practice, you’ll normally have many tables that contribute to an analysis, and you need flexible tools to combine them.\n\ninner_join()\nsemi_join()\nleft_join()\nanti_join()\nfull_join()"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#join---example-data",
    "href": "presentations/Day_1_wrangling_presentation.html#join---example-data",
    "title": "Day 1 - Data Wrangling",
    "section": "[]_join - Example data",
    "text": "[]_join - Example data\n\n\n\nsuperheroes\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n    \n  \n  \n    Magneto\nbad\nmale\nMarvel\n    Storm\ngood\nfemale\nMarvel\n    Mystique\nbad\nfemale\nMarvel\n    Batman\ngood\nmale\nDC\n    Joker\nbad\nmale\nDC\n    Catwoman\nbad\nfemale\nDC\n    Hellboy\ngood\nmale\nDark Horse Comics\n  \n  \n  \n\n\n\n\n\n\n\n\npublishers\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n    \n  \n  \n    DC\n1934\n    Marvel\n1939\n    Image\n1992\n  \n  \n  \n\n\n\n\n\n\n\nTake a good look at the two dataframes\n\nWhat columns match between the two dataframes?\nAre the values in the publisher column identical in the two dataframes?\nAre the values in the publisher column arranged (sorted) in the same way in the two dataframes?\nWhat kind of information are we missing on the Dark Horse Comics and Image publishers?"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#inner_join",
    "href": "presentations/Day_1_wrangling_presentation.html#inner_join",
    "title": "Day 1 - Data Wrangling",
    "section": "inner_join()",
    "text": "inner_join()\ninner_join(x, y) returns all rows from x where there are matching values in y, and all columns from x and y.\n\n\n\n\n\ninner_join(superheroes, publishers)\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n      yr_founded\n    \n  \n  \n    Magneto\nbad\nmale\nMarvel\n1939\n    Storm\ngood\nfemale\nMarvel\n1939\n    Mystique\nbad\nfemale\nMarvel\n1939\n    Batman\ngood\nmale\nDC\n1934\n    Joker\nbad\nmale\nDC\n1934\n    Catwoman\nbad\nfemale\nDC\n1934\n  \n  \n  \n\n\n\n\n\n\n\n\ninner_join(publishers, superheroes)\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n      name\n      alignment\n      gender\n    \n  \n  \n    DC\n1934\nBatman\ngood\nmale\n    DC\n1934\nJoker\nbad\nmale\n    DC\n1934\nCatwoman\nbad\nfemale\n    Marvel\n1939\nMagneto\nbad\nmale\n    Marvel\n1939\nStorm\ngood\nfemale\n    Marvel\n1939\nMystique\nbad\nfemale\n  \n  \n  \n\n\n\n\n\n\n\nResults are identical. Only variable order is different.\nWhat information was filtered away?"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#semi_join",
    "href": "presentations/Day_1_wrangling_presentation.html#semi_join",
    "title": "Day 1 - Data Wrangling",
    "section": "semi_join()",
    "text": "semi_join()\nsemi_join(x, y) returns all rows from x where there are matching values in y, keeping just columns from x.\n\n\n\n\n\nsemi_join(superheroes, publishers)\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n    \n  \n  \n    Magneto\nbad\nmale\nMarvel\n    Storm\ngood\nfemale\nMarvel\n    Mystique\nbad\nfemale\nMarvel\n    Batman\ngood\nmale\nDC\n    Joker\nbad\nmale\nDC\n    Catwoman\nbad\nfemale\nDC\n  \n  \n  \n\n\n\n\n\n\n\n\nsemi_join(publishers, superheroes)\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n    \n  \n  \n    DC\n1934\n    Marvel\n1939"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#left_join",
    "href": "presentations/Day_1_wrangling_presentation.html#left_join",
    "title": "Day 1 - Data Wrangling",
    "section": "left_join()",
    "text": "left_join()\nleft_join(x, y) returns all rows from x, and all columns from x and y.\n\n\n\n\n\nleft_join(superheroes, publishers)\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n      yr_founded\n    \n  \n  \n    Magneto\nbad\nmale\nMarvel\n1939\n    Storm\ngood\nfemale\nMarvel\n1939\n    Mystique\nbad\nfemale\nMarvel\n1939\n    Batman\ngood\nmale\nDC\n1934\n    Joker\nbad\nmale\nDC\n1934\n    Catwoman\nbad\nfemale\nDC\n1934\n    Hellboy\ngood\nmale\nDark Horse Comics\nNA\n  \n  \n  \n\n\n\n\n\n\n\n\nleft_join(publishers, superheroes)\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n      name\n      alignment\n      gender\n    \n  \n  \n    DC\n1934\nBatman\ngood\nmale\n    DC\n1934\nJoker\nbad\nmale\n    DC\n1934\nCatwoman\nbad\nfemale\n    Marvel\n1939\nMagneto\nbad\nmale\n    Marvel\n1939\nStorm\ngood\nfemale\n    Marvel\n1939\nMystique\nbad\nfemale\n    Image\n1992\nNA\nNA\nNA"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#anti_join",
    "href": "presentations/Day_1_wrangling_presentation.html#anti_join",
    "title": "Day 1 - Data Wrangling",
    "section": "anti_join()",
    "text": "anti_join()\nanti_join(x, y) returns all rows from x where there are not matching values in y. Keeping only columns in x.\n\n\n\n\n\nanti_join(superheroes, publishers)\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n    \n  \n  \n    Hellboy\ngood\nmale\nDark Horse Comics\n  \n  \n  \n\n\n\n\n\n\n\n\nanti_join(publishers, superheroes)\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n    \n  \n  \n    Image\n1992"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#full_join",
    "href": "presentations/Day_1_wrangling_presentation.html#full_join",
    "title": "Day 1 - Data Wrangling",
    "section": "full_join()",
    "text": "full_join()\nfull_join(x, y) Return all rows and all columns from both x and y. Where there are not matching values, returns NA for the one missing.\n\n\n\nfull_join(superheroes, publishers)\n\n\n\n\n\n\n\n  \n    \n    \n      name\n      alignment\n      gender\n      publisher\n      yr_founded\n    \n  \n  \n    Magneto\nbad\nmale\nMarvel\n1939\n    Storm\ngood\nfemale\nMarvel\n1939\n    Mystique\nbad\nfemale\nMarvel\n1939\n    Batman\ngood\nmale\nDC\n1934\n    Joker\nbad\nmale\nDC\n1934\n    Catwoman\nbad\nfemale\nDC\n1934\n    Hellboy\ngood\nmale\nDark Horse Comics\nNA\n    NA\nNA\nNA\nImage\n1992\n  \n  \n  \n\n\n\n\n\n\n\n\nfull_join(publishers, superheroes)\n\n\n\n\n\n\n\n  \n    \n    \n      publisher\n      yr_founded\n      name\n      alignment\n      gender\n    \n  \n  \n    DC\n1934\nBatman\ngood\nmale\n    DC\n1934\nJoker\nbad\nmale\n    DC\n1934\nCatwoman\nbad\nfemale\n    Marvel\n1939\nMagneto\nbad\nmale\n    Marvel\n1939\nStorm\ngood\nfemale\n    Marvel\n1939\nMystique\nbad\nfemale\n    Image\n1992\nNA\nNA\nNA\n    Dark Horse Comics\nNA\nHellboy\ngood\nmale"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#lets-practice-joins",
    "href": "presentations/Day_1_wrangling_presentation.html#lets-practice-joins",
    "title": "Day 1 - Data Wrangling",
    "section": "lets practice joins",
    "text": "lets practice joins"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_",
    "text": "pivot_\n\n\n\npivot_longer() makes datasets longer by increasing the number of rows and decreasing the number of columns.\npivot_wider() makes datasets wider by decreasing the number of rows and increasing the number of columns."
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_longer",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_longer",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_longer()",
    "text": "pivot_longer()\nThe relig_income dataset\n\n\nInformation on religion and annual income:\n\ncell values are counts\n\n\n\nhead(relig_income)\n\n\n\n# A tibble: 6 × 11\n  religion  `&lt;$10k` `$10-20k` `$20-30k` `$30-40k` `$40-50k` `$50-75k` `$75-100k`\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n1 Agnostic       27        34        60        81        76       137        122\n2 Atheist        12        27        37        52        35        70         73\n3 Buddhist       27        21        30        34        33        58         62\n4 Catholic      418       617       732       670       638      1116        949\n5 Don’t kn…      15        14        15        11        10        35         21\n6 Evangeli…     575       869      1064       982       881      1486        949\n# ℹ 3 more variables: `$100-150k` &lt;dbl&gt;, `&gt;150k` &lt;dbl&gt;,\n#   `Don't know/refused` &lt;dbl&gt;"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_longer-1",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_longer-1",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\n\nrelig_income %&gt;% \n  pivot_longer(cols = -religion)\n\n\n# A tibble: 180 × 3\n   religion name               value\n   &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;\n 1 Agnostic &lt;$10k                 27\n 2 Agnostic $10-20k               34\n 3 Agnostic $20-30k               60\n 4 Agnostic $30-40k               81\n 5 Agnostic $40-50k               76\n 6 Agnostic $50-75k              137\n 7 Agnostic $75-100k             122\n 8 Agnostic $100-150k            109\n 9 Agnostic &gt;150k                 84\n10 Agnostic Don't know/refused    96\n# ℹ 170 more rows\n\n\n\n\n\nrelig_income %&gt;% \n  pivot_longer(cols = -religion,\n               names_to = \"income\",\n               values_to = \"count\")\n\n\n# A tibble: 180 × 3\n   religion income             count\n   &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;\n 1 Agnostic &lt;$10k                 27\n 2 Agnostic $10-20k               34\n 3 Agnostic $20-30k               60\n 4 Agnostic $30-40k               81\n 5 Agnostic $40-50k               76\n 6 Agnostic $50-75k              137\n 7 Agnostic $75-100k             122\n 8 Agnostic $100-150k            109\n 9 Agnostic &gt;150k                 84\n10 Agnostic Don't know/refused    96\n# ℹ 170 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_wider",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_wider",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\nIs less often used, but often comes in handy when tidying data\n\nmocap_data\n\n\n\n# A tibble: 10 × 10\n      id hip_x hip_y hip_z knee_x knee_y knee_z ankle_x ankle_y ankle_z\n   &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1     1     2     1      1      1      1       1       0       1\n 2     2     2     2     1      2      1      1       2       0       1\n 3     3     3     2     1      3      1      1       3       0       1\n 4     4     4     2     1      4      1      1       4       0       1\n 5     5     5     2     1      5      1      1       5       0       1\n 6     6     6     2     1      6      1      1       6       0       1\n 7     7     7     2     1      7      1      1       7       0       1\n 8     8     8     2     1      8      1      1       8       0       1\n 9     9     9     2     1      9      1      1       9       0       1\n10    10    10     2     1     10      1      1      10       0       1\n\n\n\n*notice: The column names contain two pieces of information ({joint}_{coordinate})*"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_wider-1",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_wider-1",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\nWe want to go from this:\n\n\n# A tibble: 3 × 10\n     id hip_x hip_y hip_z knee_x knee_y knee_z ankle_x ankle_y ankle_z\n  &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1     1     1     2     1      1      1      1       1       0       1\n2     2     2     2     1      2      1      1       2       0       1\n3     3     3     2     1      3      1      1       3       0       1\n\n\n\n\nTo this:\n\n\n# A tibble: 30 × 5\n      id Joint     x     y     z\n   &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 hip       1     2     1\n 2     1 knee      1     1     1\n 3     1 ankle     1     0     1\n 4     2 hip       2     2     1\n 5     2 knee      2     1     1\n 6     2 ankle     2     0     1\n 7     3 hip       3     2     1\n 8     3 knee      3     1     1\n 9     3 ankle     3     0     1\n10     4 hip       4     2     1\n# ℹ 20 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_wider-2",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_wider-2",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\n\nWe start with pivot_longer(), but it pulls to much together\n\nmocap_data %&gt;% \n  pivot_longer(cols = -id) \n\n\n\n# A tibble: 90 × 3\n      id name    value\n   &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1     1 hip_x       1\n 2     1 hip_y       2\n 3     1 hip_z       1\n 4     1 knee_x      1\n 5     1 knee_y      1\n 6     1 knee_z      1\n 7     1 ankle_x     1\n 8     1 ankle_y     0\n 9     1 ankle_z     1\n10     2 hip_x       2\n# ℹ 80 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_wider-3",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_wider-3",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\n\nWe then use extract() to split the name column\n\nmocap_data %&gt;% \n  pivot_longer(cols = -id) %&gt;%  \n  extract(col = name,                  # What column to extract information from \n          into = c(\"Joint\", \"coord\"),  # What should the new columns be called\n          regex = \"(.+)_(.+)\")         # A regular expression\n\n\n\n# A tibble: 90 × 4\n      id Joint coord value\n   &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n 1     1 hip   x         1\n 2     1 hip   y         2\n 3     1 hip   z         1\n 4     1 knee  x         1\n 5     1 knee  y         1\n 6     1 knee  z         1\n 7     1 ankle x         1\n 8     1 ankle y         0\n 9     1 ankle z         1\n10     2 hip   x         2\n# ℹ 80 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#pivot_wider-4",
    "href": "presentations/Day_1_wrangling_presentation.html#pivot_wider-4",
    "title": "Day 1 - Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\n\nFinally we use pivot_wider()\n\nmocap_data %&gt;% \n  pivot_longer(cols = -id) %&gt;%  # pulls to much together\n  extract(name, \n          into = c(\"Joint\", \"coord\"),\n          regex = \"(.+)_(.+)\") %&gt;% \n  pivot_wider(names_from = coord,\n              values_from = value)\n\n\n\n# A tibble: 30 × 5\n      id Joint     x     y     z\n   &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 hip       1     2     1\n 2     1 knee      1     1     1\n 3     1 ankle     1     0     1\n 4     2 hip       2     2     1\n 5     2 knee      2     1     1\n 6     2 ankle     2     0     1\n 7     3 hip       3     2     1\n 8     3 knee      3     1     1\n 9     3 ankle     3     0     1\n10     4 hip       4     2     1\n# ℹ 20 more rows"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#across-1",
    "href": "presentations/Day_1_wrangling_presentation.html#across-1",
    "title": "Day 1 - Data Wrangling",
    "section": "across()",
    "text": "across()\nacross is more advanced but very useful when you want to perform the same operations on multiple columns\nRead more about across here and here\n\ndiamonds %&gt;%  \n  group_by(cut) %&gt;%  \n  summarise(\n    across(.cols = where(is.numeric),      # All numeric columns will change\n           .fns = ~mean(.x, na.rm = T),    # .fns is the function you wnat to want to apply to the columns \n           .names = \"{.col}_mean\"          # How should the new columns be named?\n  ))\n\n\n\n# A tibble: 5 × 8\n  cut       carat_mean depth_mean table_mean price_mean x_mean y_mean z_mean\n  &lt;ord&gt;          &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Fair           1.05        64.0       59.1      4359.   6.25   6.18   3.98\n2 Good           0.849       62.4       58.7      3929.   5.84   5.85   3.64\n3 Very Good      0.806       61.8       58.0      3982.   5.74   5.77   3.56\n4 Premium        0.892       61.3       58.7      4584.   5.97   5.94   3.65\n5 Ideal          0.703       61.7       56.0      3458.   5.51   5.52   3.40"
  },
  {
    "objectID": "presentations/Day_1_wrangling_presentation.html#across-2",
    "href": "presentations/Day_1_wrangling_presentation.html#across-2",
    "title": "Day 1 - Data Wrangling",
    "section": "across()",
    "text": "across()\nacross is more advanced but very useful when you want to perform the same operations on multiple columns\nRead more about across here and here\n\ndiamonds %&gt;%  \n  group_by(cut) %&gt;%  \n  summarise(\n    across(.cols = where(is.numeric),                   # All numeric columns will change\n           .fns = list(mean = ~mean(.x, na.rm = T),     # If more than one function you supply them in a list and name the functions\n                       sd = ~sd(.x, na.rm = T)),\n           .names = \"{.col}_{.fn}\"\n             ))\n\n\n\n# A tibble: 5 × 15\n  cut     carat_mean carat_sd depth_mean depth_sd table_mean table_sd price_mean\n  &lt;ord&gt;        &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;\n1 Fair         1.05     0.516       64.0    3.64        59.1     3.95      4359.\n2 Good         0.849    0.454       62.4    2.17        58.7     2.85      3929.\n3 Very G…      0.806    0.459       61.8    1.38        58.0     2.12      3982.\n4 Premium      0.892    0.515       61.3    1.16        58.7     1.48      4584.\n5 Ideal        0.703    0.433       61.7    0.719       56.0     1.25      3458.\n# ℹ 7 more variables: price_sd &lt;dbl&gt;, x_mean &lt;dbl&gt;, x_sd &lt;dbl&gt;, y_mean &lt;dbl&gt;,\n#   y_sd &lt;dbl&gt;, z_mean &lt;dbl&gt;, z_sd &lt;dbl&gt;"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#anscombes-quartet",
    "href": "presentations/Day_2_ggplot2_intro.html#anscombes-quartet",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "2.1 Anscombe’s quartet",
    "text": "2.1 Anscombe’s quartet\nTmisc::quartet is a tidy version of the built-in Anscombe’s Quartet data.\nAnscombe’s Quartet data contains four datasets that have nearly identical linear regression properties, yet appear very different when graphed.\n\n\nTmisc::quartet %&gt;%\n  head() %&gt;% \n  gt::gt() # print as table\n\n\n\n\n\n\n  \n    \n    \n      set\n      x\n      y\n    \n  \n  \n    I\n10\n8.04\n    I\n8\n6.95\n    I\n13\n7.58\n    I\n9\n8.81\n    I\n11\n8.33\n    I\n14\n9.96\n  \n  \n  \n\n\n\n\n\n  \n\n\nTmisc::quartet %&gt;% \n  tail() %&gt;% \n  gt::gt() # print as table\n\n\n\n\n\n\n  \n    \n    \n      set\n      x\n      y\n    \n  \n  \n    IV\n8\n7.04\n    IV\n8\n5.25\n    IV\n19\n12.50\n    IV\n8\n5.56\n    IV\n8\n7.91\n    IV\n8\n6.89"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#summarising-anscombes-quartet",
    "href": "presentations/Day_2_ggplot2_intro.html#summarising-anscombes-quartet",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "2.2 Summarising Anscombe’s quartet",
    "text": "2.2 Summarising Anscombe’s quartet\n\nTmisc::quartet %&gt;%\n  group_by(set) %&gt;%\n  summarise(\n    mean_x = mean(x), \n    mean_y = mean(y),\n    sd_x = sd(x),\n    sd_y = sd(y),\n    r = cor(x, y)\n  )%&gt;% \n  gt::gt() # print as table\n\n\n\n\n\n\n\n  \n    \n    \n      set\n      mean_x\n      mean_y\n      sd_x\n      sd_y\n      r\n    \n  \n  \n    I\n9\n7.500909\n3.316625\n2.031568\n0.8164205\n    II\n9\n7.500909\n3.316625\n2.031657\n0.8162365\n    III\n9\n7.500000\n3.316625\n2.030424\n0.8162867\n    IV\n9\n7.500909\n3.316625\n2.030579\n0.8165214"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#visualizing-anscombes-quartet",
    "href": "presentations/Day_2_ggplot2_intro.html#visualizing-anscombes-quartet",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "2.3 Visualizing Anscombe’s quartet",
    "text": "2.3 Visualizing Anscombe’s quartet"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#ggplot2-in-tidyverse",
    "href": "presentations/Day_2_ggplot2_intro.html#ggplot2-in-tidyverse",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.1 ggplot2 \\(\\in\\) tidyverse",
    "text": "3.1 ggplot2 \\(\\in\\) tidyverse\n\n\nggplot2 is tidyverse’s data visualization package.\ngg in “ggplot2” stands for Grammar of Graphics.\nInspired by the book Grammar of Graphics by Leland Wilkinson."
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#grammar-of-graphics",
    "href": "presentations/Day_2_ggplot2_intro.html#grammar-of-graphics",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.2 Grammar of Graphics",
    "text": "3.2 Grammar of Graphics\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic.\n\nSource: BloggoType"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#hello-ggplot2",
    "href": "presentations/Day_2_ggplot2_intro.html#hello-ggplot2",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.3 Hello ggplot2!",
    "text": "3.3 Hello ggplot2!\nStructure of the code for ggplot2 plots can be summarized as:\n\nggplot(data = [dataset], \n       mapping = aes(x = [x-variable], y = [y-variable])) +\n   geom_xxx() +\n   other options\n\n\nEvery ggplot2 plot has three key components:\n\ndata\nA set of aesthetic mappings between variables in the data and visual properties\nAt least one layer which describes how to render each observation. Layers are usually created with a geom function"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#hello-ggplot2-1",
    "href": "presentations/Day_2_ggplot2_intro.html#hello-ggplot2-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.4 Hello ggplot2!",
    "text": "3.4 Hello ggplot2!\nggplot2: Elegant Graphics for Data Analysis"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#simple-example",
    "href": "presentations/Day_2_ggplot2_intro.html#simple-example",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.5 Simple example",
    "text": "3.5 Simple example\n\nggplot(data = mpg,                               # Use the mpg data?\n       mapping = aes(x = displ, y = hwy)) +      # map (explore) the variables displ and hwy\n  geom_point()                                   # visualize the observations with points"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#colour-size-shape-and-other-aesthetic-attributes",
    "href": "presentations/Day_2_ggplot2_intro.html#colour-size-shape-and-other-aesthetic-attributes",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.6 colour, size, shape and other aesthetic attributes",
    "text": "3.6 colour, size, shape and other aesthetic attributes\n\n\nggplot(mpg, aes(displ, hwy, colour = drv))+ \n  geom_point()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(displ, hwy, shape = drv))+ \n  geom_point()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(displ, hwy, size = drv))+ \n  geom_point()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#fixed-value-of-colour-size-or-shape",
    "href": "presentations/Day_2_ggplot2_intro.html#fixed-value-of-colour-size-or-shape",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.7 Fixed value of Colour, size, or shape",
    "text": "3.7 Fixed value of Colour, size, or shape\nPlace the value outside of aes()\n\n\nggplot(mpg, aes(displ, hwy))+\n  geom_point(colour = \"blue\")\n\n\n\n\n\n\n\n\nggplot(mpg, aes(displ, hwy))+\n  geom_point(aes(colour = \"blue\"))"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#faceting",
    "href": "presentations/Day_2_ggplot2_intro.html#faceting",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "3.8 Faceting",
    "text": "3.8 Faceting\n3.8.1 facet_wrap()\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  facet_wrap(~class)"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-1",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.1 Other Plot Geoms",
    "text": "4.1 Other Plot Geoms\n\n\ngeom_smooth() fits a smoother to the data and displays the smooth and its standard error.\ngeom_jitter() as geom_point() but with a random spread of the points to prevent over plotting.\ngeom_boxplot() produces a box-and-whisker plot to summarise the distribution of a set of points.\ngeom_histogram() and geom_freqpoly() show the distribution of continuous variables.\ngeom_bar() shows the distribution of categorical variables.\ngeom_path() draw lines between the data points. Paths can go in any direction.\ngeom_line() draw lines between the data points. A line plot is constrained to produce lines that travel from left to right. Typically used to explore how things change over time."
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms---geom_smooth",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms---geom_smooth",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.2 Other Plot Geoms - geom_smooth()",
    "text": "4.2 Other Plot Geoms - geom_smooth()\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_smooth()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms---geom_smooth-1",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms---geom_smooth-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.3 Other Plot Geoms - geom_smooth()",
    "text": "4.3 Other Plot Geoms - geom_smooth()\nAn important argument to geom_smooth() is the method, which allows you to choose which type of model is used to fit the smooth curve.\nDefault is method = \"loess\"\n\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_smooth(method = \"loess\")\n\n\n\n\n\n\n\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\") #linear model"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-2",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-2",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.4 Other Plot Geoms",
    "text": "4.4 Other Plot Geoms\n\n\nggplot(mpg, aes(drv, hwy))+\n  geom_jitter()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(drv, hwy))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(drv, hwy))+\n  geom_violin()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-3",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-3",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.5 Other Plot Geoms",
    "text": "4.5 Other Plot Geoms\n4.5.1 geom_histogram() geom_freqploy()\n\n\nggplot(mpg, aes(hwy))+\n  geom_histogram()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(hwy))+\n  geom_freqpoly()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-4",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-4",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.6 Other Plot Geoms",
    "text": "4.6 Other Plot Geoms\n4.6.1 geom_histogram() geom_freqploy()\nBoth geoms bin the data. You should experiment with the binwidth or bin arguments when exploring your data.\n\n\nggplot(mpg, aes(hwy)) + \n  geom_freqpoly(binwidth = 10)\n\n\n\n\n\n\n\n\nggplot(mpg, aes(hwy)) + \n  geom_freqpoly(binwidth = 1)"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-geom_bar",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-geom_bar",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.7 Other Plot Geoms geom_bar()",
    "text": "4.7 Other Plot Geoms geom_bar()\n\n\nggplot(mpg, aes(x = manufacturer)) + \n  geom_bar()\n\n\n\n\n\n\n\n\nggplot(mpg, aes(y =manufacturer)) + \n  geom_bar()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-5",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-5",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.8 Other Plot Geoms",
    "text": "4.8 Other Plot Geoms\n4.8.1 geom_bar() + fct_infreq()\n\nmpg %&gt;% \nggplot(aes(y = fct_infreq(manufacturer))) + \n  geom_bar()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-6",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-6",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.9 Other Plot Geoms",
    "text": "4.9 Other Plot Geoms\n4.9.1 geom_bar() + fct_infreq() and aes(fill = [VAR] )\n\nmpg %&gt;% \nggplot(aes(y = fct_infreq(manufacturer), \n           fill = class)) + \n  geom_bar()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-7",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-7",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.10 Other Plot Geoms",
    "text": "4.10 Other Plot Geoms\n4.10.1 geom_bar() and position = \"fill\"\nposition = \"fill\" works like stacking, but makes each set of stacked bars the same height. This makes it easier to compare proportions across groups.\n\nmpg %&gt;% \nggplot(aes(y = fct_infreq(manufacturer), \n           fill = class)) + \n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-8",
    "href": "presentations/Day_2_ggplot2_intro.html#other-plot-geoms-8",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "4.11 Other Plot Geoms",
    "text": "4.11 Other Plot Geoms\n4.11.1 geom_bar() and position = \"dodge\"\nposition = \"dodge\" places overlapping objects directly beside one another. This makes it easier to compare individual values.\n\nmpg %&gt;% \nggplot(aes(y = fct_infreq(manufacturer), \n           fill = class)) + \n  geom_bar(position = \"dodge\")"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#labs--title-subtitle-legends-and-more",
    "href": "presentations/Day_2_ggplot2_intro.html#labs--title-subtitle-legends-and-more",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "5.1 labs()- Title, Subtitle, Legends, and more",
    "text": "5.1 labs()- Title, Subtitle, Legends, and more\nlabs() can do it all\n\nmpg %&gt;% \n  ggplot(aes(x = class, y = cty, fill = class))+\n  geom_boxplot()+\n  labs(\n    title = \"Milage in cities of various car classes\",\n    subtitle = \"Car classes are colored with nice colors using the fill argument!!\",\n    x = \"Class of car\",\n    y = \"Milage in cities\",\n    fill = \"Class\",\n    caption = \"The data comes from the mpg dataset\"\n    )"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#themes-1",
    "href": "presentations/Day_2_ggplot2_intro.html#themes-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.1 Themes",
    "text": "6.1 Themes\nggplot comes prepackaged with several different themes\n\n\np &lt;- mpg %&gt;% \n  ggplot(aes(x = class, y = cty, fill = class))+\n  geom_boxplot()\n\np + theme_bw()\n\n\n\n\n\n\n\n\np + theme_classic()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#themes-2",
    "href": "presentations/Day_2_ggplot2_intro.html#themes-2",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.2 Themes",
    "text": "6.2 Themes\nThe package ggthemes have many different themes.\n\np + ggthemes::theme_stata()\np + ggthemes::theme_economist()\np + ggthemes::theme_excel_new()\np + ggthemes::theme_fivethirtyeight()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales",
    "href": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.3 color and fill scales",
    "text": "6.3 color and fill scales\n6.3.1 Notice fill is mapped to a categorical variable\n\np &lt;- mpg %&gt;% \n  ggplot(aes(x = cty, y = hwy, fill=drv))+\n  geom_point(shape = 21, size = 3)\n\np"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-1",
    "href": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.4 color and fill scales",
    "text": "6.4 color and fill scales\n6.4.1 scale_fill_brewer(type = )\n\n\np + scale_fill_brewer(type = \"seq\")  # sequential (default)\n\n\n\n\n\n\n\n\np + scale_fill_brewer(type = \"qual\") # qualitative\n\n\n\n\n\n\n\n\np + scale_fill_brewer(type = \"div\")  # diverging"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-2",
    "href": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-2",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.5 color and fill scales",
    "text": "6.5 color and fill scales\n6.5.1 scale_fill_brewer(palette = )\n\n\np + scale_fill_brewer(type = \"seq\", # sequential (default)\n                      palette = 2)  \n\n\n\n\n\n\n\n\np + scale_fill_brewer(type = \"qual\", # qualitative\n                      palette = 2) \n\n\n\n\n\n\n\n\np + scale_fill_brewer(type = \"div\", # diverging\n                      palette = 2)"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-3",
    "href": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-3",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.6 color and fill scales",
    "text": "6.6 color and fill scales\n6.6.1 Notice color is mapped to a continous variable\n\np &lt;- mpg %&gt;% \n  ggplot(aes(x = cty, y = hwy, color=displ))+\n  geom_point(size = 3)\n\np"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-4",
    "href": "presentations/Day_2_ggplot2_intro.html#color-and-fill-scales-4",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "6.7 color and fill scales",
    "text": "6.7 color and fill scales\n6.7.1 scale_colour_continuous(type = )\n\n\np + \n  scale_colour_continuous(type = \"gradient\")\n\n\n\n\n\n\n\n\n# The virdidis color scale\np + \n  scale_colour_continuous(type = \"viridis\")\n\n\n\n\n\n\n\n\np + \n  scale_colour_continuous(type = \"viridis\", \n                          option = \"magma\")"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#the-patchwork-package",
    "href": "presentations/Day_2_ggplot2_intro.html#the-patchwork-package",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.1 The patchwork package",
    "text": "7.1 The patchwork package"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-1",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-1",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.2 Arranging plots with the patchwork package",
    "text": "7.2 Arranging plots with the patchwork package\n\np1 &lt;- ggplot(mpg) + \n  geom_point(aes(x = displ, y = hwy))+\n  ggtitle(\"p1\")\n\np2 &lt;- ggplot(mpg) + \n  geom_bar(aes(x = as.character(year), fill = drv), position = \"dodge\") + \n  labs(x = \"year\")+\n  ggtitle(\"p2\")\n\np3 &lt;- ggplot(mpg) + \n  geom_density(aes(x = hwy, fill = drv), colour = NA) + \n  facet_grid(rows = vars(drv))+\n  ggtitle(\"p3\")\n\np4 &lt;- ggplot(mpg) + \n  stat_summary(aes(x = drv, y = hwy, fill = drv), geom = \"col\", fun.data = mean_se) +\n  stat_summary(aes(x = drv, y = hwy), geom = \"errorbar\", fun.data = mean_se, width = 0.5)+\n  ggtitle(\"p4\")"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-2",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-2",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.3 Arranging plots with the patchwork package",
    "text": "7.3 Arranging plots with the patchwork package"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-3",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-3",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.4 Arranging plots with the patchwork package",
    "text": "7.4 Arranging plots with the patchwork package\n\n+ does not specify any specific layout, only that the plots should be displayed together.\npatchwork automagically decides the layout.\nAdding 3 plots together will create a 1x3 grid.\nAdding 4 plots together will create a 2x2 grid.\n\n\np1 + p2"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-4",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-4",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.5 Arranging plots with the patchwork package",
    "text": "7.5 Arranging plots with the patchwork package\n\n+ does not specify any specific layout, only that the plots should be displayed together.\npatchwork automagically decides the layout.\nAdding 3 plots together will create a 1x3 grid.\nAdding 4 plots together will create a 2x2 grid.\n\n\np1 + p2 + p3 +p4"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-5",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-5",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.6 Arranging plots with the patchwork package",
    "text": "7.6 Arranging plots with the patchwork package\n7.6.1 plot_layout()\nYou have a very high degree of control via the plot_layout() function\n\np1 + p2 + p3 + p4 + plot_layout(nrow = 1)"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-6",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-6",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.7 Arranging plots with the patchwork package",
    "text": "7.7 Arranging plots with the patchwork package\n7.7.1 / and |\n/ forces a single column.\n| forces a single row.\n\n\np1/p2\n\n\n\n\n\n\n\n\np1|p2 # sames as p1 + p2"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-7",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-7",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.8 Arranging plots with the patchwork package",
    "text": "7.8 Arranging plots with the patchwork package\n7.8.1 nesting plots\n\np3 | (p2 /(p1 | p4))"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-8",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-8",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.9 Arranging plots with the patchwork package",
    "text": "7.9 Arranging plots with the patchwork package\n7.9.1 guides = \"collect\"\n\np1 + p2 + p3 + plot_layout(ncol = 2, guides = \"collect\")"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-9",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-9",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.10 Arranging plots with the patchwork package",
    "text": "7.10 Arranging plots with the patchwork package\n7.10.1 guide_area()\n\np1 + p2 + p3 + plot_layout(ncol = 2, guides = \"collect\") + guide_area()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-10",
    "href": "presentations/Day_2_ggplot2_intro.html#arranging-plots-with-the-patchwork-package-10",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.11 Arranging plots with the patchwork package",
    "text": "7.11 Arranging plots with the patchwork package\npatchwork comes with the powerful & operator that allows you change the settings on all the individual plots.\n\n\np1 + p2 + p3 + \n  plot_layout(ncol = 2, guides = \"collect\") + \n  guide_area() +\n  scale_fill_brewer(type = \"qual\",\n                    palette = 3) +\n  theme_classic()\n\n\n\n\n\n\nCan you spot the &s in the code below?\n\n\np1 + p2 + p3 + \n  plot_layout(ncol = 2, guides = \"collect\") + \n  guide_area() &   \n  scale_fill_brewer(type = \"qual\",\n                    palette = 3) &\n  theme_classic()"
  },
  {
    "objectID": "presentations/Day_2_ggplot2_intro.html#for-steen",
    "href": "presentations/Day_2_ggplot2_intro.html#for-steen",
    "title": "Basic Data Science Skills for Health Researchers",
    "section": "7.12 For Steen",
    "text": "7.12 For Steen\nFOR STEEN: CHECK NOUT THIS BLOGPOST! https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/ https://twitter.com/patilindrajeets/status/1536625572570357760?t=xhVDi62vDFggL3tA5cQ7bA&s=19"
  },
  {
    "objectID": "reproducible_research_basics_comments_how_da.html",
    "href": "reproducible_research_basics_comments_how_da.html",
    "title": "Comments - how to",
    "section": "",
    "text": "1 Hvordan angiver man kommentarer i R kode og Quarto MarkDown\nEn af grund idéerne i R og Quarto MarkDown er at gøre selve koden læselig for mennesker – et koncept der kaldes ‘literal programming’.\nR+Quarto kode er helt sikkert mere læsevenlig end andre klassiske programmeringssprog, men det er usandsynligt at du kan skrive R kode der er fuldstændigt selfforklarende for en menneskelig læser … du får brug for at tilføje kommentarer til din kode så fremtidige læsere (formentligt dig selv!) kan forstå kode.\nR kode\nI R kode, kan du tilføje en kommentar med hashtag #, sådan her:\n# Dette er en enkelt-linje kommentar i R kode\n# ...og det er ikke mulighed for fler-linje kommentarer: Der skal et # før hver kommentar linje\nx &lt;- 2 + 2 # ...men kommentarer sidst på en linje er også okay\nQuarto\n&lt;!-- Dette er en enkelt-linje kommentar i MarkDown --&gt;\n&lt;!--\nDette er en multi-linje\nkommentar i MarkDown\n--&gt;\n..og man kan &lt;!-- indsætte kommentarer --&gt; hvor man vil\n\n\n\n\n\n\nVigtigt! … hashtag # har forskellig betydning i R kode og i MarkDown!\n\n\n\n\n\nSom du har set, bruges # til at tilføje kommentarer i R kode, men i MarkDown bruges # til at definere overskrifter, sådan her:\n---\ntitle: \"Mit Quarto Markdown dokument\"\n---\n\n# Dette er overskrift niveau 1\n\n## Dette er overskrift niveau 2\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nKig på dette grimme og nyttesløse Quarto MarkDown dokument:\n---\ntitle: \"Mit grimme Quarto Markdown dokument\"\nauthor: S. O'Neill\n---\n\n# E &lt;- MC^2\n\ndata &lt;- c(2,4,7,12,4)\n\n&lt;!-- c &lt;- sqrt(a^2 + b^2) --&gt;\n\n# # if (3&gt;2) then print(\"to er for lille\")\n\n```{r my chunk}\n# data &lt;- rsample(1:1000, 100, replace=TRUE)\n&lt;!-- data &lt;- NULL -&gt;&gt;\n\n```\n\n# if (pi &gt; 3) then &lt;!-- print(\"Pi er større end 3\") --&gt;\nDiskutér medfølgende din sidemand, før i kigger på løsningen:\n\nKan i identificere kommentarerne i dokumentet?\nHvordan forventer du out output vil se ud?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 løsning\n\n\n\n\n\nHvis ovenstående havde stået i RStudio, ville du måske have bemærket nogle røde, bølge linjer og et advarsels ikon i margen på linje 16 .\nDet burde fortælle dig, at der er et problem med R koden, og koden vil faktisk ikke fungere – kan du se hvad problemet er? …kig herunder for at få svaret.\n\n\n\n\n\n\nØvelse #1 ..det fulde svar.\n\n\n\n\n\nOkay så. Line 16 var ikke valid R kode. Linjen var faktisk en enkelt-linje markdown kommentar og hører som sådan hjemme i MarkDown og ikke inde i en R kode chunk.\nHvis vi kommenterer linjen væk med et # så har vi en valid R kode og vi får følgende output:\n\n\n\nOBS Engelsk version\n\n\nMed andre ord, kun linjerne 10 og 15 er valide kommentarer.\nBonus spørgsmål: Forklar hvor linje gav det output du ser herover."
  },
  {
    "objectID": "reproducible_research_basics_comments_how_en.html",
    "href": "reproducible_research_basics_comments_how_en.html",
    "title": "Comments - how to",
    "section": "",
    "text": "1 How to spefify comments in R code and Quarto MarkDown\nOne of the core ideas of R and Quarto MarkDown is to make the code human readable – a concept known as literal programming.\nR+Quarto code is certainly more readable than classic programming languages, but it is unlikely that you are able to write code that is entirely self-explanatory to a human reader … you will need to add comments for future readers (probably yourself!) to understand the code.\nR code\nIn R code, you can add a comment using the hashtag #, like this:\n# This is a single-line comment in R code\n# ...and there are no multi-line comments: You must add an # for each line\nx &lt;- 2 + 2 # ...but inline comments are okay\nQuarto\n&lt;!-- This is a single-line comment in markdown --&gt;\n&lt;!--\nThis is a multi-line \ncomment in markdown\n--&gt;\n..and inline &lt;!-- comments are okay too --&gt;\n\n\n\n\n\n\nImportant! … the hashtag # has different meaning in R code and in quarto code!\n\n\n\n\n\nAs you have just seen, the hashtag # is used to add comments in R code, but in quarto markdown, the hashtag # is used to add level 1 headings, like this:\n---\ntitle: \"My Quarto Markdown document\"\n---\n\n# This is a level 1 heading\n\n## This is a level 2 heading\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nLook at this, admittedly ugly and pointless Quarto MarkDown document:\n---\ntitle: \"My ugly Quarto Markdown document\"\nauthor: S. O'Neill\n---\n\n# E &lt;- MC^2\n\ndata &lt;- c(2,4,7,12,4)\n\n&lt;!-- c &lt;- sqrt(a^2 + b^2) --&gt;\n\n# # if (3&gt;2) then print(\"two too small\")\n\n```{r my chunk}\n# data &lt;- rsample(1:1000, 100, replace=TRUE)\n&lt;!-- data &lt;- NULL -&gt;&gt;\n\n```\n\n# if (pi &gt; 3) then &lt;!-- print(\"Pi is bigger than 3\") --&gt;\nDiscuss the following points with your colleague, before looking at the solution below:\n\nCan you identify the comments in the document?\nWhat would you expect the output to look like?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\nIf you had type the MarkDown document above into Rstudio, you might have noticed red squiggly lines and a the warning symbol in the left margin of line 16? .\nThis should tell you, there is a problem with the R code and indeed the code will not run to produce output – can you tell what the problem is? …now click below for the full answer.\n\n\n\n\n\n\nExercise #1 ..the full answer.\n\n\n\n\n\nOkay so. Line 16 was not valid R code. The line was actually a single-line markdown comment and it belongs in markdown and not inside an R code chunk.\nIf we comment out that line with a hashtag # as appropriate for valid R code, we get the following output:\n\nIn other words, only lines 10 and 15 were valid comments.\nBonus question: Explain how line 20 worked to produce the output it did."
  },
  {
    "objectID": "reproducible_research_basics_comments_what_en.html",
    "href": "reproducible_research_basics_comments_what_en.html",
    "title": "Comments - what to",
    "section": "",
    "text": "What comments would be relevant here?\n\nQuestionSolution\n\n\nSuggest comments for this code… think ‘what’ and ‘why’\n\n# 1\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# 2\nd &lt;- d %&gt;% filter(id != \"241269-1212\")\n\n# 3\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\nSuggestions for meaningful comments\n\n# ?? comments necessary ??\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# excluded as participant entered an invalid CPR number\nd &lt;- d %&gt;% filter(id != \"2321369-1212\")\n\n# set 's' to F(emale) or M(ale) depending on odd/even id number in CPR\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\n\n\n\nMain points\n\nAlways comment your code\nComments should explain your thinking : ‘why’\nWith good code the ‘how’ is self-evident\n\n..but if your code can not be self-evident: explain in comments"
  },
  {
    "objectID": "reproducible_research_basics_comments_what_en.html#commenting-your-code",
    "href": "reproducible_research_basics_comments_what_en.html#commenting-your-code",
    "title": "Comments - what to",
    "section": "",
    "text": "Main points\n\nAlways comment your code\nComments should explain your thinking : ‘why’\nWith good code the ‘how’ is self-evident\n\n..but if your code can not be self-evident: explain in comments"
  },
  {
    "objectID": "reproducible_research_basics_comments_where_en.html",
    "href": "reproducible_research_basics_comments_where_en.html",
    "title": "Comments - where to",
    "section": "",
    "text": "1 Where to add comments in R code and Quarto MarkDown\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nWhat do you think about the way these comments have been placed? Will it work?\n\n# this comment definitely okay\nx &lt;- 2 + 2\n\n# ...but is the following okay?\ntibble(x=1:10, y=2:11) %&gt;% # ..is it okay, mid-pipe?\n  filter(y&gt;5 & # and how about breaking in the middle..\n  x != 9) # ..of a statement like 'filter'?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\nThis is what the output looks like:\n\n\n# A tibble: 5 × 2\n      x     y\n  &lt;int&gt; &lt;int&gt;\n1     5     6\n2     6     7\n3     7     8\n4     8     9\n5    10    11\n\n\n…so the code seems to run without fault - R is actually quite tolerant about placing comments here, there and everywhere, but is it good practice, though?\nThese comments are syntactically okay … but did they make your code simpler for humans to read? No not really. In fact, they made it rather more difficult than it needed to be. So click below to keep it simple:\n\n\n\n\n\n\n\n\n\nKeep it simple!\n\n\n\n\n\n\n# Comment lines before the code\n# can be multiple lines and does\n# not disturb your reading of the\n# code ... best practice!\n\nx &lt;- 2 + 2 # use inline comments sparringly\ny &lt;- x^2 - c(2, 5, 8, 10:14) # ..they are distracting!"
  },
  {
    "objectID": "reproducible_research_basics_exercises_en.html",
    "href": "reproducible_research_basics_exercises_en.html",
    "title": "Thinking about RRR",
    "section": "",
    "text": "Thinking about reproducibility …\n\n\n\n\n\n\n\nWhy does every scientific paper include a Methods section?\nIs it science, if it isn’t reproducible?\nIs the Method section enough?\nDo you know any public examples of fraudulent science? How was it discovered?"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_en.html",
    "href": "reproducible_research_basics_file_structure_en.html",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nText always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.xml\n\n\n\nStick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?\n\n\n\n\n\nMain points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_en.html#the-root",
    "href": "reproducible_research_basics_file_structure_en.html#the-root",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_en.html#file-types",
    "href": "reproducible_research_basics_file_structure_en.html#file-types",
    "title": "Files",
    "section": "",
    "text": "Text always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.pdf\ngfx/RR/prefer_text_files.xml"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_en.html#file-types-1",
    "href": "reproducible_research_basics_file_structure_en.html#file-types-1",
    "title": "Files",
    "section": "",
    "text": "Stick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?"
  },
  {
    "objectID": "reproducible_research_basics_file_structure_en.html#files-and-folders-1",
    "href": "reproducible_research_basics_file_structure_en.html#files-and-folders-1",
    "title": "Files",
    "section": "",
    "text": "Main points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html",
    "href": "reproducible_research_basics_naming_stuff_en.html",
    "title": "Naming stuff",
    "section": "",
    "text": "Let variable, function and file names convey meaning.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nSuggest alternative code and variable names for this code\n\n\n\nLet variable, function and file names convey meaning.\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")\n\n\n\n\n\ndata &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\nAlas, the function cpr2sex does not exist in base R or Tidyverse\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nWe could hide this away in a separate file and ‘source’ it .. or even make a new package…\n\n\n\n\n\n\n\n\nDo use under_scores\nDo not use camelCase\nDo not use kebab-case\n\n\n\n\n\nmake_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)\n\n\n\n\nMain points\n\nNames should be meaningful\nUse under_scores, not CamelCase, nor kebab-case\nFunction names should be verbs\nVariable names should be nouns"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#meaning",
    "href": "reproducible_research_basics_naming_stuff_en.html#meaning",
    "title": "Naming stuff",
    "section": "",
    "text": "Let variable, function and file names convey meaning.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nSuggest alternative code and variable names for this code"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#meaning-1",
    "href": "reproducible_research_basics_naming_stuff_en.html#meaning-1",
    "title": "Naming stuff",
    "section": "",
    "text": "Let variable, function and file names convey meaning.\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#making-the-meaning-even-clearer",
    "href": "reproducible_research_basics_naming_stuff_en.html#making-the-meaning-even-clearer",
    "title": "Naming stuff",
    "section": "",
    "text": "data &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\nAlas, the function cpr2sex does not exist in base R or Tidyverse\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nWe could hide this away in a separate file and ‘source’ it .. or even make a new package…"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#compound-names",
    "href": "reproducible_research_basics_naming_stuff_en.html#compound-names",
    "title": "Naming stuff",
    "section": "",
    "text": "Do use under_scores\nDo not use camelCase\nDo not use kebab-case"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#nouns-and-verbs",
    "href": "reproducible_research_basics_naming_stuff_en.html#nouns-and-verbs",
    "title": "Naming stuff",
    "section": "",
    "text": "make_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)"
  },
  {
    "objectID": "reproducible_research_basics_naming_stuff_en.html#names",
    "href": "reproducible_research_basics_naming_stuff_en.html#names",
    "title": "Naming stuff",
    "section": "",
    "text": "Main points\n\nNames should be meaningful\nUse under_scores, not CamelCase, nor kebab-case\nFunction names should be verbs\nVariable names should be nouns"
  },
  {
    "objectID": "reproducible_research_basics_readme_en.html",
    "href": "reproducible_research_basics_readme_en.html",
    "title": "README.md",
    "section": "",
    "text": "Maintain a README.md file in each project, at the root level\n\nA simple description of the project purpose (the ‘why’)\nPeople involved\nData sources etc\nList most important components (data and files)\n\n\nEspecially important for larger, more complex projects with many data sources, collaborators, etc\n\n\n#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "reproducible_research_basics_readme_en.html#readme.md-template",
    "href": "reproducible_research_basics_readme_en.html#readme.md-template",
    "title": "README.md",
    "section": "",
    "text": "#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "reproducible_research_basics_white_space_en.html",
    "href": "reproducible_research_basics_white_space_en.html",
    "title": "White space",
    "section": "",
    "text": "1 Using white space\n\nMarkdownOutputGood practice\n\n\n#| echo: true\n#| eval: false\nIn markdown, there's an important difference\nbetween '_new-line_' and '_empty-line_'.\n\n...white space matters!\n\n\nIn markdown, there’s an important difference between ‘new-line’ and ‘empty-line’.\n…white space matters!\n\n\n\nany number of spaces between words is equal to one space\nany number of empty lines between paragraphs is equal to one empty line\nuse one space to seperate functions, operators, etc a%&gt;%b vs a %&gt;% b\nuse empty line to indicate new paragraph\n\n\n\n\nHint Check out Soft wrap long lines in the Code menu."
  },
  {
    "objectID": "reproducible_research_intro_en.html",
    "href": "reproducible_research_intro_en.html",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”\n\n\n\n\n\n\nTo help yourself not get lost (or find your way again)\nDocumentation (formal/legal)\nReproducibility (from A-Z)\nReuseability (different outputs)\nRecycling (reassemble for other purposes)\n\n\n\n\nAim for level four ‘Product documentation’ (**) – Level 5 ‘Process documentation’ can be quite involved and is probably only relevant when many authors collaborate on the same code/data (if it is important to know who did what when, i.e. who screwed up)."
  },
  {
    "objectID": "reproducible_research_intro_en.html#what-it-is",
    "href": "reproducible_research_intro_en.html#what-it-is",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”"
  },
  {
    "objectID": "reproducible_research_intro_en.html#why",
    "href": "reproducible_research_intro_en.html#why",
    "title": "Intro to RRR",
    "section": "",
    "text": "To help yourself not get lost (or find your way again)\nDocumentation (formal/legal)\nReproducibility (from A-Z)\nReuseability (different outputs)\nRecycling (reassemble for other purposes)"
  },
  {
    "objectID": "reproducible_research_intro_en.html#levels-of-research-reproducibility",
    "href": "reproducible_research_intro_en.html#levels-of-research-reproducibility",
    "title": "Intro to RRR",
    "section": "",
    "text": "Aim for level four ‘Product documentation’ (**) – Level 5 ‘Process documentation’ can be quite involved and is probably only relevant when many authors collaborate on the same code/data (if it is important to know who did what when, i.e. who screwed up)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html",
    "href": "rstudio_introduction_to_gui_1_da.html",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "href": "rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "href": "rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "title": "RStudios GUI #1",
    "section": "2 Ændre størrelse på panelerne",
    "text": "2 Ændre størrelse på panelerne\nKlik og træk..\n\n\n\nÆndring af panel størrelserne med klik-og-træk\n\n\nBemærk også minimize og maximize ikonerne øverst til højre i hvert panel: \n\n\n\nMinimizing and maximizing panes in RStudio"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "href": "rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "title": "RStudios GUI #1",
    "section": "3 RStudio layout",
    "text": "3 RStudio layout\nØnsker du at ændre layout (forskellige farver, skrifttyper, tekst størrelse, osv) i RSudio? Klik: Tools / Global options / Appearance … men indtil videre, lad de andre indstillinger være i fred, f.eks General, Code, etc.\n\n\n\nChanging the RStudio appearance"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "href": "rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "title": "RStudios GUI #1",
    "section": "4 Flere faneblade i hvert panel",
    "text": "4 Flere faneblade i hvert panel\nHvert panel i RStudio har som regel adskillige fanebalde. For eksempel, i billedet herunder, indeholder ‘Output’ panel fanebladene Files, Plots, Packages, Help, Viewer og Presentation.\n\n\n\nMultiple tabs in each RStudio pane\n\n\nBemærk, at de faneblade som ses vil variere afhængigt hvad type dokument du arbejder med. Visse ekstra funktioner, som eksempelvis Git versionerings kontrol, vil også ændre på hvilke faneblade der præsenteres.\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nPrøv at gennemføre følgende:\n\nLav tre faneblade i ‘Text editor’ panelet.\nBrug hjælpefunktionen til at afgøre hvordan du kan bruge R til at finde ud af hvilken version af R du har installeret på din computer.\nFind din R konsol. Tast: a &lt;- 5 (tryk enter) – hvad skete der i dit Environment?\nSkift dit RSudio layout til et dark farve skema.\n\n\n\n\n\n\n\n\n\n\nSvar på øvelse #1\n\n\n\n\n\n\nLav blot tre nye tomme dokumenter at redigere: File / New file / R script (CTRL+SHIFT+n).\nBemærk, at der er to søgefelter på ‘help’ fanebladet i ‘Output’ panelet – brug den til højre til at lære mere om (base)funktionen R.Version.\nI Environment fanebladet i Environment panelet, skulle du se en liste af ‘Values’ hvor ‘a’ er ‘5’.\nI Tools / Global options / Appearance, vælg f.eks ‘Cobalt’ i Editor theme dialogen."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_en.html",
    "href": "rstudio_introduction_to_gui_1_en.html",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "A first time overview of RStudios GUI\n\n\nBy default, the RStudio GUI is divided into four panes (the different colors added here are for illustration). This layout can be changed to your liking, but for now stick with the standard as illustrated above.\n\n\n\n\n\n\nHelp! My layout does not look like that …\n\n\n\n\n\nIf the text editor field is missing, it is probably just because you do not have any text files open for editing – try clicking File / New file / R script (CTRL+SHIFT+n).\nIf you have accidentally hidden one or more panes, try clicking View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_en.html#a-first-time-overview-of-rstudios-gui",
    "href": "rstudio_introduction_to_gui_1_en.html#a-first-time-overview-of-rstudios-gui",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "A first time overview of RStudios GUI\n\n\nBy default, the RStudio GUI is divided into four panes (the different colors added here are for illustration). This layout can be changed to your liking, but for now stick with the standard as illustrated above.\n\n\n\n\n\n\nHelp! My layout does not look like that …\n\n\n\n\n\nIf the text editor field is missing, it is probably just because you do not have any text files open for editing – try clicking File / New file / R script (CTRL+SHIFT+n).\nIf you have accidentally hidden one or more panes, try clicking View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_en.html#resizing-panes",
    "href": "rstudio_introduction_to_gui_1_en.html#resizing-panes",
    "title": "RStudios GUI #1",
    "section": "2 Resizing panes",
    "text": "2 Resizing panes\nClick and drag…\n\n\n\nResizing panes in RStudio with click-and-drag\n\n\nAlso, note the minimize and maximize icons in the top-right hand corner of each pane: \n\n\n\nMinimizing and maximizing panes in RStudio"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_en.html#rstudio-layout",
    "href": "rstudio_introduction_to_gui_1_en.html#rstudio-layout",
    "title": "RStudios GUI #1",
    "section": "3 RStudio layout",
    "text": "3 RStudio layout\nWant to change the layout (different colors, fonts, text size, etc) of RStudio? Click: Tools / Global options / Appearance … for now, do not mess with the settings in General, Code, etc.\n\n\n\nChanging the RStudio appearance"
  },
  {
    "objectID": "rstudio_introduction_to_gui_1_en.html#multiple-tabs-in-panes",
    "href": "rstudio_introduction_to_gui_1_en.html#multiple-tabs-in-panes",
    "title": "RStudios GUI #1",
    "section": "4 Multiple tabs in panes",
    "text": "4 Multiple tabs in panes\nEach pane in RStudio can, and often will, contain more than a single tab. For instance, in the image below, the ‘Output’ pane contains Files, Plots, Packages, Help, Viewer and Presentation.\n\n\n\nMultiple tabs in each RStudio pane\n\n\nNote, that the tabs presented in a pane may depend on the type of document you are working with. Also some extra functionality, such as Git version control, will change the available tabs.\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nTry to complete the following:\n\nCreate three panes in the ‘Text editor’ pane.\nUse the help functionality to find out how to determine the version of R on your computer.\nFind your R console. type: a &lt;- 5 (press enter) – what happened in your Environment?\nChange the layout of RStudio to a dark color scheme.\n\n\n\n\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nSimply create three new files: File / New file / R script (CTRL+SHIFT+n).\nNote there are two search boxes in the help tab of the output pane – use the one on the right hand side to learn about the R.Version base function.\nIn the Environment tab of the Environment pane, you should see a list of ‘Values’ with ‘a’ being ‘5’.\nIn Tools / Global options / Appearance, choose e.g. ‘Cobalt’ in the Editor theme dialog."
  },
  {
    "objectID": "rstudio_introduction_to_gui_2_da.html",
    "href": "rstudio_introduction_to_gui_2_da.html",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Vigtigt koncepot du skal forstå!\n\n\n\n\n\nDu kan forestille dig din arbejdsgang i RStudio som bestående af to arbejdsstationer: enten taler du direkte med R eller også skriver du til R:\n\n\nDu ‘taler’ med R i konsollen (orange), men hele samtalen bliver slettet når du lukker RStudio!\nHvis du instruerer R om at generere noget data, bliver det lagret i ‘Short term memory’ (altså i Environment) og du kan ‘tale’ med R om dataene, men de forsvinder også når du lukker RStudio.\nHvis du giver R instrukser som ikke er valid R kode, vil R beklage sig (fejl meddelelse).\nBemærk Hvis du beder R om at skrive noget til en fil, så bliver filen ikke slettet, men det gør kommandoen derom.\n\n\n\nI tekst editoren (blå) kan du skrive hvad som helst og gemme det som en tekst fil.\nDet bliver ikke læst af R før du specifikt beder R om det.\nHvis du skriver noget som ikke er valid R kode, vil du ikke få en fejl (omend RStudio vil give dig visuelle tip om at der er noget galt) … faktisk, kan du skrive en indkøbsliste i tekst editoren hvis du vil, og R vil ikke klage sig.\n\n\n\n\nEn typisk arbejdsgang består af at ping-pong’e frem og tilbage mellem i) test af kode i real-tid (konsol or ‘short term memory’) or ii) at gemme fungerende kode i tekst filer.\n\n\n\n\n\n\nEksempel\n\n\n\n\n\nLad os sige, du vil bruger funktionerne mean og rnorm til at beregne et gennemsnit af en stikpårøve på 100 fra en normal fordeling. Denne kode løser opgaven:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…før du skriver koden ind i dit manuskript bør du afprøve den i konsollen:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 0.602977\n\n\nMåske opdager du så, at der er flere decimaler end du ønsker og du kan tilpasse din kode:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.99\n\n\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nÅben RStudio og lav et nyt, tomt R scriptvia menu: File / New File / R Script eller keyboard: CTRL-SHIFT-n\n\nKopier og indsæt denne kode rnorm(n=100, mean=1, sd=2) %&gt;% mean() i konsollen og eksekvér koden ved at trykke ENTER – hvad skete der i tekst editoren?\nKopier og indsæt denne kode rnorm(n=100, mean=120, sd=25) %&gt;% mean() i tekst editor og tryk ENTER – hvad skete der i konsollen?\nKopier og indsæt denne kode rnorm(n=100, mean=20, sd=250) %&gt;% mean() i tekst editor og tryk CTRL+ENTER – hvad skete der i konsollen?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 Løsning\n\n\n\n\n\n\nDer sker ingenting i tekst editoren\nDer sker ingenting i konsollen\nKoden bliver kopieret og indsat i konosllen og eksekveret\n\nBonus spørgsmål Tilpas koden i tekst editoren sådan at outputtet fra R kommandoen bliver tilskrevet en ny variabel x. Hvad sker der i Environment fanebladet af Environment panelet, i) da du tilføjede koden til tekst filen hhv ii) da når du copy/paste/execute (CTRL+ENTER) koden ind i konsollen?\n\n\n\n\n\n\n\n\n\nØvelse #2\n\n\n\n\n\nNår du lukker et R projekt, vil RStudio spørge om du vil gemme et ‘Workspace image’.\nEt ‘workspace image’ gemmer information om den aktuelle konsol (historik) og det som er lagret i short term memory (Environment) og genskaber det, næste gang du åbner projektet.\n\nHvad er fordelene ved det?\nHvilke risici er det ved det?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 Løsning\n\n\n\n\n\n\nAt genskabe et workspace image fra sidste gang du arbejde med projektet , lader dig starte hvor du slap, hvilket kan være en hjælp i nogle situationer. F.eks hvis du beror på et meget stort data sæt der skal hentes ned fra internettet, så kan man spare lidt tid.\nEn hyppig fejl som frustrerer nybegyndere: Når man ping-pong’er frem og tilbage mellem tekst fil og konsol, kan man komme til at løse et problem som gemmer de rigtige data til hukommelsen, men man kan glemme at få koden ind i tekst filen det rigtige sted. Hvis man ikke bruger workspace image, vil den fejl blive synlig næste gang du starter projektet op med et tomt environment."
  },
  {
    "objectID": "rstudio_introduction_to_gui_2_da.html#work-flow-i-rstudios-gui",
    "href": "rstudio_introduction_to_gui_2_da.html#work-flow-i-rstudios-gui",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Vigtigt koncepot du skal forstå!\n\n\n\n\n\nDu kan forestille dig din arbejdsgang i RStudio som bestående af to arbejdsstationer: enten taler du direkte med R eller også skriver du til R:\n\n\nDu ‘taler’ med R i konsollen (orange), men hele samtalen bliver slettet når du lukker RStudio!\nHvis du instruerer R om at generere noget data, bliver det lagret i ‘Short term memory’ (altså i Environment) og du kan ‘tale’ med R om dataene, men de forsvinder også når du lukker RStudio.\nHvis du giver R instrukser som ikke er valid R kode, vil R beklage sig (fejl meddelelse).\nBemærk Hvis du beder R om at skrive noget til en fil, så bliver filen ikke slettet, men det gør kommandoen derom.\n\n\n\nI tekst editoren (blå) kan du skrive hvad som helst og gemme det som en tekst fil.\nDet bliver ikke læst af R før du specifikt beder R om det.\nHvis du skriver noget som ikke er valid R kode, vil du ikke få en fejl (omend RStudio vil give dig visuelle tip om at der er noget galt) … faktisk, kan du skrive en indkøbsliste i tekst editoren hvis du vil, og R vil ikke klage sig.\n\n\n\n\nEn typisk arbejdsgang består af at ping-pong’e frem og tilbage mellem i) test af kode i real-tid (konsol or ‘short term memory’) or ii) at gemme fungerende kode i tekst filer.\n\n\n\n\n\n\nEksempel\n\n\n\n\n\nLad os sige, du vil bruger funktionerne mean og rnorm til at beregne et gennemsnit af en stikpårøve på 100 fra en normal fordeling. Denne kode løser opgaven:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…før du skriver koden ind i dit manuskript bør du afprøve den i konsollen:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 0.602977\n\n\nMåske opdager du så, at der er flere decimaler end du ønsker og du kan tilpasse din kode:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.99\n\n\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nÅben RStudio og lav et nyt, tomt R scriptvia menu: File / New File / R Script eller keyboard: CTRL-SHIFT-n\n\nKopier og indsæt denne kode rnorm(n=100, mean=1, sd=2) %&gt;% mean() i konsollen og eksekvér koden ved at trykke ENTER – hvad skete der i tekst editoren?\nKopier og indsæt denne kode rnorm(n=100, mean=120, sd=25) %&gt;% mean() i tekst editor og tryk ENTER – hvad skete der i konsollen?\nKopier og indsæt denne kode rnorm(n=100, mean=20, sd=250) %&gt;% mean() i tekst editor og tryk CTRL+ENTER – hvad skete der i konsollen?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 Løsning\n\n\n\n\n\n\nDer sker ingenting i tekst editoren\nDer sker ingenting i konsollen\nKoden bliver kopieret og indsat i konosllen og eksekveret\n\nBonus spørgsmål Tilpas koden i tekst editoren sådan at outputtet fra R kommandoen bliver tilskrevet en ny variabel x. Hvad sker der i Environment fanebladet af Environment panelet, i) da du tilføjede koden til tekst filen hhv ii) da når du copy/paste/execute (CTRL+ENTER) koden ind i konsollen?\n\n\n\n\n\n\n\n\n\nØvelse #2\n\n\n\n\n\nNår du lukker et R projekt, vil RStudio spørge om du vil gemme et ‘Workspace image’.\nEt ‘workspace image’ gemmer information om den aktuelle konsol (historik) og det som er lagret i short term memory (Environment) og genskaber det, næste gang du åbner projektet.\n\nHvad er fordelene ved det?\nHvilke risici er det ved det?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 Løsning\n\n\n\n\n\n\nAt genskabe et workspace image fra sidste gang du arbejde med projektet , lader dig starte hvor du slap, hvilket kan være en hjælp i nogle situationer. F.eks hvis du beror på et meget stort data sæt der skal hentes ned fra internettet, så kan man spare lidt tid.\nEn hyppig fejl som frustrerer nybegyndere: Når man ping-pong’er frem og tilbage mellem tekst fil og konsol, kan man komme til at løse et problem som gemmer de rigtige data til hukommelsen, men man kan glemme at få koden ind i tekst filen det rigtige sted. Hvis man ikke bruger workspace image, vil den fejl blive synlig næste gang du starter projektet op med et tomt environment."
  },
  {
    "objectID": "rstudio_introduction_to_gui_2_en.html",
    "href": "rstudio_introduction_to_gui_2_en.html",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Important concept you need to grasp!\n\n\n\n\n\nYou can think about your workflow in RStudio as consisting of two separate work stations: you either talk to R or you write for to R:\n\n\nYou talk to R in the console (orange), but the entire conversation is lost when you close RStudio!\nIf you tell R to create some data, it is stored in the short term memory and you can talk about it, but it is lost when you close RStudio.\nIf you tell R to do something that is not valid R code, it will complain (error).\nNote If you tell R to write something to a file, that file will not be lost, but your command to do so is.\n\n\n\nIn the text editor (blue) you can write anything to be saved to a text file.\nIt will not be read by R until you specifically ask it to.\nIf you write something that isn’t valid R code, you will not get an error (albeit RStudio may give you a hint) … in fact, you write a shopping list in the text editor, if you want to and R won’t complain.\n\n\n\n\nA typical workflow consists of ping-pong’ing back and forth between i) testing code in real-time (console and short term memory) and ii) storing working code in a text file.\n\n\n\n\n\n\nExample\n\n\n\n\n\nLet’s say you want to use the functions mean and rnorm to calculate the mean of a sample of 100 from a normal distribution. The following code should do the trick:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…before using that code in you manuscript, you might want to check it out in the console:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.054998\n\n\nPerhaps, you then realize, that the result has too many digits and you amend your code:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.73\n\n\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nOpen RStudio and create and empty R script by menu: File / New File / R Script or keyboard: CTRL-SHIFT-n\n\nCopy paste this code rnorm(n=100, mean=1, sd=2) %&gt;% mean() into the console and execute it by pressing ENTER – what happens in the text editor?\nCopy and paste this code rnorm(n=100, mean=120, sd=25) %&gt;% mean() into the text editor and press ENTER – what happens in the console?\nCopy and paste this code rnorm(n=100, mean=20, sd=250) %&gt;% mean() into the text editor and press CTRL+ENTER – what happens in the console?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\n\nNothing happens in the text editor\nNothing happens in the console\nThe code is copied and pasted into the console and executed\n\nBonus question Amend the code in the text editor so that the output of the R command is ascribed to a variable called x. What happens in the Environment tab of the Environment pane, i) when you added the code to the text file and ii) when you copy/paste/execute (CTRL+ENTER) the code in the console?\n\n\n\n\n\n\n\n\n\nExercise #2\n\n\n\n\n\nWhen you close an R project, RStudio will ask you whether you want to save a ‘Workspace image’.\nA workspace image stores the information currently in the console and the short term memory (Environment) and restores it, the next time you open the project.\n\nWhat are the potential benefits of that?\nWhat are the potential pitfalls of that?\n\n\n\n\n\n\n\n\n\n\nExercise #2 Solution\n\n\n\n\n\n\nRestoring a workspace image from the last time you worked in the project, lets you pick up and start from the exact same position, which can sometimes be helpful. For instance, if you rely on downloading a large dataset from the internet, you can save some time.\nA common mistake that frustrates beginners: Ping-pong’ing back and forth, you might solve a problem in the console which commits the right data to short term memory, but forget to add that problem-solving code to the script in the text editor. If you do not use the workspace image, that mistake will become apparent next time you open your project with an empty environment."
  },
  {
    "objectID": "rstudio_introduction_to_gui_2_en.html#work-flow-in-rstudios-gui",
    "href": "rstudio_introduction_to_gui_2_en.html#work-flow-in-rstudios-gui",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Important concept you need to grasp!\n\n\n\n\n\nYou can think about your workflow in RStudio as consisting of two separate work stations: you either talk to R or you write for to R:\n\n\nYou talk to R in the console (orange), but the entire conversation is lost when you close RStudio!\nIf you tell R to create some data, it is stored in the short term memory and you can talk about it, but it is lost when you close RStudio.\nIf you tell R to do something that is not valid R code, it will complain (error).\nNote If you tell R to write something to a file, that file will not be lost, but your command to do so is.\n\n\n\nIn the text editor (blue) you can write anything to be saved to a text file.\nIt will not be read by R until you specifically ask it to.\nIf you write something that isn’t valid R code, you will not get an error (albeit RStudio may give you a hint) … in fact, you write a shopping list in the text editor, if you want to and R won’t complain.\n\n\n\n\nA typical workflow consists of ping-pong’ing back and forth between i) testing code in real-time (console and short term memory) and ii) storing working code in a text file.\n\n\n\n\n\n\nExample\n\n\n\n\n\nLet’s say you want to use the functions mean and rnorm to calculate the mean of a sample of 100 from a normal distribution. The following code should do the trick:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…before using that code in you manuscript, you might want to check it out in the console:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.054998\n\n\nPerhaps, you then realize, that the result has too many digits and you amend your code:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.73\n\n\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nOpen RStudio and create and empty R script by menu: File / New File / R Script or keyboard: CTRL-SHIFT-n\n\nCopy paste this code rnorm(n=100, mean=1, sd=2) %&gt;% mean() into the console and execute it by pressing ENTER – what happens in the text editor?\nCopy and paste this code rnorm(n=100, mean=120, sd=25) %&gt;% mean() into the text editor and press ENTER – what happens in the console?\nCopy and paste this code rnorm(n=100, mean=20, sd=250) %&gt;% mean() into the text editor and press CTRL+ENTER – what happens in the console?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\n\nNothing happens in the text editor\nNothing happens in the console\nThe code is copied and pasted into the console and executed\n\nBonus question Amend the code in the text editor so that the output of the R command is ascribed to a variable called x. What happens in the Environment tab of the Environment pane, i) when you added the code to the text file and ii) when you copy/paste/execute (CTRL+ENTER) the code in the console?\n\n\n\n\n\n\n\n\n\nExercise #2\n\n\n\n\n\nWhen you close an R project, RStudio will ask you whether you want to save a ‘Workspace image’.\nA workspace image stores the information currently in the console and the short term memory (Environment) and restores it, the next time you open the project.\n\nWhat are the potential benefits of that?\nWhat are the potential pitfalls of that?\n\n\n\n\n\n\n\n\n\n\nExercise #2 Solution\n\n\n\n\n\n\nRestoring a workspace image from the last time you worked in the project, lets you pick up and start from the exact same position, which can sometimes be helpful. For instance, if you rely on downloading a large dataset from the internet, you can save some time.\nA common mistake that frustrates beginners: Ping-pong’ing back and forth, you might solve a problem in the console which commits the right data to short term memory, but forget to add that problem-solving code to the script in the text editor. If you do not use the workspace image, that mistake will become apparent next time you open your project with an empty environment."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html",
    "href": "rstudio_introduction_to_gui_console_da.html",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Som nævnt andetsted, lader konsollen dig kommunikere direkte med R fortokeren og du kommer til at bruge en del tid i konsollen med at teste din kode.\nHerunder følger et antal praktiske tips om konsollen:\n\n\n\n\n\nSkriv mean i konsollen og vent et kort øjeblik – RStudio vil vise dig en liste over funktioner mm som er i det aktuelle environment som starter med mean. Prøv at rulle gennem listen.\n\n\n\n\n\n\n\n\n\nSkriv meaning_of_life &lt;- 52 (ENTER) for at lave en ny variabel – prøv nu tip #1 igen og bemærk, at den nye variable er blevet føjet til listen.\n\n\n\n\n\n\nMen meningen med livet er jo ikke 5, vel?1. Så det skal fikses.\n\n\n\nI konsollen, i en ny tom linje, trykker du blot på pil-op tasten på tastaturet og din foregående R kommando kommer tilbage, ret den til 42 og tryk så ENTER. Du kan bruge op/ned tasterne til at rulle op/ned i din konsol-historik, for den aktuelle sæssion.\n\n\n\n\n\n\n\n\n\nØverst i højre hjørne af konsollen: klik på ikonet der ligner en kost. Konsol vinduet bliver fejet rent, men konsolens historik bevares.\n\n\n\n\n\n\n\n\n\nÅben et nyt tomt R script i tekst editoren og skriv print(\"copy, paste, execute\") (CTRL+ENTER) – denne kommando skulle blive indsat i konsollen og eksekveret med det samme.\n\n\n\n\n\n\n\n\n\nI tekst editoren, tilføj en linje under den første linje: print(\"with CTRL-ENTER\") – denne gang prøv at fremhæve begge linjer (mus klik+træk) før CTRL+ENTER.\n\n\nHint Tjek ‘Run’ fold-ud menuen i øverste, højre hjørne af tekst editorn, for at køre alle kommandoer eller specifikke blokke.\n\nDer er angiveligt ikke nogen tastaturgenvej for at kopiere den anden vej fra konsollen til tekst editoren."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst",
    "href": "rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Skriv mean i konsollen og vent et kort øjeblik – RStudio vil vise dig en liste over funktioner mm som er i det aktuelle environment som starter med mean. Prøv at rulle gennem listen."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst-som-tilpasser-sig",
    "href": "rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst-som-tilpasser-sig",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Skriv meaning_of_life &lt;- 52 (ENTER) for at lave en ny variabel – prøv nu tip #1 igen og bemærk, at den nye variable er blevet føjet til listen."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#genbrug-tidligere-kommandoer",
    "href": "rstudio_introduction_to_gui_console_da.html#genbrug-tidligere-kommandoer",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Men meningen med livet er jo ikke 5, vel?1. Så det skal fikses.\n\n\n\nI konsollen, i en ny tom linje, trykker du blot på pil-op tasten på tastaturet og din foregående R kommando kommer tilbage, ret den til 42 og tryk så ENTER. Du kan bruge op/ned tasterne til at rulle op/ned i din konsol-historik, for den aktuelle sæssion."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#fej-rent",
    "href": "rstudio_introduction_to_gui_console_da.html#fej-rent",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Øverst i højre hjørne af konsollen: klik på ikonet der ligner en kost. Konsol vinduet bliver fejet rent, men konsolens historik bevares."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#kør-en-kommando-fra-tekst-editoren",
    "href": "rstudio_introduction_to_gui_console_da.html#kør-en-kommando-fra-tekst-editoren",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Åben et nyt tomt R script i tekst editoren og skriv print(\"copy, paste, execute\") (CTRL+ENTER) – denne kommando skulle blive indsat i konsollen og eksekveret med det samme."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#kør-flere-kommandoer-fra-tekst-editoren",
    "href": "rstudio_introduction_to_gui_console_da.html#kør-flere-kommandoer-fra-tekst-editoren",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "I tekst editoren, tilføj en linje under den første linje: print(\"with CTRL-ENTER\") – denne gang prøv at fremhæve begge linjer (mus klik+træk) før CTRL+ENTER.\n\n\nHint Tjek ‘Run’ fold-ud menuen i øverste, højre hjørne af tekst editorn, for at køre alle kommandoer eller specifikke blokke.\n\nDer er angiveligt ikke nogen tastaturgenvej for at kopiere den anden vej fra konsollen til tekst editoren."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_da.html#footnotes",
    "href": "rstudio_introduction_to_gui_console_da.html#footnotes",
    "title": "RStudios GUI – the console",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI følge den fiktive supercomputer Deep Thought i Douglas Adams’ sci-fi univers, er svaret på det ultimative spørgsmål om livet, universet og alting: 42. Men det vidste du allerede, ikk’ :-)↩︎"
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html",
    "href": "rstudio_introduction_to_gui_console_en.html",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "As mentioned elsewhere, the console lets you talk directly to the R interpreter and you will spend much time in the console testing out your code.\nHere follows a number of practical simple hints on how to use the console:\n\n\n\n\n\nWrite mean in the console and wait a short while – RStudio will present you with a list of functions etc in the current environment that starts with mean. Try scrolling through the list.\n\n\n\n\n\n\n\n\n\nWrite meaning_of_life &lt;- 52 (ENTER) to create a new variable – now try out hint #1 again and you will see this new variable has been added to the list.\n\n\n\n\n\n\nBut the meaning of life is not 52, is it?1 So we need to fix that.\n\n\n\nIn the console on an empty line, simply press the keyboard up-arrow and your previous command should re-appear, amend it to 42 and press ENTER. You can use the arrows to scroll up/down through a history of you console commands, in the current session.\n\n\n\n\n\n\n\n\n\nIn the top right hand corner of the console click the icon which resembles a broom. It clears the console window, but the console hisotry is retained.\n\n\n\n\n\n\n\n\n\nOpen an empty R script in the text editor, enter print(\"copy, paste, execute\") (CTRL+ENTER) – this command should be copied into the console and executed immediately.\n\n\n\n\n\n\n\n\n\nIn the text editor add another line below the first one: print(\"with CTRL-ENTER\") – this time, highlight both lines (mouse: click+drag) before CTRL+ENTER.\n\n\nHint Check out the ‘Run’ dropdown button in the top right-hand corner of the text editor, to run all code or specific chunks.\n\nThere is apparently no keyboard short-cut to copy/paste the current console line to the text editor."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#predictive-texting",
    "href": "rstudio_introduction_to_gui_console_en.html#predictive-texting",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Write mean in the console and wait a short while – RStudio will present you with a list of functions etc in the current environment that starts with mean. Try scrolling through the list."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#predictive-texting-..-which-is-adaptive",
    "href": "rstudio_introduction_to_gui_console_en.html#predictive-texting-..-which-is-adaptive",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Write meaning_of_life &lt;- 52 (ENTER) to create a new variable – now try out hint #1 again and you will see this new variable has been added to the list."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#re-use-previous-commands",
    "href": "rstudio_introduction_to_gui_console_en.html#re-use-previous-commands",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "But the meaning of life is not 52, is it?1 So we need to fix that.\n\n\n\nIn the console on an empty line, simply press the keyboard up-arrow and your previous command should re-appear, amend it to 42 and press ENTER. You can use the arrows to scroll up/down through a history of you console commands, in the current session."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#sweeping-away-the-clutter",
    "href": "rstudio_introduction_to_gui_console_en.html#sweeping-away-the-clutter",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "In the top right hand corner of the console click the icon which resembles a broom. It clears the console window, but the console hisotry is retained."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#running-a-command-from-the-text-editor",
    "href": "rstudio_introduction_to_gui_console_en.html#running-a-command-from-the-text-editor",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Open an empty R script in the text editor, enter print(\"copy, paste, execute\") (CTRL+ENTER) – this command should be copied into the console and executed immediately."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#running-multiple-commands-from-the-text-editor",
    "href": "rstudio_introduction_to_gui_console_en.html#running-multiple-commands-from-the-text-editor",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "In the text editor add another line below the first one: print(\"with CTRL-ENTER\") – this time, highlight both lines (mouse: click+drag) before CTRL+ENTER.\n\n\nHint Check out the ‘Run’ dropdown button in the top right-hand corner of the text editor, to run all code or specific chunks.\n\nThere is apparently no keyboard short-cut to copy/paste the current console line to the text editor."
  },
  {
    "objectID": "rstudio_introduction_to_gui_console_en.html#footnotes",
    "href": "rstudio_introduction_to_gui_console_en.html#footnotes",
    "title": "RStudios GUI – the console",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAccording to the fictional supercomputer Deep Thought in Douglas Adams’ sci-fi universe, The Answer to the Ultimate Question of Life, The Universe, and Everything, is 42, but you probably already knew that :-)↩︎"
  }
]