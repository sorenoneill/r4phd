[
  {
    "objectID": "qmd_rrr/unfinished.html#automation",
    "href": "qmd_rrr/unfinished.html#automation",
    "title": "Reproducible Research with R",
    "section": "1.1 Automation",
    "text": "1.1 Automation\nThe entire process from raw data to output should be:\n\nscripted\nreproducible\nreversible"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#automation-1",
    "href": "qmd_rrr/unfinished.html#automation-1",
    "title": "Reproducible Research with R",
    "section": "1.2 Automation",
    "text": "1.2 Automation\nThe entire process from raw data to output should be:\n\nscripted\nreproducible\nreversible.\n\nE.g.\n\ndata &lt;- read.csv(\"my_data_file.csv\")\n# excluded as participant entered an invalid CPR number\ndata &lt;- data %&gt;% filter(id != \"2321369-1212\")\n\n..but why not just delete that observation in raw data..?"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#scripted-workflows",
    "href": "qmd_rrr/unfinished.html#scripted-workflows",
    "title": "Reproducible Research with R",
    "section": "1.3 Scripted workflows",
    "text": "1.3 Scripted workflows"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#load-and-clean-data",
    "href": "qmd_rrr/unfinished.html#load-and-clean-data",
    "title": "Reproducible Research with R",
    "section": "1.4 Load and clean data",
    "text": "1.4 Load and clean data\nhttp://www.sthda.com/english/wiki/best-practices-in-preparing-data-files-for-importing-into-r"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#bibtex-csl-zotero-and-friends",
    "href": "qmd_rrr/unfinished.html#bibtex-csl-zotero-and-friends",
    "title": "Reproducible Research with R",
    "section": "3.1 BibTeX, csl, zotero and friends",
    "text": "3.1 BibTeX, csl, zotero and friends"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#bibtex",
    "href": "qmd_rrr/unfinished.html#bibtex",
    "title": "Reproducible Research with R",
    "section": "3.2 BibTeX",
    "text": "3.2 BibTeX\nA simple human readable text file format for references\n\nExport directly from PubMED and others\nExport from Zotero, EndNote(?) and others"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#zotero",
    "href": "qmd_rrr/unfinished.html#zotero",
    "title": "Reproducible Research with R",
    "section": "3.3 Zotero",
    "text": "3.3 Zotero\nAn open source, free reference manager – well integrated with firefox.\nAllows for shared libraries.\nPlugin BetterBibTex for … well, better bibTeX.\nAlternatives: Mendeley (Elsevier), EndNote, RefManager, etc"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#zotero-1",
    "href": "qmd_rrr/unfinished.html#zotero-1",
    "title": "Reproducible Research with R",
    "section": "3.4 Zotero",
    "text": "3.4 Zotero\n3.4.1 Let me demonstrate…\n\nhow to find a new reference\ninclude it in zoteros library\nautomatically update bibTeX file (per project)\ncite in Rmd file"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#zotero-got-style",
    "href": "qmd_rrr/unfinished.html#zotero-got-style",
    "title": "Reproducible Research with R",
    "section": "3.5 Zotero got style!",
    "text": "3.5 Zotero got style!\nLoads of styles … 10.000+ … from APA to Ugeskrift for Læger\n…and you can write your own if need be.\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#exercise",
    "href": "qmd_rrr/unfinished.html#exercise",
    "title": "Reproducible Research with R",
    "section": "3.6 Exercise",
    "text": "3.6 Exercise\n(without Zotero)\n\nYou have decided to include an extra citation in the main_v1.qmd file\n\nGo to scholar.google.com\nSearch for ‘What low back pain is and why we need to pay attention’\nGo to science direct and click ‘Cite’ to get bibtex\nCopy bibtex content to your reference file\nCopy the BibTeX identifier and insert it as a citation\nRe-render your document"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#collaborating-with-tech-savvy-nerds",
    "href": "qmd_rrr/unfinished.html#collaborating-with-tech-savvy-nerds",
    "title": "Reproducible Research with R",
    "section": "4.1 Collaborating with tech savvy nerds",
    "text": "4.1 Collaborating with tech savvy nerds\n…enter GIT and renv"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#r-package-renv",
    "href": "qmd_rrr/unfinished.html#r-package-renv",
    "title": "Reproducible Research with R",
    "section": "4.2 R package renv",
    "text": "4.2 R package renv\nNot very difficult at all.\n\nMaintains a library of R packages along with r code\nUpdates to R and packages does not break your project\nPermits you to come back in 5 years and re-execute your code\n\nhttps://rstudio.github.io/renv/articles/renv.html"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#git",
    "href": "qmd_rrr/unfinished.html#git",
    "title": "Reproducible Research with R",
    "section": "4.3 GIT",
    "text": "4.3 GIT\nIt is a bit difficult.\n\nInstead of storing multiple versions of the same file …\n..it stores just the one file, and a (hidden) version-history\nChanges are handled by Diff’ing versions\n\n\nAll changes (process) are documented\nAll changes (process) are reversible\nProjects are forkable and mergable\n\n\nindispensable for LARGE projects\nGIT is a separate program, supported by RStudio."
  },
  {
    "objectID": "qmd_rrr/unfinished.html#summary-1",
    "href": "qmd_rrr/unfinished.html#summary-1",
    "title": "Reproducible Research with R",
    "section": "5.1 Summary",
    "text": "5.1 Summary\n\nComment your code\nComment your project\nMeaningful names\nStructured files/folders\nHuman readable files\nSCRIPTED AUTOMATION !!\nSplit the process into ‘chunks’ (data / analyses / output)\nSplit the code into files\nSplit the code-in-files into chunks"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#later-in-your-r-journey",
    "href": "qmd_rrr/unfinished.html#later-in-your-r-journey",
    "title": "Reproducible Research with R",
    "section": "5.2 Later in your R journey:",
    "text": "5.2 Later in your R journey:\n\nAccessing databases directly (RedCAP, ao)\nCreating interactive websitesand documents\nMaking graphs come alive with animations\nLive data analyses dashboards\n..and much much more (it can even order pizza)"
  },
  {
    "objectID": "qmd_rrr/unfinished.html#getting-help",
    "href": "qmd_rrr/unfinished.html#getting-help",
    "title": "Reproducible Research with R",
    "section": "5.3 Getting help",
    "text": "5.3 Getting help\n\nGoogle\nStackoverflow\nStackoverflow – R4PHD"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_2_da.html",
    "href": "qmd_rrr/reproducible_research_workflow_2_da.html",
    "title": "RRR – Structuring your project",
    "section": "",
    "text": "Download dette RRR projekt eksempel\nUnzip file i en ny folder et egnet sted\nI RStudio, lav et nyt R projekt og vælg den folder som existing directory\n\n\n\n\n\n\n\nShow me how\n\n\n\n\n\n\n\n\n\nDisse øvelser løses bedst parvist.\n\n\n\n\n\n\nØvelse #1 – Inspicér filerne\n\n\n\n\n\nIndtil videre, undlad at ændre filerne og der er igen grund til at bruge meget tid på detaljerne i koden – prøv i stedet at forstå koden og hvordan de forskellige filer hænger sammen, som et struktureret projekt.\n\nHvad handler projektet om?\nHvad formål tjener de enkelte filer?\nHvordan er filerne relateret til hinanden?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 – Hvad er projektets produkt/output?\n\n\n\n\n\nPrøv at:\n\nRender et manuskript som html eller word eller pdf\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nKig i YAML i main qmd dokumentet\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #3 – Et simpelt problem i et manuskript\n\n\n\n\n\nData for deltager med ID=7 er fejlbehæftet (apparatur fejl).\nHvordan løste kode forfatteren det problem?\n\n\n\n\n\n\nHint\n\n\n\n\n\nDet vil være god Reproducible Research praksis at løse problemer som del af data cleaning og wrangling, fremfor at redigere i rå data.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #4 – Et problem med kryds referencer\n\n\n\n\n\nKode forfatteren har ikke nær-læst Instructions for Authors til det tidsskrift der skal indsendes til, og har placeret figuren umiddelbart efter første reference.\nFaktisk skal:\n\nTabeller placeres i teksten nær første reference\nFigurer skal placeres i en særskilt sektion ‘Figures’ (umiddelbart før References) og en placeholder &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; skal indsættes i teksten nær første reference.\n\nHvordan ville du ændre koden.\n\n\n\n\n\n\nHint\n\n\n\n\n\nKode blokken ‘figure_distribution_by_probe_and session’ i ‘main_v1.qmd’ kan forblive hvor den er og kode blokke ‘show_fig’ kan flyttes længere ned i manuskriptet under en ny overskrift # Figures, umiddelbart før # References sektionen.\nMarkeringen &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; bør skrives som &lt;&lt;FIGURE @fig-distribution-by-probe-and-session ABOUT HERE&gt;&gt; på en separat linje efter første reference til figuren (“We presented a boxplot…”). Det bliver så konverteret til &lt;&lt;FIGURE 1 ABOUT HERE&gt;&gt;.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #5 – Figur parametre\n\n\n\n\n\nTidsskriftets editorer har beklaget sig over at figuren ikke lever op til tidsskriftets krav.\nDe vil have filen uploadet som:\n\ntiff format\n2 tommer (inches) i bredde\n1.5 tommer (inches) i højde\ni 600 dpi resolution\n\nHvordan vil du fikse det problem og hvor vil du finde output’et?\nHvordan ville du produce en ekstra fil af det samme plot til en poster – denne gang i 6 tommer gange 6 tommer?\n\n\n\n\n\n\nHint\n\n\n\n\n\nFiguren defineres i kode blokken ‘figure_distribution_by_probe_and session’.\nDu vil finde alle relevant parametre defineret i funktionen ggsave.\nBero ikke på output’et i RStudios viewer når du skal inspicere figuren gemt i filen – i stedet inspicér den i folderen ‘plots’.\nHvis du vi lgemme en ekstra fil af plottet i en anden størrelse, så kunne du måske bare køre ggsave kommandoen to gange med forskellige parametre?\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #6 – Endnu en reference\n\n\n\n\n\nDu er blevet bedt om at tilføje en reference til publikationen “Swearing as a Response to Pain: Assessing Hypoalgesic Effects of Novel “Swear” Words” af Richard Stephens og Olly Robertson (Frontiers in Psychology).\nHvordan kunne du gøre det? Kig i main_v1.qmd og i reference listen for at få inspiration.\n\n\n\n\n\n\nHint\n\n\n\n\n\nPå hjemmesiden Fronties in Psychology finder du et link i højre side ‘Export citation’, som giver dig mulighed for at downloade referencen som BibTeX.\nKig engang i den fil når den er downloadet og sammenlign den med indholdet i references.bib\nCopy/paste…\nHver reference er definet med et unikt id i BibTeX definitionen .. kan du se hvor den er definet og hvordan den bruges i reference i quarto dokumentet?\nPrøv at give den nye reference et andet id og brug det samme i main_v1.qmd filen til at citere artiklen af Stephens og Robertson.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #7 – Det er også bare et træls tidsskrift!\n\n\n\n\n\nØV! Efter alle dine tilpasninger har editors alligevel afvist dit manuskript. Tidsskriftet var vitterligt en ‘Pain’.\nSå nu skal du omformattere manuskriptet til et andet tidsskrift og du får derfor brug for en anden reference og bibliografi stil.\nSom antydet herover, var manuskriftet tilpasset tidskrift ‘Pain’.\n\nFind ud af hvor dit aktuelle reference og bibliografi stil defineres og hvilke filer der er involveret.\nVælg et andet tidsskrift – bare en eller anden du kender.\nGo på internettet og find en ny stil definition for det tidsskrift – “Google is your friend” og det er Zotero også!\nFix din reference/bibliografi stil.\n\n\n\n\n\n\n\nHints\n\n\n\n\n\n\nReference/bibliografi stilen defineres i YAML i ‘main_v1.qmd’ file – specifikt: csl: pain.csl (linjen bibliography: references.bib definerer BibTeX filen hvor referencerne er gemt, men ikke stilen)\nDu finder en overflødighedshorn af Citation Style Language (.csl) filer du kan downloade på the ‘Zotero style repository’ – søg og du skal finde – download .csl filen til din projekt folder.\nRediger din YAML csl definition så det passer til din nye csl fil og re-render dit manuskript.\n\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #8 – Samarbejde\n\n\n\n\n\nDin primære medforfatter på artiklen, Dr. Jekyll har revideret første version af manuskriptet for nogen tid siden. Som et ondt geni bruger Dr. Jekyll selvfølgeligt også R og han har droppet den reviderede qmd file til dig her.\nDownload Dr. Jekylls reviderede version og sammenlign med din egen. Til det formål kan du gøre brug af diff’ing af filer … kig på noterne her på r4phd om RRR – Collaboration (with R users).\nVær kritisk med hvad du accepterer og hvad du afviser – Dr. Jekylls revision er baseret på en ældre version af dit manuskript.\n\n\n\n\n\n\nHint\n\n\n\n\n\nDu kan bruge denne online diff app … eller du kan vælge at installere er program som f.eks Meld på din egen computer.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #9 – Word skabelon\n\n\n\n\n\nDet nye tidsskrift du indsender til kræver at alle overskrifter niveau 1 skal være bold og i en smert farve som du selv vælger.\nDe insisterer også på at du indsender manuskriptet som en Microsoft Word fil.\nFørst gør følgende\n\nI YAML sektionen i main_v1.qmd ret format: html til format: docx\nRender dokumentet så der geereres en MS Word docx fil som output\nOmdøb den fil fra main_v1.docx til my_word_template.docx\n\nRet nu den samme YAML linje fra format: docx til dette:\n\nformat: \n  docx:\n    reference-doc: my_word_template.docx\n\nBemærk teksten skal stå præcist sådan her – linjeskift og mellemrum er vigtige!\nGør nu følgende:\n\nRender dit qmd script igen for at generere en ny main_v1.docx fil\nInspicér den fil (åben den i Word eller LibreOffice) – læg specielt mærke til typografi stilen af niveau 1 overskrifter som Background.\nLuk main_v1.docx igen og åben open my_word_template.docx istedet for\nCheck hvilekn stil der er gældende for Background (sikkert ‘Heading 1’ eller lignende) og redigér den typografi stil i stil editoren. Der er ikke nok bare at ændre overskriften Background – du skal ændre den stil som er associeret med typografien.\nGem my_word_template.docx efter du har lavet ændringerne\nRender nu en ny version af main_v1.qmd og se om stil ændringerne har haft effekt.\n\nNu kan du leje lidt med de andre stil definitioner i dokumentet, f.eks de andre overskrifts niveauer, brødteksten, figur teksten, etc.\nHusk at du skal lave ændringerne i typografi stil i my_word_template.docx med stil editoren (og gemme) før du gen-render qmd filen.\n\n\n\n\n\n\n\n\n\nBonus – Kig i folderen ‘Presentations’\n\n\n\n\n\n\nMed tanke for at figurer, tabeller, summary statistics mm bruges i ‘main_v1.qmd’, men også er gemt som separate filer, kan du genbrug dem i andre sammenhænge, f.eks en præsentation.\nKig på static presentation qmd og html filerne – du skal også vide, at sådanne filer kan eksporteres til pdf, LibreOffice Impress og Microsoft Power Point filer.\nFilen dynamic presentation er ikke færdig endnu, men prøv at google dynamic r presentations."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_2_da.html#projekt-eksempel",
    "href": "qmd_rrr/reproducible_research_workflow_2_da.html#projekt-eksempel",
    "title": "RRR – Structuring your project",
    "section": "",
    "text": "Download dette RRR projekt eksempel\nUnzip file i en ny folder et egnet sted\nI RStudio, lav et nyt R projekt og vælg den folder som existing directory\n\n\n\n\n\n\n\nShow me how\n\n\n\n\n\n\n\n\n\nDisse øvelser løses bedst parvist.\n\n\n\n\n\n\nØvelse #1 – Inspicér filerne\n\n\n\n\n\nIndtil videre, undlad at ændre filerne og der er igen grund til at bruge meget tid på detaljerne i koden – prøv i stedet at forstå koden og hvordan de forskellige filer hænger sammen, som et struktureret projekt.\n\nHvad handler projektet om?\nHvad formål tjener de enkelte filer?\nHvordan er filerne relateret til hinanden?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 – Hvad er projektets produkt/output?\n\n\n\n\n\nPrøv at:\n\nRender et manuskript som html eller word eller pdf\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nKig i YAML i main qmd dokumentet\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #3 – Et simpelt problem i et manuskript\n\n\n\n\n\nData for deltager med ID=7 er fejlbehæftet (apparatur fejl).\nHvordan løste kode forfatteren det problem?\n\n\n\n\n\n\nHint\n\n\n\n\n\nDet vil være god Reproducible Research praksis at løse problemer som del af data cleaning og wrangling, fremfor at redigere i rå data.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #4 – Et problem med kryds referencer\n\n\n\n\n\nKode forfatteren har ikke nær-læst Instructions for Authors til det tidsskrift der skal indsendes til, og har placeret figuren umiddelbart efter første reference.\nFaktisk skal:\n\nTabeller placeres i teksten nær første reference\nFigurer skal placeres i en særskilt sektion ‘Figures’ (umiddelbart før References) og en placeholder &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; skal indsættes i teksten nær første reference.\n\nHvordan ville du ændre koden.\n\n\n\n\n\n\nHint\n\n\n\n\n\nKode blokken ‘figure_distribution_by_probe_and session’ i ‘main_v1.qmd’ kan forblive hvor den er og kode blokke ‘show_fig’ kan flyttes længere ned i manuskriptet under en ny overskrift # Figures, umiddelbart før # References sektionen.\nMarkeringen &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; bør skrives som &lt;&lt;FIGURE @fig-distribution-by-probe-and-session ABOUT HERE&gt;&gt; på en separat linje efter første reference til figuren (“We presented a boxplot…”). Det bliver så konverteret til &lt;&lt;FIGURE 1 ABOUT HERE&gt;&gt;.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #5 – Figur parametre\n\n\n\n\n\nTidsskriftets editorer har beklaget sig over at figuren ikke lever op til tidsskriftets krav.\nDe vil have filen uploadet som:\n\ntiff format\n2 tommer (inches) i bredde\n1.5 tommer (inches) i højde\ni 600 dpi resolution\n\nHvordan vil du fikse det problem og hvor vil du finde output’et?\nHvordan ville du produce en ekstra fil af det samme plot til en poster – denne gang i 6 tommer gange 6 tommer?\n\n\n\n\n\n\nHint\n\n\n\n\n\nFiguren defineres i kode blokken ‘figure_distribution_by_probe_and session’.\nDu vil finde alle relevant parametre defineret i funktionen ggsave.\nBero ikke på output’et i RStudios viewer når du skal inspicere figuren gemt i filen – i stedet inspicér den i folderen ‘plots’.\nHvis du vi lgemme en ekstra fil af plottet i en anden størrelse, så kunne du måske bare køre ggsave kommandoen to gange med forskellige parametre?\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #6 – Endnu en reference\n\n\n\n\n\nDu er blevet bedt om at tilføje en reference til publikationen “Swearing as a Response to Pain: Assessing Hypoalgesic Effects of Novel “Swear” Words” af Richard Stephens og Olly Robertson (Frontiers in Psychology).\nHvordan kunne du gøre det? Kig i main_v1.qmd og i reference listen for at få inspiration.\n\n\n\n\n\n\nHint\n\n\n\n\n\nPå hjemmesiden Fronties in Psychology finder du et link i højre side ‘Export citation’, som giver dig mulighed for at downloade referencen som BibTeX.\nKig engang i den fil når den er downloadet og sammenlign den med indholdet i references.bib\nCopy/paste…\nHver reference er definet med et unikt id i BibTeX definitionen .. kan du se hvor den er definet og hvordan den bruges i reference i quarto dokumentet?\nPrøv at give den nye reference et andet id og brug det samme i main_v1.qmd filen til at citere artiklen af Stephens og Robertson.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #7 – Det er også bare et træls tidsskrift!\n\n\n\n\n\nØV! Efter alle dine tilpasninger har editors alligevel afvist dit manuskript. Tidsskriftet var vitterligt en ‘Pain’.\nSå nu skal du omformattere manuskriptet til et andet tidsskrift og du får derfor brug for en anden reference og bibliografi stil.\nSom antydet herover, var manuskriftet tilpasset tidskrift ‘Pain’.\n\nFind ud af hvor dit aktuelle reference og bibliografi stil defineres og hvilke filer der er involveret.\nVælg et andet tidsskrift – bare en eller anden du kender.\nGo på internettet og find en ny stil definition for det tidsskrift – “Google is your friend” og det er Zotero også!\nFix din reference/bibliografi stil.\n\n\n\n\n\n\n\nHints\n\n\n\n\n\n\nReference/bibliografi stilen defineres i YAML i ‘main_v1.qmd’ file – specifikt: csl: pain.csl (linjen bibliography: references.bib definerer BibTeX filen hvor referencerne er gemt, men ikke stilen)\nDu finder en overflødighedshorn af Citation Style Language (.csl) filer du kan downloade på the ‘Zotero style repository’ – søg og du skal finde – download .csl filen til din projekt folder.\nRediger din YAML csl definition så det passer til din nye csl fil og re-render dit manuskript.\n\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #8 – Samarbejde\n\n\n\n\n\nDin primære medforfatter på artiklen, Dr. Jekyll har revideret første version af manuskriptet for nogen tid siden. Som et ondt geni bruger Dr. Jekyll selvfølgeligt også R og han har droppet den reviderede qmd file til dig her.\nDownload Dr. Jekylls reviderede version og sammenlign med din egen. Til det formål kan du gøre brug af diff’ing af filer … kig på noterne her på r4phd om RRR – Collaboration (with R users).\nVær kritisk med hvad du accepterer og hvad du afviser – Dr. Jekylls revision er baseret på en ældre version af dit manuskript.\n\n\n\n\n\n\nHint\n\n\n\n\n\nDu kan bruge denne online diff app … eller du kan vælge at installere er program som f.eks Meld på din egen computer.\n\n\n\n\n\n\n\n\n\n\n\n\nØvelse #9 – Word skabelon\n\n\n\n\n\nDet nye tidsskrift du indsender til kræver at alle overskrifter niveau 1 skal være bold og i en smert farve som du selv vælger.\nDe insisterer også på at du indsender manuskriptet som en Microsoft Word fil.\nFørst gør følgende\n\nI YAML sektionen i main_v1.qmd ret format: html til format: docx\nRender dokumentet så der geereres en MS Word docx fil som output\nOmdøb den fil fra main_v1.docx til my_word_template.docx\n\nRet nu den samme YAML linje fra format: docx til dette:\n\nformat: \n  docx:\n    reference-doc: my_word_template.docx\n\nBemærk teksten skal stå præcist sådan her – linjeskift og mellemrum er vigtige!\nGør nu følgende:\n\nRender dit qmd script igen for at generere en ny main_v1.docx fil\nInspicér den fil (åben den i Word eller LibreOffice) – læg specielt mærke til typografi stilen af niveau 1 overskrifter som Background.\nLuk main_v1.docx igen og åben open my_word_template.docx istedet for\nCheck hvilekn stil der er gældende for Background (sikkert ‘Heading 1’ eller lignende) og redigér den typografi stil i stil editoren. Der er ikke nok bare at ændre overskriften Background – du skal ændre den stil som er associeret med typografien.\nGem my_word_template.docx efter du har lavet ændringerne\nRender nu en ny version af main_v1.qmd og se om stil ændringerne har haft effekt.\n\nNu kan du leje lidt med de andre stil definitioner i dokumentet, f.eks de andre overskrifts niveauer, brødteksten, figur teksten, etc.\nHusk at du skal lave ændringerne i typografi stil i my_word_template.docx med stil editoren (og gemme) før du gen-render qmd filen.\n\n\n\n\n\n\n\n\n\nBonus – Kig i folderen ‘Presentations’\n\n\n\n\n\n\nMed tanke for at figurer, tabeller, summary statistics mm bruges i ‘main_v1.qmd’, men også er gemt som separate filer, kan du genbrug dem i andre sammenhænge, f.eks en præsentation.\nKig på static presentation qmd og html filerne – du skal også vide, at sådanne filer kan eksporteres til pdf, LibreOffice Impress og Microsoft Power Point filer.\nFilen dynamic presentation er ikke færdig endnu, men prøv at google dynamic r presentations."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_1_da.html",
    "href": "qmd_rrr/reproducible_research_workflow_1_da.html",
    "title": "RRR – Workflow #1",
    "section": "",
    "text": "1 Reproducible Research\nLad os sige, at du har opdaget en fejl i dit datasæt … et forkert CPR nummer. Du kunne f.eks beslutte at slette det data punkt fra dine data sådan her:\n\ndata &lt;- read.csv(\"my_data_file.csv\")\n# excluded as participant entered an invalid CPR number\ndata &lt;- data %&gt;% filter(id != \"2321369-1212\")\n\n…men hvorfor ikke bare slette den række fra csv filen?\n\n\n\n\n\n\nReproducible Research\n\n\n\n\n\nI følge principperne for Reproducible Research skal hele processen fra rådata til output være:\n\nscripted (kodet)\nreproducérbart\nreversibelt\n\nHvad sker der mon seks måneder senere, når en-eller-anden opdager at du har downloadtet 106 rækker data fra RedCap, men du i dit manuskript skriver at n=105? Tror du, at du kan huske hvor den sidste observation blev af?\nEller for et mere dramatisk eksempel, se denne youtube video  når du har tid (~20 minutes)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_en.html",
    "href": "qmd_rrr/reproducible_research_intro_en.html",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”\n\n\n\n\n\n\nTo help yourself not get lost (or find your way again)\nDocumentation (formal/legal)\nReproducibility (from A-Z)\nReuseability (different outputs)\nRecycling (reassemble for other purposes)\n\n\n\n\n\n\n\n\n\n\nAim for level four ‘Product documentation’ (**) – Level 5 ‘Process documentation’ can be quite involved and is probably only relevant when many authors collaborate on the same code/data (if it is important to know who did what when, i.e. who screwed up)."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_en.html#what-it-is",
    "href": "qmd_rrr/reproducible_research_intro_en.html#what-it-is",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_en.html#why",
    "href": "qmd_rrr/reproducible_research_intro_en.html#why",
    "title": "Intro to RRR",
    "section": "",
    "text": "To help yourself not get lost (or find your way again)\nDocumentation (formal/legal)\nReproducibility (from A-Z)\nReuseability (different outputs)\nRecycling (reassemble for other purposes)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_en.html#levels-of-research-reproducibility",
    "href": "qmd_rrr/reproducible_research_intro_en.html#levels-of-research-reproducibility",
    "title": "Intro to RRR",
    "section": "",
    "text": "Aim for level four ‘Product documentation’ (**) – Level 5 ‘Process documentation’ can be quite involved and is probably only relevant when many authors collaborate on the same code/data (if it is important to know who did what when, i.e. who screwed up)."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_en.html",
    "href": "qmd_rrr/reproducible_research_collaboration_en.html",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Three scenarios :\n\nYour collaborators do not use the R ecosystem (booh!)\nYour collaborators use the R ecosystem (woohoo!)\nYou and your collaborators are hardcore nerds (git!)\n\n\n\n\n\nRender your R-markdown code into a Word or OpenDocument file … send it via email or carrier-pidgeon\nCollaborators can use Track changes in their chosen word-processor and … return it\nYou then manually transfer changes back to your qmd … start the process over again for the next time\n\nBenefits\n\nSimple\nNo new tools to learn for R-agnostic colleagues\nAnyone can join in\nSeparation of comments and revisions\n\nDrawbacks\n\nError prone\nRedundancy\nMessy versioning nightmare\nFocus shifts towards typesetting / presentation\n\n\n\n\n\nGet your qmd files (data files etc) and … send it\nCollaborators edit the qmd directly and … return it\nDiff the two version of the qmd file and … merge them selectively\n\n\n\nSome very nice and useful apps will let you see and merge differences between two versions of the same text (qmd) files:\n\nMeld\nBeyond compare\nAraxis merge\nP4Merge\nDeltaWalker\n..and others\n\nThere are also several online version .. e.g. mergely …you probably should not upload sensitive information though.\n\n\n\n\n\n\nShow me Meld in action\n\n\n\n\n\nMeld and other diff applications will compare different files and and highlight the differences between them, making it easy to see changes between.\nIn this simple example, we use Meld to compare versions 1 and 2 of nearly identical files. The video illustrates a partial change in a line, a line deletion and a line insertion in version 2 (right hand side) compared to version 1.\n\n\n\n\nBenefits\n\nRelatively simple\nNew tools are easy learn\nAnyone can join in\nOnly one file type for all collaborators\nFocus remains on content\n\nDrawback\n\nStill some redundancy (qmd file versions)\nMessy versioning nightmare\nComments and revisions are not clearly separated\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nCopy these two texts (one at a time) and insert them into the left and right hand fields at this site\nVersion 1\n\nThis text is almost similar to the other one. But not completely identical.\n\nSome lines are identical.\n\nSome lines have disappeared.\n\nVersion 2\n\nThis text is almost similar to the other one, but not completely identical.\n\nSome lines are identical.\n\nSome lines are brand new\n\n\n\n\n\n\n\n\nUse an online GIT repository like github or SDUs self-hosted gitlab server – you will need to contact IT support for an account.\nBenefits\n\nTop tier reproducible research\nWorld class version control\nNo redundancy and clean working directories\n\nDrawback\n\nLet’s face it – it’s a bit of a learning curve :-)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-other-researchers",
    "href": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-other-researchers",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Three scenarios :\n\nYour collaborators do not use the R ecosystem (booh!)\nYour collaborators use the R ecosystem (woohoo!)\nYou and your collaborators are hardcore nerds (git!)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-r-agnostic-colleagues",
    "href": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-r-agnostic-colleagues",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Render your R-markdown code into a Word or OpenDocument file … send it via email or carrier-pidgeon\nCollaborators can use Track changes in their chosen word-processor and … return it\nYou then manually transfer changes back to your qmd … start the process over again for the next time\n\nBenefits\n\nSimple\nNo new tools to learn for R-agnostic colleagues\nAnyone can join in\nSeparation of comments and revisions\n\nDrawbacks\n\nError prone\nRedundancy\nMessy versioning nightmare\nFocus shifts towards typesetting / presentation"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-r-users",
    "href": "qmd_rrr/reproducible_research_collaboration_en.html#collaborating-with-r-users",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Get your qmd files (data files etc) and … send it\nCollaborators edit the qmd directly and … return it\nDiff the two version of the qmd file and … merge them selectively\n\n\n\nSome very nice and useful apps will let you see and merge differences between two versions of the same text (qmd) files:\n\nMeld\nBeyond compare\nAraxis merge\nP4Merge\nDeltaWalker\n..and others\n\nThere are also several online version .. e.g. mergely …you probably should not upload sensitive information though.\n\n\n\n\n\n\nShow me Meld in action\n\n\n\n\n\nMeld and other diff applications will compare different files and and highlight the differences between them, making it easy to see changes between.\nIn this simple example, we use Meld to compare versions 1 and 2 of nearly identical files. The video illustrates a partial change in a line, a line deletion and a line insertion in version 2 (right hand side) compared to version 1.\n\n\n\n\nBenefits\n\nRelatively simple\nNew tools are easy learn\nAnyone can join in\nOnly one file type for all collaborators\nFocus remains on content\n\nDrawback\n\nStill some redundancy (qmd file versions)\nMessy versioning nightmare\nComments and revisions are not clearly separated\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nCopy these two texts (one at a time) and insert them into the left and right hand fields at this site\nVersion 1\n\nThis text is almost similar to the other one. But not completely identical.\n\nSome lines are identical.\n\nSome lines have disappeared.\n\nVersion 2\n\nThis text is almost similar to the other one, but not completely identical.\n\nSome lines are identical.\n\nSome lines are brand new"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_en.html#tech-savvy-collaborators",
    "href": "qmd_rrr/reproducible_research_collaboration_en.html#tech-savvy-collaborators",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Use an online GIT repository like github or SDUs self-hosted gitlab server – you will need to contact IT support for an account.\nBenefits\n\nTop tier reproducible research\nWorld class version control\nNo redundancy and clean working directories\n\nDrawback\n\nLet’s face it – it’s a bit of a learning curve :-)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_en.html",
    "href": "qmd_rrr/reproducible_research_citations_en.html",
    "title": "RRR – Citing references",
    "section": "",
    "text": "BibTeX is a simple human readable text file format for references\n\nExport directly from PubMED and others\nExport from Zotero, EndNote(?) and others\n\nAn example BibTeX entry\n@article{graeffInterIndividualDifferencesExplain2021,\n  title = {Inter-{{Individual Differences Explain More Variance}} in {{Conditioned Pain Modulation Than Age}}, {{Sex}} and {{Conditioning Stimulus Intensity Combined}}},\n  author = {Graeff, Philipp and Itter, Alina and Wach, Katharina and Ruscheweyh, Ruth},\n  year = {2021},\n  month = sep,\n  journal = {Brain Sciences},\n  volume = {11},\n  number = {9},\n  pages = {1186},\n  publisher = {{Multidisciplinary Digital Publishing Institute}},\n  issn = {2076-3425},\n  doi = {10.3390/brainsci11091186},\n  abstract = {Conditioned pain modulation (CPM) describes the reduction in pain evoked by a test stimulus (TS) when presented together with a heterotopic painful conditioning stimulus (CS). CPM has been proposed to reflect inter-individual differences in endogenous pain modulation, which may predict susceptibility for acute and chronic pain. Here, we aimed to estimate the relative variance in CPM explained by inter-individual differences compared to age, sex, and CS physical and pain intensity. We constructed linear and mixed effect models on pooled data from 171 participants of several studies, of which 97 had repeated measures. Cross-sectional analyses showed no significant effect of age, sex or CS intensity. Repeated measures analyses revealed a significant effect of CS physical intensity (p = 0.002) but not CS pain intensity (p = 0.159). Variance decomposition showed that inter-individual differences accounted for 24\\% to 34\\% of the variance in CPM while age, sex, and CS intensity together explained {$&lt;$}3\\% to 12\\%. In conclusion, the variance in CPM explained by inter-individual differences largely exceeds that of commonly considered factors such as age, sex and CS intensity. This may explain why predictive capability of these factors has had conflicting results and suggests that future models investigating them should account for inter-individual differences.},\n  copyright = {http://creativecommons.org/licenses/by/3.0/},\n  langid = {english},\n  keywords = {conditioned pain modulation,conditioning stimulus,CPM variability,endogenous analgesia,interindividual factors},\n  file = {/home/soon/Zotero/storage/AJ8W4U2G/Graeff et al. - 2021 - Inter-Individual Differences Explain More Variance.pdf;/home/soon/Zotero/storage/3SYEHU3A/1186.html}\n}\nBut you won’t be typing them by hand – they can be downloaded directly from the research papers online version straight to Zotero with a single click in your browser.\n\n\n\nZotero is an open source, free reference manager – well integrated with firefox, MS Word and other apps.\nAllows for shared libraries between you and your colleagues.\nSeveral plugins, including BetterBibTex for … well, better bibTeX.\nAlternatives: Mendeley (Elsevier), EndNote, RefManager, etc\n\n\n…awaiting video of Zotero library, download, export, etc\n\n\n\nLoads of styles … 10.000+ … from APA to Ugeskrift for Læger\n…and you can write your own if need be.\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_en.html#bibtex",
    "href": "qmd_rrr/reproducible_research_citations_en.html#bibtex",
    "title": "RRR – Citing references",
    "section": "",
    "text": "BibTeX is a simple human readable text file format for references\n\nExport directly from PubMED and others\nExport from Zotero, EndNote(?) and others\n\nAn example BibTeX entry\n@article{graeffInterIndividualDifferencesExplain2021,\n  title = {Inter-{{Individual Differences Explain More Variance}} in {{Conditioned Pain Modulation Than Age}}, {{Sex}} and {{Conditioning Stimulus Intensity Combined}}},\n  author = {Graeff, Philipp and Itter, Alina and Wach, Katharina and Ruscheweyh, Ruth},\n  year = {2021},\n  month = sep,\n  journal = {Brain Sciences},\n  volume = {11},\n  number = {9},\n  pages = {1186},\n  publisher = {{Multidisciplinary Digital Publishing Institute}},\n  issn = {2076-3425},\n  doi = {10.3390/brainsci11091186},\n  abstract = {Conditioned pain modulation (CPM) describes the reduction in pain evoked by a test stimulus (TS) when presented together with a heterotopic painful conditioning stimulus (CS). CPM has been proposed to reflect inter-individual differences in endogenous pain modulation, which may predict susceptibility for acute and chronic pain. Here, we aimed to estimate the relative variance in CPM explained by inter-individual differences compared to age, sex, and CS physical and pain intensity. We constructed linear and mixed effect models on pooled data from 171 participants of several studies, of which 97 had repeated measures. Cross-sectional analyses showed no significant effect of age, sex or CS intensity. Repeated measures analyses revealed a significant effect of CS physical intensity (p = 0.002) but not CS pain intensity (p = 0.159). Variance decomposition showed that inter-individual differences accounted for 24\\% to 34\\% of the variance in CPM while age, sex, and CS intensity together explained {$&lt;$}3\\% to 12\\%. In conclusion, the variance in CPM explained by inter-individual differences largely exceeds that of commonly considered factors such as age, sex and CS intensity. This may explain why predictive capability of these factors has had conflicting results and suggests that future models investigating them should account for inter-individual differences.},\n  copyright = {http://creativecommons.org/licenses/by/3.0/},\n  langid = {english},\n  keywords = {conditioned pain modulation,conditioning stimulus,CPM variability,endogenous analgesia,interindividual factors},\n  file = {/home/soon/Zotero/storage/AJ8W4U2G/Graeff et al. - 2021 - Inter-Individual Differences Explain More Variance.pdf;/home/soon/Zotero/storage/3SYEHU3A/1186.html}\n}\nBut you won’t be typing them by hand – they can be downloaded directly from the research papers online version straight to Zotero with a single click in your browser."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_en.html#zotero",
    "href": "qmd_rrr/reproducible_research_citations_en.html#zotero",
    "title": "RRR – Citing references",
    "section": "",
    "text": "Zotero is an open source, free reference manager – well integrated with firefox, MS Word and other apps.\nAllows for shared libraries between you and your colleagues.\nSeveral plugins, including BetterBibTex for … well, better bibTeX.\nAlternatives: Mendeley (Elsevier), EndNote, RefManager, etc\n\n\n…awaiting video of Zotero library, download, export, etc\n\n\n\nLoads of styles … 10.000+ … from APA to Ugeskrift for Læger\n…and you can write your own if need be.\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_white_space_en.html",
    "href": "qmd_rrr/reproducible_research_basics_white_space_en.html",
    "title": "White space",
    "section": "",
    "text": "1 Using white space\nIn MarkDown,\n\nin the middle of text: multiple spaces = a single space\nat the end of text: space + new-line = new-line + empty-line\n\n\nMarkdownOutputGood practice\n\n\nLook at this MarkDown, before clicking the next tab…\nIn markdown, there's an important difference\nbetween '_new-line_' and '_empty-line_'.\n\n...white space is important.\n\n\n\nLook at the output from the MarkDown, before clicking the last tabs…\nIn markdown, there’s an important difference between ‘new-line’ and ‘empty-line’.\n…white space is important.\n\n\n\nany number of spaces between words is equal to one space\nany number of empty lines between paragraphs is equal to one empty line\nuse one space to separate functions, operators, etc a%&gt;%b vs a %&gt;% b\nuse empty line to indicate new paragraph\n\nGo back and forth between the first two tabs, and look closely at the white space…\n\n\n\nHint Check out Soft wrap long lines in the Code menu."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_readme_en.html",
    "href": "qmd_rrr/reproducible_research_basics_readme_en.html",
    "title": "README.md",
    "section": "",
    "text": "Maintain a README.md file in each project, at the root level\n\nA simple description of the project purpose (the ‘why’)\nPeople involved\nData sources etc\nList most important components (data and files)\n\n\nEspecially important for larger, more complex projects with many data sources, collaborators, etc\n\n\n#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_readme_en.html#readme.md-template",
    "href": "qmd_rrr/reproducible_research_basics_readme_en.html#readme.md-template",
    "title": "README.md",
    "section": "",
    "text": "#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html",
    "title": "Naming stuff",
    "section": "",
    "text": "Let variable, function and file names convey meaning.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nLook at the code and suggest better variable names\n\n\n\n\n\n\nSuggested solution\n\n\n\n\n\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")\n\n\n\n\n\n\n\n\n\n\nAn even better solution\n\n\n\n\n\n\ndata &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\n\n\n\nAlas, the function cpr2sex does not exist in base R or Tidyverse, but we can write it ourselves:\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nWe could hide this away in a separate file and ‘source’ it .. or even make a new package…\n\n\n\n\n\n\n\n\nDo use under_scores\nDo not use camelCase\nDo not use kebab-case\n\n\n\n\n\nmake_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)\n\n\n\n\nMain points\n\nNames should be meaningful\nUse under_scores, not CamelCase, nor kebab-case\nFunction names should be verbs\nVariable names should be nouns"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#meaning",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#meaning",
    "title": "Naming stuff",
    "section": "",
    "text": "Let variable, function and file names convey meaning.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nLook at the code and suggest better variable names\n\n\n\n\n\n\nSuggested solution\n\n\n\n\n\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")\n\n\n\n\n\n\n\n\n\n\nAn even better solution\n\n\n\n\n\n\ndata &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\n\n\n\nAlas, the function cpr2sex does not exist in base R or Tidyverse, but we can write it ourselves:\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nWe could hide this away in a separate file and ‘source’ it .. or even make a new package…"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#compound-names",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#compound-names",
    "title": "Naming stuff",
    "section": "",
    "text": "Do use under_scores\nDo not use camelCase\nDo not use kebab-case"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#nouns-and-verbs",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#nouns-and-verbs",
    "title": "Naming stuff",
    "section": "",
    "text": "make_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#names",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_en.html#names",
    "title": "Naming stuff",
    "section": "",
    "text": "Main points\n\nNames should be meaningful\nUse under_scores, not CamelCase, nor kebab-case\nFunction names should be verbs\nVariable names should be nouns"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_en.html",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_en.html",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)\n\n\n\n\n\n\n\n\n\n\n\n\n\nText always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.xml\n\n\n\nStick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?\n\n\n\n\n\nMain points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_en.html#the-root",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_en.html#the-root",
    "title": "Files",
    "section": "",
    "text": "Should contain\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nYour main R scripts\nYour RMarkdown and quarto scripts\nRelevant subfolders (/custom_functions, /gfx, /data, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_en.html#file-types",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_en.html#file-types",
    "title": "Files",
    "section": "",
    "text": "Text always preferable to binary files\nMarkup files (HTML, XML, etc) are human readable, but can be complex\nApplication files (.odt, .docx) are often either binary files or very complex markup files\n\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.xml"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_en.html#file-types-1",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_en.html#file-types-1",
    "title": "Files",
    "section": "",
    "text": "Stick to simple, human-readable files like R-scripts, markdown, csv files, etc, as far into the process as you can and only generate pdf, word, tiff, jpeg etc files as the final step.\nIf any characters look weird in a simple txt file (it does happen) – it’s probably the character encoding – just stick to UTF8/UTF16\n\n\nBy the way, what do you think the first thing the typesetters at Springer does with your manuscript once accepted?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_en.html#files-and-folders-1",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_en.html#files-and-folders-1",
    "title": "Files",
    "section": "",
    "text": "Main points\n\nUse a strict folder structure you can handle – make a template!\nUse relational folder paths if possible\nUse human-readable files only if possible (txt, md, Rmd, csv, etc)\nOnly use non-human readable files for ‘final output’ (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_exercises_en.html",
    "href": "qmd_rrr/reproducible_research_basics_exercises_en.html",
    "title": "Thinking about RRR",
    "section": "",
    "text": "Thinking about reproducibility …\n\n\n\n\n\n\n\nWhy does every scientific paper include a Methods section?\nIs it science, if it isn’t reproducible?\nIs the Method section enough?\nDo you know any public examples of fraudulent science? How was it discovered?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_where_en.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_where_en.html",
    "title": "Comments - where to",
    "section": "",
    "text": "1 Where to add comments in R code and Quarto MarkDown\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nWhat do you think about the way these comments have been placed? Will it work?\n\n# this comment definitely okay\nx &lt;- 2 + 2\n\n# ...but is the following okay?\ntibble(x=1:10, y=2:11) %&gt;% # ..is it okay, mid-pipe?\n  filter(y&gt;5 & # and how about breaking in the middle..\n  x != 9) # ..of a statement like 'filter'?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\nThis is what the output looks like:\n\n\n# A tibble: 5 × 2\n      x     y\n  &lt;int&gt; &lt;int&gt;\n1     5     6\n2     6     7\n3     7     8\n4     8     9\n5    10    11\n\n\n…so the code seems to run without fault - R is actually quite tolerant about placing comments here, there and everywhere, but is it good practice, though?\nThese comments are syntactically okay … but did they make your code simpler for humans to read? No not really. In fact, they made it rather more difficult than it needed to be. So click below to keep it simple:\n\n\n\n\n\n\n\n\n\nKeep it simple!\n\n\n\n\n\n\n# Comment lines before the code\n# can be multiple lines and does\n# not disturb your reading of the\n# code ... best practice!\n\nx &lt;- 2 + 2 # use inline comments sparringly\ny &lt;- x^2 - c(2, 5, 8, 10:14) # ..they are distracting!"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_what_en.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_what_en.html",
    "title": "Comments - what to",
    "section": "",
    "text": "What comments would be relevant here?\n\nQuestionSolution\n\n\nSuggest comments for this code… think ‘what’ and ‘why’\n\n# 1\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# 2\nd &lt;- d %&gt;% filter(id != \"241269-1212\")\n\n# 3\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\nSuggestions for meaningful comments\n\n# ?? comments necessary ??\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# excluded as participant entered an invalid CPR number\nd &lt;- d %&gt;% filter(id != \"2321369-1212\")\n\n# set 's' to F(emale) or M(ale) depending on odd/even id number in CPR\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\n\n\n\nMain points\n\nAlways comment your code\nComments should explain your thinking : ‘why’\nWith good code the ‘how’ is self-evident\n\n..but if your code can not be self-evident: explain in comments"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_what_en.html#commenting-your-code",
    "href": "qmd_rrr/reproducible_research_basics_comments_what_en.html#commenting-your-code",
    "title": "Comments - what to",
    "section": "",
    "text": "Main points\n\nAlways comment your code\nComments should explain your thinking : ‘why’\nWith good code the ‘how’ is self-evident\n\n..but if your code can not be self-evident: explain in comments"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_how_en.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_how_en.html",
    "title": "Comments - how to",
    "section": "",
    "text": "1 How to spefify comments in R code and Quarto MarkDown\nOne of the core ideas of R and Quarto MarkDown is to make the code human readable – a concept known as literal programming.\nR+Quarto code is certainly more readable than classic programming languages, but it is unlikely that you are able to write code that is entirely self-explanatory to a human reader … you will need to add comments for future readers (probably yourself!) to understand the code.\nR code\nIn R code, you can add a comment using the hashtag #, like this:\n# This is a single-line comment in R code\n# ...and there are no multi-line comments: You must add a # for each line\nx &lt;- 2 + 2 # ...but inline comments are okay\nQuarto\n&lt;!-- This is a single-line comment in markdown --&gt;\n&lt;!--\nThis is a multi-line \ncomment in markdown\n--&gt;\n..and inline &lt;!-- comments are okay too --&gt;\n\n\n\n\n\n\nImportant! … the hashtag # has different meaning in R code and in quarto code!\n\n\n\n\n\nAs you have just seen, the hashtag # is used to add comments in R code, but in quarto markdown, the hashtag # is used to add level 1 headings, like this:\n---\ntitle: \"My Quarto Markdown document\"\n---\n\n# This is a level 1 heading\n\n## This is a level 2 heading\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nLook at this, admittedly ugly and pointless Quarto MarkDown document:\n---\ntitle: \"My ugly Quarto Markdown document\"\nauthor: S. O'Neill\n---\n\n# E &lt;- MC^2\n\ndata &lt;- c(2,4,7,12,4)\n\n&lt;!-- c &lt;- sqrt(a^2 + b^2) --&gt;\n\n# # if (3&gt;2) then print(\"two too small\")\n\n```{r my chunk}\n# data &lt;- rsample(1:1000, 100, replace=TRUE)\n&lt;!-- data &lt;- NULL -&gt;&gt;\n\n```\n\n# if (pi &gt; 3) then &lt;!-- print(\"Pi is bigger than 3\") --&gt;\nDiscuss the following points with your colleague, before looking at the solution below:\n\nCan you identify the comments in the document?\nWhat would you expect the output to look like?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\nIf you typed the MarkDown document above into Rstudio, you might have noticed red squiggly lines and a the warning symbol in the left margin of line 16? .\nThis should tell you, there is a problem with the R code and indeed the code will not run to produce output – can you tell what the problem is? …now click below for the full answer.\n\n\n\n\n\n\nExercise #1 ..the full answer.\n\n\n\n\n\nOkay so. Line 16 was not valid R code. The line was actually a single-line markdown comment and it belongs in markdown and not inside an R code chunk.\nIf we comment out that line with a hashtag # as appropriate for valid R code, we get the following output:\n\nIn other words, only lines 10 and 15 were valid comments.\nBonus question: Explain how line 20 worked to produce the output it did."
  },
  {
    "objectID": "qmd_installation/installation_rstudio_en.html",
    "href": "qmd_installation/installation_rstudio_en.html",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "qmd_installation/installation_rstudio_en.html#download-and-install-rstudio",
    "href": "qmd_installation/installation_rstudio_en.html#download-and-install-rstudio",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUOthers\n\n\nInstall RStudio via SDU ITs Software Center.\n\n\nYou will find the RStudio installation program for your operating system on RStudios website\n\n\nThere are four different programs, that you can download for your computer – make sure, yoiu download the one entitled RStudio Desktop Open Source License Free. Click the blue ‘DOWNLOAD’ button.\nIllustration of the download link from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nCHoose the right link now: far left hand side ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nYou will now be presented with several download options – make sure yoiu choose the download appropriate for your operating system (click the blue text link in the columnd ‘Download’).\nIllustration of download links from RStudios website:\n\n\n\nThis is an illustration and not an active download link – follow the link provided above to download.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nChoose the right link in the column now ’Download: Windows, MacOS or your Linux distribution.\n\n\nInstall the programme as per usual procedure for your operating system."
  },
  {
    "objectID": "qmd_installation/installation_r_packages_en.html",
    "href": "qmd_installation/installation_r_packages_en.html",
    "title": "R package installation",
    "section": "",
    "text": "The standard installation of R consists of a set of ‘core’ functions. In addition to those, it is possible to install a large variety of packages with extra functionality. These packages are developed by the company behind RStudio (Posit), by other companies, universities and by R users … perhaps, some day you will write and publish an R package too?\nSome of these packages have a very specific and narrow forus – e.g. Steen Harsteds packages for handling motion capture data called mocapr. Other packages er more generic and you will get to know some of them during the course. For instance:\n\ntidyverse – en meta-pakckage which makes it easier to work with the R syntax – e.g. by using pipes.\nggplot2 – a package for constructing graphs or plots.\nggpubr – a package which extends ggplot2, aiming to make it easier to produce publication ready plots.\n\nThere are just a few technicalities about R packages, that you need to understand:\n\n\nTo install certain R packages on Windows operating systems, you need to install a program called RTools. You can read more about RTools at (this link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] which includes links to the RTools installer and a more detailed tutorial.\nPlease note, that this has previously presented problems for those using SDU issued computers, thus check to see if RTools is available through the SDU IT Software Center.\n\n\n\nR packages are specific to the underlying version of R – when a new version of R is published it may take some time for package developers to update their packages. In other words, depending on the packages you make use of, it is not always a good idea to run the absolute latest release of R, but this is mostly an issue if you used ‘niche’ packages.\n\n\n\nIf you want to make use of an R package, you need to install and load it before it is available.\n\nWhen you install a package, it is downloaded from the internet and stored on your harddrive.\nWhen you load the package, it is read into your computeres RAM memory.\n\nNot until the package is in your computers RAM memory will it be available to your code.\n\n\n\nBy far the majority of packages are available online through the Comprehensive R Archive Network – CRAN.\nIf you want to install a CRAN package you can choose to do so via RStudios graphical user interface or via R in an R console. When installing via the R console, you may get some useful information about the installation process, especially if it fails.\n\n\n\n\n\n\nVideo : Installation of R pakker\n\n\n\n\n\n\n\nVideo\nExample installation of an R package"
  },
  {
    "objectID": "qmd_installation/installation_r_packages_en.html#what-is-an-r-package",
    "href": "qmd_installation/installation_r_packages_en.html#what-is-an-r-package",
    "title": "R package installation",
    "section": "",
    "text": "The standard installation of R consists of a set of ‘core’ functions. In addition to those, it is possible to install a large variety of packages with extra functionality. These packages are developed by the company behind RStudio (Posit), by other companies, universities and by R users … perhaps, some day you will write and publish an R package too?\nSome of these packages have a very specific and narrow forus – e.g. Steen Harsteds packages for handling motion capture data called mocapr. Other packages er more generic and you will get to know some of them during the course. For instance:\n\ntidyverse – en meta-pakckage which makes it easier to work with the R syntax – e.g. by using pipes.\nggplot2 – a package for constructing graphs or plots.\nggpubr – a package which extends ggplot2, aiming to make it easier to produce publication ready plots.\n\nThere are just a few technicalities about R packages, that you need to understand:\n\n\nTo install certain R packages on Windows operating systems, you need to install a program called RTools. You can read more about RTools at (this link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] which includes links to the RTools installer and a more detailed tutorial.\nPlease note, that this has previously presented problems for those using SDU issued computers, thus check to see if RTools is available through the SDU IT Software Center.\n\n\n\nR packages are specific to the underlying version of R – when a new version of R is published it may take some time for package developers to update their packages. In other words, depending on the packages you make use of, it is not always a good idea to run the absolute latest release of R, but this is mostly an issue if you used ‘niche’ packages.\n\n\n\nIf you want to make use of an R package, you need to install and load it before it is available.\n\nWhen you install a package, it is downloaded from the internet and stored on your harddrive.\nWhen you load the package, it is read into your computeres RAM memory.\n\nNot until the package is in your computers RAM memory will it be available to your code.\n\n\n\nBy far the majority of packages are available online through the Comprehensive R Archive Network – CRAN.\nIf you want to install a CRAN package you can choose to do so via RStudios graphical user interface or via R in an R console. When installing via the R console, you may get some useful information about the installation process, especially if it fails.\n\n\n\n\n\n\nVideo : Installation of R pakker\n\n\n\n\n\n\n\nVideo\nExample installation of an R package"
  },
  {
    "objectID": "qmd_installation/installation_r_en.html",
    "href": "qmd_installation/installation_r_en.html",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nIf your computer was issued by the SDU IT department, you can install R via SDUs Software Center.\nIf your computer is a Windows computer, you should install RTools along with R. Ensure, that you download the version of RTools that correspond to you version of R (4.2 or 4.3, etc).\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for Windows.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\nYou should also install RTools along with R - make sure you use the version appropriate for you installation of R – Link to RTools.\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for MacOS.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR is, in all probablity, already part of your preferred Linux distributions software repositories. If you use a Debian based distribution, it should be as simple as::\n\nuser@linux$ sudo apt install r-base\n\nIf you want to generate literature references (pandoc) and/or generate PDF output (texlive), you probably also want the following software installed:\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nIf you are using another distribution (Arch, Red Hat, etc) you simply need to install the same software using their package managers (yum, rpm, etc)\n\n\n\nYou will find a video guide to R installation"
  },
  {
    "objectID": "qmd_installation/installation_r_en.html#installation",
    "href": "qmd_installation/installation_r_en.html#installation",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nIf your computer was issued by the SDU IT department, you can install R via SDUs Software Center.\nIf your computer is a Windows computer, you should install RTools along with R. Ensure, that you download the version of RTools that correspond to you version of R (4.2 or 4.3, etc).\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for Windows.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\nYou should also install RTools along with R - make sure you use the version appropriate for you installation of R – Link to RTools.\n\n\nR can be downloaded from the internet via this link CRAN:\n\nNear the top, you will find the link Download R for MacOS.\nClick the link and download hte file\nOnce the file is downloaded, install as per usual procedure\n\n\n\nR is, in all probablity, already part of your preferred Linux distributions software repositories. If you use a Debian based distribution, it should be as simple as::\n\nuser@linux$ sudo apt install r-base\n\nIf you want to generate literature references (pandoc) and/or generate PDF output (texlive), you probably also want the following software installed:\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nIf you are using another distribution (Arch, Red Hat, etc) you simply need to install the same software using their package managers (yum, rpm, etc)\n\n\n\nYou will find a video guide to R installation"
  },
  {
    "objectID": "qmd_installation/installation_r_en.html#check-that-r-is-installed-and-working",
    "href": "qmd_installation/installation_r_en.html#check-that-r-is-installed-and-working",
    "title": "R installation",
    "section": "2 Check that R is installed and working",
    "text": "2 Check that R is installed and working\nIf the installation process completed as expected, you should now have a working R environment on your computer – before we go any further, it is a good idea to confirm that:\n\nWindowsMacOSLinux\n\n\nTo confirm that R is installed and working, first open a Terminal on your Windows computer:\nOpen the Run window dialogue by holding the Windows key and pressing R, in the window ‘Execute’ in the field ‘Open’ type wt (for Windows Terminal) and click OK.\nIn the Windows Terminal type the following:\n\n...SKAF BILLEDE FRA EN WINDOWS\n\n\n\nTo confirm that R was installed and working on your MacOS, first open a Terminal:\nYou cna find the Terminal in Utilities under Applications or your can hold down the Command key while pressing space to open Spotlight and enter “Terminal” – then double click the appropriate search result.\nIn the MacOS Terminal type:\n\n...SKAF BILLEDE FRA EN MAC\n\n\n\nOpen your favorite command-line interface and try this:\n\nuser@linux: R\n\nThe output should look something like this:\n\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R."
  },
  {
    "objectID": "qmd_installation/installation_quick_preparation_en.html",
    "href": "qmd_installation/installation_quick_preparation_en.html",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "A suitable computer\nA working installation of R\nA working installation of RStudio\nA number of R packages\n\nIn the following pages, we will guide your through each of these steps … did you notice the link at the bottom right-hand side of the screen? Follow that link to the next page in the Installation section."
  },
  {
    "objectID": "qmd_installation/installation_quick_preparation_en.html#what-you-will-need",
    "href": "qmd_installation/installation_quick_preparation_en.html#what-you-will-need",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "A suitable computer\nA working installation of R\nA working installation of RStudio\nA number of R packages\n\nIn the following pages, we will guide your through each of these steps … did you notice the link at the bottom right-hand side of the screen? Follow that link to the next page in the Installation section."
  },
  {
    "objectID": "qmd_installation/installation_prerequisites_en.html",
    "href": "qmd_installation/installation_prerequisites_en.html",
    "title": "Prerequisites",
    "section": "",
    "text": "You’r going to need a computer …\n\nA somewhat modern computer\n\nSufficient storage (+500 Mb) on your harddisk for the installation\nSufficient memory (+1 Gb) - the more, the better\n\nA somehwat modern operating system\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nA working internet connection\n\nIf you are in doubt or your computer was issues by SDU, SLB, or OUH, please see below:\n\n\n\n\n\n\nHow to find the information about your computer\n\n\n\n\n\nIf you already have a working installation of R, you can use this script to list all the relevant information about your computer and its software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\n\n\nIf you’re running Linux, you probably know all this stuff already, down to the clock speed of your RAM and the block size of ext4, but if not:\nRun the following in a terminal, to get information about your operating system (uname), your hardware (lscpu) and disk space (df):\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nRun the following in a terminal, to get information about your operating system (hostnamectl), your hardware (lscpu) and disk space (df):\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nYou definitely do not need any assistance here…\n\n\n\n\n\n\n\n\n\n\n\n\n\nIs you computer an older model?\n\n\n\n\n\nIf your computer is an older model, we recomment that you get someone to help you install R well in time before the R-course.\nOtherwise, you risk spending all your class time wrangling your computer instead of playing with R.\nThe R-ecosystem is constantly developing and new functionality is added all the time, which may be unavailable to you with an older R installation.\nYour computer doesn’t have to be brand spanking new, but if in doubt, contact the teachers before the R course starts.\nAt the time of writting (summer 2022) we reommend you use R version4.x.x and RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nAre you connected to an institutional network drive\n\n\n\n\n\nNote, that if your computer is set up to use an institutional network drive (such as Microsoft OneDrive) as opposed to its local harddisk, it may slow things down somewhat … it will still run, but slower due to the net-traffic overhead.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SDU?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\nOn an SDU issued computer, your best bet is to install software via the SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SLB?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by OUH?\n\n\n\n\n\nSome OUH employees in the past, have been advised to use a server-based R/RStudio solution, in place of a local installation on your computer – that does not work well. We highly recommend a local installation on your own harddrive.\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system."
  },
  {
    "objectID": "qmd_installation/installation_prerequisites_en.html#prerequisites",
    "href": "qmd_installation/installation_prerequisites_en.html#prerequisites",
    "title": "Prerequisites",
    "section": "",
    "text": "You’r going to need a computer …\n\nA somewhat modern computer\n\nSufficient storage (+500 Mb) on your harddisk for the installation\nSufficient memory (+1 Gb) - the more, the better\n\nA somehwat modern operating system\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nA working internet connection\n\nIf you are in doubt or your computer was issues by SDU, SLB, or OUH, please see below:\n\n\n\n\n\n\nHow to find the information about your computer\n\n\n\n\n\nIf you already have a working installation of R, you can use this script to list all the relevant information about your computer and its software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\n\n\nIf you’re running Linux, you probably know all this stuff already, down to the clock speed of your RAM and the block size of ext4, but if not:\nRun the following in a terminal, to get information about your operating system (uname), your hardware (lscpu) and disk space (df):\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nRun the following in a terminal, to get information about your operating system (hostnamectl), your hardware (lscpu) and disk space (df):\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nYou definitely do not need any assistance here…\n\n\n\n\n\n\n\n\n\n\n\n\n\nIs you computer an older model?\n\n\n\n\n\nIf your computer is an older model, we recomment that you get someone to help you install R well in time before the R-course.\nOtherwise, you risk spending all your class time wrangling your computer instead of playing with R.\nThe R-ecosystem is constantly developing and new functionality is added all the time, which may be unavailable to you with an older R installation.\nYour computer doesn’t have to be brand spanking new, but if in doubt, contact the teachers before the R course starts.\nAt the time of writting (summer 2022) we reommend you use R version4.x.x and RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nAre you connected to an institutional network drive\n\n\n\n\n\nNote, that if your computer is set up to use an institutional network drive (such as Microsoft OneDrive) as opposed to its local harddisk, it may slow things down somewhat … it will still run, but slower due to the net-traffic overhead.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SDU?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\nOn an SDU issued computer, your best bet is to install software via the SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by SLB?\n\n\n\n\n\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system.\n\n\n\n\n\n\n\n\n\nWas your computer supplied by OUH?\n\n\n\n\n\nSome OUH employees in the past, have been advised to use a server-based R/RStudio solution, in place of a local installation on your computer – that does not work well. We highly recommend a local installation on your own harddrive.\nBe aware that the local IT department on the Regional Hospitals and the Universiy may impose certain restrictions on your ability to install software on your computer:\n\nAccess to some webpages (e.g. CRAN) may be restricted, as may access to download some files from the internet.\nInstallation of software may require particular administrative rights which you do not have as standard.\n\nIf this is the case, it will impede and slow down your installation of R.\nIt is therefor a good idea, to get all of this sorted out before the start of classes. Again, otherwise you risk spending all your class time wrnagling your computer rather than playing with R.\n…and we (the teacher) will gladly help you with the R-ecosystem, but not necessarily your computer or your operating system."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_en.html",
    "href": "qmd_installation/installation_ecosystem_en.html",
    "title": "The R ecosystem",
    "section": "",
    "text": "The R-ecosystem consists of a lot of separate programs which can be downloaded fromthe internet and dynamically combined to provide extra functionality: This encompasses everything from simple data manipulation to the creation of dynamic websites, graphical animations and much more.\nWe will only be using three elements:\n\nR itself, which is a development environment (coding language) for data-science and statistics\nRStudio which is a graphical interface with which to work in R code\nA smaller sample of R packages with extra functionality\n\nIn the following pages, I will guide you to the installation of these three eleents - one at a time."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_en.html#the-r-ecosystem",
    "href": "qmd_installation/installation_ecosystem_en.html#the-r-ecosystem",
    "title": "The R ecosystem",
    "section": "",
    "text": "The R-ecosystem consists of a lot of separate programs which can be downloaded fromthe internet and dynamically combined to provide extra functionality: This encompasses everything from simple data manipulation to the creation of dynamic websites, graphical animations and much more.\nWe will only be using three elements:\n\nR itself, which is a development environment (coding language) for data-science and statistics\nRStudio which is a graphical interface with which to work in R code\nA smaller sample of R packages with extra functionality\n\nIn the following pages, I will guide you to the installation of these three eleents - one at a time."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_en.html#a-note-about-free-and-open-source-software-foss",
    "href": "qmd_installation/installation_ecosystem_en.html#a-note-about-free-and-open-source-software-foss",
    "title": "The R ecosystem",
    "section": "2 A note about “Free and Open Source Software” (FOSS)",
    "text": "2 A note about “Free and Open Source Software” (FOSS)\nThe R-ecosystem is developed and released as Free and Open Source Software and as such it is freely available to download from the internet at no monetary cost.\nThat is a good thing! Not just because of the price tag (free as in ‘free beer’), but most definitely also on principle (free as in ‘free speech’) … principles, which ought to be of particular importance to researcher … and you are herewith urged to read more below:\n\n\n\n\n\n\nMore about FOSS? Click here!\n\n\n\n\n\nFree and Open Source software is developed according to the same principles as the scietific proces; knowledge (software) is developed and released in an open and transparent manner, which allows everyone to examine, criticize and improve on the results, and to develope it further.\nThis is in contrast to closed and proprietary development processes where knowledge (software) is kept hidden behind closed formats which prevent external review, but allows for a profitable business.\nIf you want to know more, you can easily find a lot information about it on the internet … that is, the internet which runs almost exclusively on open source software.\nIf you have funds set aside within your research budget for software and computer equipment, you might consider donating an amount that you find appropriate to e.g. the R projektet."
  },
  {
    "objectID": "qmd_installation/installation_cloud_en.html",
    "href": "qmd_installation/installation_cloud_en.html",
    "title": "Posit Cloud",
    "section": "",
    "text": "Important\n\n\n\nThe company Posit which develops RStudio (and a great many R packages), also offer an online version of RStudio and the R ecosystem, called Posit Cloud.\n\nPosit Cloud (formerly RStudio Cloud) lets you access Posit’s powerful set of data science tools right in your browser – no installation or complex configuration required.\n\nThey even offer a free (as in free beer) version with some limitations. However, we recommend you install R, RStudio, etc on your own computer unless there are very specific reasons to choose a cloud hosted solution."
  },
  {
    "objectID": "qmd_installation/installation_check_en.html",
    "href": "qmd_installation/installation_check_en.html",
    "title": "Check all is OK",
    "section": "",
    "text": "1 Check your R installation\nAssuming you now have a working installation of R and RStudio, do the following:\n\n\n\n\n\n\nShow me how to\n\n\n\n\n\n\n\n\n\n1. First unfold the call-out box below (‘Installation checker’)\n2. Next copy the code presented in the code listing by clicking the clip-board icon in the right hand corner of the code listing filed, which appears on mouse-over\n3. Close the call-out box again\n\n\n\n\n\n\nInstallation checker\n\n\n\n\n\n\n# This script is intented to test whether the basic\n# requirements for an R-installation is met, prior\n# to taking part in the R4PHD courses.\n\n### Operating system\n\nsys_name &lt;- Sys.info()[['sysname']]\nsys_version &lt;- Sys.info()[['release']]\nsys_machine &lt;- Sys.info()[['machine']]\n\nif (sys_name %in% c(\"Linux\", \"MacOS\", \"Windows\")) {\n  print(paste0(\"[OK] Your operating system is \", sys_name, \" (version \", sys_version,\")\"))\n} else {\n  print(paste0(\"[WARNING] Your operating system is reported as '\", sys_name, \"'. 'Linux', MacOS' or 'Windows' was expected.\"))\n}\n\n### CPU architecture\n\nif (sys_machine %in% c(\"x86_64\", \"amd64\", \"arm64\", \"x86-64\")) {\n  print(\"[OK] You computer has a 64 bit CPU\")\n} else if (sys_machine %in% c(\"i386\", \"i586\", \"i686\")) {\n  print(\"[WARNING] You computer has an older 32 bit CPU\")\n} else {\n  print(paste0(\"[WARNING] You computer is reported as \",sys_machine,\" ... not what was expected.\"))\n}\n\n### R version\n\nr_version_major &lt;- R.Version()[['major']]\nr_version_string &lt;- R.Version()[['version.string']]\n\nif (r_version_major &gt;= \"4\") {\n  print(paste0(\"[OK] R installation is: \", r_version_string))\n} else {\n  print(paste0(\"[WARNING] An R version 4.x.x is recommended. You installation is \", r_version_string))\n}\n\n### RStudio version\n\nrstudio_type &lt;- rstudioapi::versionInfo()$mode\nrstudio_version &lt;- rstudioapi::versionInfo()$version\n\nif (rstudio_type == \"desktop\") {\n  print(\"[OK] The RStudio installation is 'desktop'\")\n} else {\n  print(paste0(\"[WARNING] The RStudio installation is '\", rstudio_type,\"'. Version 'desktop' is recommended!\"))\n}\n\nif (rstudio_version &gt; \"2023\") {\n  print(paste0(\"[OK] The RStudio version is \",rstudio_version))\n} else {\n  print(paste0(\"[WARNING] The RStudio version is \",rstudio_version, \". Version 2023+ was expected.\"))\n}\n\nall_installed_packages &lt;- .packages(all.available = TRUE)\nrecommended_packages &lt;- c(\"tidyverse\", \"here\", \"skimr\", \"gt\", \"gtExtras\", \"gtsummary\", \"patchwork\", \"naniar\", \"reprex\", \"ggstatsplot\", \"easystats\", \"vroom\")\n\nfor (p in recommended_packages) {\n  if (p %in% all_installed_packages) {\n    print(paste0(\"[OK] '\", p, \"' (package) is installed.\"))\n  } else {\n    print(paste0(\"[WARNING] '\", p, \"' (package) is NOT installed.\"))\n  }\n}\n\n\n\n\n4. Open RStudio\n5. Create a new, empty R Script by keyboard: CTRL-SHIFT-n or menu: File / New File / R Script\n6. Paste the code into the empty document\n7. Execute all the code by keyboard: CTRL-SHIFT-s, or menu: Code / Source or mouse: click ‘Source’ in the top-right hand corner of the text editor panel.\n8. Examine the output in the Console"
  },
  {
    "objectID": "qmd_installation/installation_background_en.html",
    "href": "qmd_installation/installation_background_en.html",
    "title": "R versus RStudio",
    "section": "",
    "text": "R itself is a coding language and development environment which is particularly well suited for statistical analyses and data science.\nR code might for example look like this:\n\nmy_new_data &lt;- read.csv(\"data_folder/my_data_file.csv\")\nmy_new_data &lt;- my_new_data %&gt;%\n  select(-cpr_nummer)\nnumber_of_observations &lt;- my_new_data %&gt;% nrow()\nmy_fancy_plot &lt;- my_new_data %&gt;% ggplot() + geom_histogram()\n\nIn other words, R is the code you use to read data, clean and wrangle data, define analyses, generate plots and tables, etc.\n\n\n\nRStudio, on the other hand, is ‘just’ a graphical user interface which makes it easier to work in R. It is, in fact, perfectly possible to do without RStudio, but there are good reasons why most R users use it.\nRStudio might for instance look like this:\n\n\n\nScreenshot of RStudio as it appeared when I was creating this website … you see, it is possible to that in the R ecosystem as well :-)\n\n\n\n\n\nThe R ecosystem, is a veritable plethora of extra functionality that can be added on to of R itself. This is first and foremost in the form of R packages, of which there are many thousands, but it also includes online guides, youTube videos, chat-forums, etc. No matter what problems you encounter on your R journey, you can be almost 100% certain that some has found a solution already … it is already prepared for you, out there in the R ecosystem.\nBut before we get started with all of that, we have to install R."
  },
  {
    "objectID": "qmd_installation/installation_background_en.html#r-here-there-and-everywhere",
    "href": "qmd_installation/installation_background_en.html#r-here-there-and-everywhere",
    "title": "R versus RStudio",
    "section": "",
    "text": "R itself is a coding language and development environment which is particularly well suited for statistical analyses and data science.\nR code might for example look like this:\n\nmy_new_data &lt;- read.csv(\"data_folder/my_data_file.csv\")\nmy_new_data &lt;- my_new_data %&gt;%\n  select(-cpr_nummer)\nnumber_of_observations &lt;- my_new_data %&gt;% nrow()\nmy_fancy_plot &lt;- my_new_data %&gt;% ggplot() + geom_histogram()\n\nIn other words, R is the code you use to read data, clean and wrangle data, define analyses, generate plots and tables, etc.\n\n\n\nRStudio, on the other hand, is ‘just’ a graphical user interface which makes it easier to work in R. It is, in fact, perfectly possible to do without RStudio, but there are good reasons why most R users use it.\nRStudio might for instance look like this:\n\n\n\nScreenshot of RStudio as it appeared when I was creating this website … you see, it is possible to that in the R ecosystem as well :-)\n\n\n\n\n\nThe R ecosystem, is a veritable plethora of extra functionality that can be added on to of R itself. This is first and foremost in the form of R packages, of which there are many thousands, but it also includes online guides, youTube videos, chat-forums, etc. No matter what problems you encounter on your R journey, you can be almost 100% certain that some has found a solution already … it is already prepared for you, out there in the R ecosystem.\nBut before we get started with all of that, we have to install R."
  },
  {
    "objectID": "qmd_gui/rstudio_sessions_console_and_scripts_en.html",
    "href": "qmd_gui/rstudio_sessions_console_and_scripts_en.html",
    "title": "R Sessions",
    "section": "",
    "text": "You have already seen the pane-layout of RStudio:\n\nTo work efficiently with these panes, there are four simple points you need to understand:\n\nYou can run multiple sessions of R at the same time, which are entirely insulated from each other.\nEach R session has an associated workspace allocated in computer memory, which contains variables, values, functions, etc specific to that session.\nRStudio will help you execute code from a script file in the current R session (see the tab ‘console’ for output)\nWhen you ask RStudio to render a quarto document it does not execute the R code in your current session, but a new and separate session (see the tab ‘Background jobs’ for output)\n\n\n\n\n\n\n\nPoint 1 : Multiple concurrent R sessions\n\n\n\n\n\n\nThe video clip above illustrates two R sessions running simultaneously on the same computer. For simplicity, they are shown in a simple console instead of RStudio.\n\n\n\n\n\n\n\n\n\nPoint 2 : The session workspace\n\n\n\n\n\nNotice, in the video above how the variable ‘a’ is unknown in the second R session, because it was only defined in the first R session.\nIn RStudio, the content of the workspace is presented in the Environment tab (top right hand pane – ‘Short term memory’). In the console, the command ls() can be used to get a list of variables in the current session workspace.\n\n\n\n\n\n\n\n\n\n\nPoint 3 : From script to current session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoint 4 : From script to rendered output"
  },
  {
    "objectID": "qmd_gui/rstudio_sessions_console_and_scripts_en.html#understanding-r-sessions-the-rstudio-console-and-the-script-editor",
    "href": "qmd_gui/rstudio_sessions_console_and_scripts_en.html#understanding-r-sessions-the-rstudio-console-and-the-script-editor",
    "title": "R Sessions",
    "section": "",
    "text": "You have already seen the pane-layout of RStudio:\n\nTo work efficiently with these panes, there are four simple points you need to understand:\n\nYou can run multiple sessions of R at the same time, which are entirely insulated from each other.\nEach R session has an associated workspace allocated in computer memory, which contains variables, values, functions, etc specific to that session.\nRStudio will help you execute code from a script file in the current R session (see the tab ‘console’ for output)\nWhen you ask RStudio to render a quarto document it does not execute the R code in your current session, but a new and separate session (see the tab ‘Background jobs’ for output)\n\n\n\n\n\n\n\nPoint 1 : Multiple concurrent R sessions\n\n\n\n\n\n\nThe video clip above illustrates two R sessions running simultaneously on the same computer. For simplicity, they are shown in a simple console instead of RStudio.\n\n\n\n\n\n\n\n\n\nPoint 2 : The session workspace\n\n\n\n\n\nNotice, in the video above how the variable ‘a’ is unknown in the second R session, because it was only defined in the first R session.\nIn RStudio, the content of the workspace is presented in the Environment tab (top right hand pane – ‘Short term memory’). In the console, the command ls() can be used to get a list of variables in the current session workspace.\n\n\n\n\n\n\n\n\n\n\nPoint 3 : From script to current session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoint 4 : From script to rendered output"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Som nævnt andetsted, lader konsollen dig kommunikere direkte med R fortokeren og du kommer til at bruge en del tid i konsollen med at teste din kode.\nHerunder følger et antal praktiske tips om konsollen:\n\n\n\n\n\nSkriv mean i konsollen og vent et kort øjeblik – RStudio vil vise dig en liste over funktioner mm som er i det aktuelle environment som starter med mean. Prøv at rulle gennem listen.\n\n\n\n\n\n\n\n\n\nSkriv meaning_of_life &lt;- 52 (ENTER) for at lave en ny variabel – prøv nu tip #1 igen og bemærk, at den nye variable er blevet føjet til listen.\n\n\n\n\n\n\nMen meningen med livet er jo ikke 5, vel?1. Så det skal fikses.\n\n\n\nI konsollen, i en ny tom linje, trykker du blot på pil-op tasten på tastaturet og din foregående R kommando kommer tilbage, ret den til 42 og tryk så ENTER. Du kan bruge op/ned tasterne til at rulle op/ned i din konsol-historik, for den aktuelle sæssion.\n\n\n\n\n\n\n\n\n\nØverst i højre hjørne af konsollen: klik på ikonet der ligner en kost. Konsol vinduet bliver fejet rent, men konsolens historik bevares.\n\n\n\n\n\n\n\n\n\nÅben et nyt tomt R script i tekst editoren og skriv print(\"copy, paste, execute\") (CTRL+ENTER) – denne kommando skulle blive indsat i konsollen og eksekveret med det samme.\n\n\n\n\n\n\n\n\n\nI tekst editoren, tilføj en linje under den første linje: print(\"with CTRL-ENTER\") – denne gang prøv at fremhæve begge linjer (mus klik+træk) før CTRL+ENTER.\n\n\nHint Tjek ‘Run’ fold-ud menuen i øverste, højre hjørne af tekst editorn, for at køre alle kommandoer eller specifikke blokke.\n\nDer er angiveligt ikke nogen tastaturgenvej for at kopiere den anden vej fra konsollen til tekst editoren."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Skriv mean i konsollen og vent et kort øjeblik – RStudio vil vise dig en liste over funktioner mm som er i det aktuelle environment som starter med mean. Prøv at rulle gennem listen."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst-som-tilpasser-sig",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#prædiktiv-tekst-som-tilpasser-sig",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Skriv meaning_of_life &lt;- 52 (ENTER) for at lave en ny variabel – prøv nu tip #1 igen og bemærk, at den nye variable er blevet føjet til listen."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#genbrug-tidligere-kommandoer",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#genbrug-tidligere-kommandoer",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Men meningen med livet er jo ikke 5, vel?1. Så det skal fikses.\n\n\n\nI konsollen, i en ny tom linje, trykker du blot på pil-op tasten på tastaturet og din foregående R kommando kommer tilbage, ret den til 42 og tryk så ENTER. Du kan bruge op/ned tasterne til at rulle op/ned i din konsol-historik, for den aktuelle sæssion."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#fej-rent",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#fej-rent",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Øverst i højre hjørne af konsollen: klik på ikonet der ligner en kost. Konsol vinduet bliver fejet rent, men konsolens historik bevares."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#kør-en-kommando-fra-tekst-editoren",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#kør-en-kommando-fra-tekst-editoren",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Åben et nyt tomt R script i tekst editoren og skriv print(\"copy, paste, execute\") (CTRL+ENTER) – denne kommando skulle blive indsat i konsollen og eksekveret med det samme."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#kør-flere-kommandoer-fra-tekst-editoren",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#kør-flere-kommandoer-fra-tekst-editoren",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "I tekst editoren, tilføj en linje under den første linje: print(\"with CTRL-ENTER\") – denne gang prøv at fremhæve begge linjer (mus klik+træk) før CTRL+ENTER.\n\n\nHint Tjek ‘Run’ fold-ud menuen i øverste, højre hjørne af tekst editorn, for at køre alle kommandoer eller specifikke blokke.\n\nDer er angiveligt ikke nogen tastaturgenvej for at kopiere den anden vej fra konsollen til tekst editoren."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_da.html#footnotes",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_da.html#footnotes",
    "title": "RStudios GUI – the console",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI følge den fiktive supercomputer Deep Thought i Douglas Adams’ sci-fi univers, er svaret på det ultimative spørgsmål om livet, universet og alting: 42. Men det vidste du allerede, ikk’ :-)↩︎"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_2_da.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_2_da.html",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Vigtigt koncepot du skal forstå!\n\n\n\n\n\nDu kan forestille dig din arbejdsgang i RStudio som bestående af to arbejdsstationer: enten taler du direkte med R eller også skriver du til R:\n\n\nDu ‘taler’ med R i konsollen (orange), men hele samtalen bliver slettet når du lukker RStudio!\nHvis du instruerer R om at generere noget data, bliver det lagret i ‘Short term memory’ (altså i Environment) og du kan ‘tale’ med R om dataene, men de forsvinder også når du lukker RStudio.\nHvis du giver R instrukser som ikke er valid R kode, vil R beklage sig (fejl meddelelse).\nBemærk Hvis du beder R om at skrive noget til en fil, så bliver filen ikke slettet, men det gør kommandoen derom.\n\n\n\nI tekst editoren (blå) kan du skrive hvad som helst og gemme det som en tekst fil.\nDet bliver ikke læst af R før du specifikt beder R om det.\nHvis du skriver noget som ikke er valid R kode, vil du ikke få en fejl (omend RStudio vil give dig visuelle tip om at der er noget galt) … faktisk, kan du skrive en indkøbsliste i tekst editoren hvis du vil, og R vil ikke klage sig.\n\n\n\n\nEn typisk arbejdsgang består af at ping-pong’e frem og tilbage mellem i) test af kode i real-tid (konsol or ‘short term memory’) or ii) at gemme fungerende kode i tekst filer.\n\n\n\n\n\n\nEksempel\n\n\n\n\n\nLad os sige, du vil bruger funktionerne mean og rnorm til at beregne et gennemsnit af en stikpårøve på 100 fra en normal fordeling. Denne kode løser opgaven:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…før du skriver koden ind i dit manuskript bør du afprøve den i konsollen:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.088405\n\n\nMåske opdager du så, at der er flere decimaler end du ønsker og du kan tilpasse din kode:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.95\n\n\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nÅben RStudio og lav et nyt, tomt R scriptvia menu: File / New File / R Script eller keyboard: CTRL-SHIFT-n\n\nKopier og indsæt denne kode rnorm(n=100, mean=1, sd=2) %&gt;% mean() i konsollen og eksekvér koden ved at trykke ENTER – hvad skete der i tekst editoren?\nKopier og indsæt denne kode rnorm(n=100, mean=120, sd=25) %&gt;% mean() i tekst editor og tryk ENTER – hvad skete der i konsollen?\nKopier og indsæt denne kode rnorm(n=100, mean=20, sd=250) %&gt;% mean() i tekst editor og tryk CTRL+ENTER – hvad skete der i konsollen?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 Løsning\n\n\n\n\n\n\nDer sker ingenting i tekst editoren\nDer sker ingenting i konsollen\nKoden bliver kopieret og indsat i konosllen og eksekveret\n\nBonus spørgsmål Tilpas koden i tekst editoren sådan at outputtet fra R kommandoen bliver tilskrevet en ny variabel x. Hvad sker der i Environment fanebladet af Environment panelet, i) da du tilføjede koden til tekst filen hhv ii) da når du copy/paste/execute (CTRL+ENTER) koden ind i konsollen?\n\n\n\n\n\n\n\n\n\nØvelse #2\n\n\n\n\n\nNår du lukker et R projekt, vil RStudio spørge om du vil gemme et ‘Workspace image’.\nEt ‘workspace image’ gemmer information om den aktuelle konsol (historik) og det som er lagret i short term memory (Environment) og genskaber det, næste gang du åbner projektet.\n\nHvad er fordelene ved det?\nHvilke risici er det ved det?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 Løsning\n\n\n\n\n\n\nAt genskabe et workspace image fra sidste gang du arbejde med projektet , lader dig starte hvor du slap, hvilket kan være en hjælp i nogle situationer. F.eks hvis du beror på et meget stort data sæt der skal hentes ned fra internettet, så kan man spare lidt tid.\nEn hyppig fejl som frustrerer nybegyndere: Når man ping-pong’er frem og tilbage mellem tekst fil og konsol, kan man komme til at løse et problem som gemmer de rigtige data til hukommelsen, men man kan glemme at få koden ind i tekst filen det rigtige sted. Hvis man ikke bruger workspace image, vil den fejl blive synlig næste gang du starter projektet op med et tomt environment."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_2_da.html#work-flow-i-rstudios-gui",
    "href": "qmd_gui/rstudio_introduction_to_gui_2_da.html#work-flow-i-rstudios-gui",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Vigtigt koncepot du skal forstå!\n\n\n\n\n\nDu kan forestille dig din arbejdsgang i RStudio som bestående af to arbejdsstationer: enten taler du direkte med R eller også skriver du til R:\n\n\nDu ‘taler’ med R i konsollen (orange), men hele samtalen bliver slettet når du lukker RStudio!\nHvis du instruerer R om at generere noget data, bliver det lagret i ‘Short term memory’ (altså i Environment) og du kan ‘tale’ med R om dataene, men de forsvinder også når du lukker RStudio.\nHvis du giver R instrukser som ikke er valid R kode, vil R beklage sig (fejl meddelelse).\nBemærk Hvis du beder R om at skrive noget til en fil, så bliver filen ikke slettet, men det gør kommandoen derom.\n\n\n\nI tekst editoren (blå) kan du skrive hvad som helst og gemme det som en tekst fil.\nDet bliver ikke læst af R før du specifikt beder R om det.\nHvis du skriver noget som ikke er valid R kode, vil du ikke få en fejl (omend RStudio vil give dig visuelle tip om at der er noget galt) … faktisk, kan du skrive en indkøbsliste i tekst editoren hvis du vil, og R vil ikke klage sig.\n\n\n\n\nEn typisk arbejdsgang består af at ping-pong’e frem og tilbage mellem i) test af kode i real-tid (konsol or ‘short term memory’) or ii) at gemme fungerende kode i tekst filer.\n\n\n\n\n\n\nEksempel\n\n\n\n\n\nLad os sige, du vil bruger funktionerne mean og rnorm til at beregne et gennemsnit af en stikpårøve på 100 fra en normal fordeling. Denne kode løser opgaven:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…før du skriver koden ind i dit manuskript bør du afprøve den i konsollen:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.088405\n\n\nMåske opdager du så, at der er flere decimaler end du ønsker og du kan tilpasse din kode:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.95\n\n\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nÅben RStudio og lav et nyt, tomt R scriptvia menu: File / New File / R Script eller keyboard: CTRL-SHIFT-n\n\nKopier og indsæt denne kode rnorm(n=100, mean=1, sd=2) %&gt;% mean() i konsollen og eksekvér koden ved at trykke ENTER – hvad skete der i tekst editoren?\nKopier og indsæt denne kode rnorm(n=100, mean=120, sd=25) %&gt;% mean() i tekst editor og tryk ENTER – hvad skete der i konsollen?\nKopier og indsæt denne kode rnorm(n=100, mean=20, sd=250) %&gt;% mean() i tekst editor og tryk CTRL+ENTER – hvad skete der i konsollen?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 Løsning\n\n\n\n\n\n\nDer sker ingenting i tekst editoren\nDer sker ingenting i konsollen\nKoden bliver kopieret og indsat i konosllen og eksekveret\n\nBonus spørgsmål Tilpas koden i tekst editoren sådan at outputtet fra R kommandoen bliver tilskrevet en ny variabel x. Hvad sker der i Environment fanebladet af Environment panelet, i) da du tilføjede koden til tekst filen hhv ii) da når du copy/paste/execute (CTRL+ENTER) koden ind i konsollen?\n\n\n\n\n\n\n\n\n\nØvelse #2\n\n\n\n\n\nNår du lukker et R projekt, vil RStudio spørge om du vil gemme et ‘Workspace image’.\nEt ‘workspace image’ gemmer information om den aktuelle konsol (historik) og det som er lagret i short term memory (Environment) og genskaber det, næste gang du åbner projektet.\n\nHvad er fordelene ved det?\nHvilke risici er det ved det?\n\n\n\n\n\n\n\n\n\n\nØvelse #2 Løsning\n\n\n\n\n\n\nAt genskabe et workspace image fra sidste gang du arbejde med projektet , lader dig starte hvor du slap, hvilket kan være en hjælp i nogle situationer. F.eks hvis du beror på et meget stort data sæt der skal hentes ned fra internettet, så kan man spare lidt tid.\nEn hyppig fejl som frustrerer nybegyndere: Når man ping-pong’er frem og tilbage mellem tekst fil og konsol, kan man komme til at løse et problem som gemmer de rigtige data til hukommelsen, men man kan glemme at få koden ind i tekst filen det rigtige sted. Hvis man ikke bruger workspace image, vil den fejl blive synlig næste gang du starter projektet op med et tomt environment."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_da.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_da.html",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_da.html#et-første-overblik-over-rstudios-gui",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "Et første overblik over RStudios GUI\n\n\nI udgangspunktet er RStudio inddelt i 4 paneler (de forskellige farver herover er tilføjet for illustrere). Dette layout kan tilpasses som du måtte ønske det, men indtil videre, så lad den være som i udgangspunktet og i illustrationen herover.\n\n\n\n\n\n\nHjælp! Sådan ser mit layout ikke ud …\n\n\n\n\n\nHvis text editor feltet mangler, er det sandsynligvis bare fordi du ikke har noget dokument åben til at redigere i – prøv at klikke File / New file / R script (CTRL+SHIFT+n).\nHvis du ved et uheld har fået skjult et eller flere paneler, så prøv at klikke View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_da.html#ændre-størrelse-på-panelerne",
    "title": "RStudios GUI #1",
    "section": "2 Ændre størrelse på panelerne",
    "text": "2 Ændre størrelse på panelerne\nKlik og træk..\n\n\n\nÆndring af panel størrelserne med klik-og-træk\n\n\nBemærk også minimize og maximize ikonerne øverst til højre i hvert panel: \n\n\n\nMinimizing and maximizing panes in RStudio"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_da.html#rstudio-layout",
    "title": "RStudios GUI #1",
    "section": "3 RStudio layout",
    "text": "3 RStudio layout\nØnsker du at ændre layout (forskellige farver, skrifttyper, tekst størrelse, osv) i RSudio? Klik: Tools / Global options / Appearance … men indtil videre, lad de andre indstillinger være i fred, f.eks General, Code, etc.\n\n\n\nChanging the RStudio appearance"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_da.html#flere-faneblade-i-hvert-panel",
    "title": "RStudios GUI #1",
    "section": "4 Flere faneblade i hvert panel",
    "text": "4 Flere faneblade i hvert panel\nHvert panel i RStudio har som regel adskillige fanebalde. For eksempel, i billedet herunder, indeholder ‘Output’ panel fanebladene Files, Plots, Packages, Help, Viewer og Presentation.\n\n\n\nMultiple tabs in each RStudio pane\n\n\nBemærk, at de faneblade som ses vil variere afhængigt hvad type dokument du arbejder med. Visse ekstra funktioner, som eksempelvis Git versionerings kontrol, vil også ændre på hvilke faneblade der præsenteres.\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nPrøv at gennemføre følgende:\n\nLav tre faneblade i ‘Text editor’ panelet.\nBrug hjælpefunktionen til at afgøre hvordan du kan bruge R til at finde ud af hvilken version af R du har installeret på din computer.\nFind din R konsol. Tast: a &lt;- 5 (tryk enter) – hvad skete der i dit Environment?\nSkift dit RSudio layout til et dark farve skema.\n\n\n\n\n\n\n\n\n\n\nSvar på øvelse #1\n\n\n\n\n\n\nLav blot tre nye tomme dokumenter at redigere: File / New file / R script (CTRL+SHIFT+n).\nBemærk, at der er to søgefelter på ‘help’ fanebladet i ‘Output’ panelet – brug den til højre til at lære mere om (base)funktionen R.Version.\nI Environment fanebladet i Environment panelet, skulle du se en liste af ‘Values’ hvor ‘a’ er ‘5’.\nI Tools / Global options / Appearance, vælg f.eks ‘Cobalt’ i Editor theme dialogen."
  },
  {
    "objectID": "qmd_base_r/base_r_missing_data_da.html",
    "href": "qmd_base_r/base_r_missing_data_da.html",
    "title": "Base R - missing data",
    "section": "",
    "text": "1 Om håndtering af manglende observationer i data\nKig engang på denne simple kode\n\n# Vores syv deltagere angav deres alder i onlinespørgeskema\nalder &lt;- c(23,25,23,21,25,NA,20)\n\n# Hvad er deres gennemsnitsalder?\nmean(alder)\n\n[1] NA\n\n\nBemærk NA værdien, som indikerer at en observation ikke var tilgængeligt (Not Available), altså en manglende observation. Dette er helt grundlæggende ikke det samme som NULL eller 0. Så hvordan skal vi beregne et gennemsnit? Ja, når alderen på en af deltagerne er utilgængelig, så er gennemsnittet det også og R svarer derfor: NA.\nUmiddelbart tænker man måske, at man bare skal ignorere NA værdien og beregne gennemsnit af de kendte værdier. I mange tilfælde, vil det være helt på sin plads og en god løsning (eller måske ikke). Men det springende punkt er: det skal du afgøre - R afgør det ikke for dig. Det er ikke en fejl - det er en (sikkerheds) feature.\nKig på denne tilpassede kode\n\n# Vores syv deltagere angav deres alder i onlinespørgeskema\nalder &lt;- c(23,25,23,21,25,NA,20)\n\n# Hvad er deres gennemsnitsalder?\nmean(alder, na.rm=TRUE)\n\n[1] 22.83333\n\n\nHvad gætter du på na.rm=TRUE står for?"
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html",
    "href": "qmd_base_r/base_r_data_types_da.html",
    "title": "Base R - data types",
    "section": "",
    "text": "R er bygget med et antal basis data typer:\n\nlogical : TRUE eller FALSE (sandt eller falsk)\ninteger : heltal\nnumeric : decimaltal\ncomplex : komplekse tal\ncharacter : alfa-numeriske tegn og andre special tegn\nraw : rå byte data\n\nDet er vigtigt at bruge variabler af den rigtige type i din data management og analyse.\nBemærk At ovenstående er basis datatyper og R tilbyder mange mere komplicerede, sammensatte datatyper.\nDet er også vigtigt at vide hvilken type data du sidder og arbejder med, ellers kan du få forvirrende resultater. En hyppigt eksempel på en frustrerende fejl er at man læser data ind fra en ekstern kilde (f.eks en .csv fil) og antager at tekst stringe er blevet læst som sådan, men faktisk bliver de læst som en ‘factor’. Hvis du er i tvivl om dine datas typer, kan du få hjælp med class() or str() functionerne.\nKig engang på følgende kode og plot:\n\nggplot(mpg, aes(x=year, y=hwy)) + geom_point()\n\n\n\n\nKig nu på den tilrettede kode herunder og hvordan det har ændret plottet:\n\nggplot(mpg, aes(x=factor(year), y=hwy)) + geom_point()\n\n\n\n\nI det første tilfælde, var variable ‘year’ en kontinuert numerisk variabel. Det var ikke umiddelbart åbenlyst, men du kunne have fundet ud af det str(mpg) eller class(mpg$year).\nI andet tilfælde, er kolonen year fra mpg datarammen blevet konverteret til en katagorisk variabel med funktionen factor().\nSom du kan se gjorde, det en betydelig forskel for plottet.\n\n\nKan antage værdierne TRUE eller FALSE.\nBemærk Den logiske værdi kan også anskues som en heltals værdi hvor 1 og 0, svarer til TRUE og FALSE.\nKig på denne kode og dens output.\n\na &lt;- TRUE\na + 3\n\n[1] 4\n\n\n\n\n\nInteger er naturlig heltal: -1, 0, 1, 2, etc.\nR håndterer de fleste konversioner fra en data type til en anden for dig. For eksempel:\n\nas.integer(3)/as.integer(2)\n\n[1] 1.5\n\n\nAt dividere heltallet 3 med heltallet 2 giver et decimal tal (1.5) – R klarer konverteringen for dig.\n\n\n\nNumeriske værdier er decimal tal som f.eks 2.33. I R, gemmes sådanne tal i computerens hukommelse som 64-bit værdier. Det betyder, at der er en øvre grænse for hvor store tal du kan arbejde med: 9,007,199,254,740,992.\nFor det mest er det uden betydning, men kig engang på denne kode:\n\nx &lt;- 9007199254740992 + 1\ny &lt;- 1/3\n\nformat(x, scientific=FALSE)\n\n[1] \"9007199254740992\"\n\ny\n\n[1] 0.3333333\n\n\n\n\n\n\n\n\nExercise # 1\n\n\n\n\n\n\nHvorfor fik x ikke værdien 9007199254740993 (9007199254740992 + 1)?\nEr 1/3 faktisk lig med 0.3333333?\n\n\n\n\n\n\n\n\n\n\nExercise # 1 Solution\n\n\n\n\n\n\n9007199254740992 er det største tal R kan arbejde med som en enkelt værdi på en 64-bit computer. Lægger man 1 til, overskrider man den grænse.\nNej, 1/3 er 0.33333333333333333333..[ud i uendeligheden] – R kan ikke gemme uendeligt store tal\n\n\n\n\n\n\n\nKomplekse tal er implementeret med complex() funktionen. Ikke så relevant for de meste statistiske analyse.\n\n\n\nBruges til at gemme alfa-nummeriske tegn, f.eks alfabetets bogstaver, special tegn som ‘?’, ’*’, etc.\n\n\n\nDenne data type bruges til at gemme rå byte-data, altså binære tal i 8-but længde. Ikke så relevant for de meste statistiske analyse."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#logical-eller-boolean",
    "href": "qmd_base_r/base_r_data_types_da.html#logical-eller-boolean",
    "title": "Base R - data types",
    "section": "",
    "text": "Kan antage værdierne TRUE eller FALSE.\nBemærk Den logiske værdi kan også anskues som en heltals værdi hvor 1 og 0, svarer til TRUE og FALSE.\nKig på denne kode og dens output.\n\na &lt;- TRUE\na + 3\n\n[1] 4"
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#integer",
    "href": "qmd_base_r/base_r_data_types_da.html#integer",
    "title": "Base R - data types",
    "section": "",
    "text": "Integer er naturlig heltal: -1, 0, 1, 2, etc.\nR håndterer de fleste konversioner fra en data type til en anden for dig. For eksempel:\n\nas.integer(3)/as.integer(2)\n\n[1] 1.5\n\n\nAt dividere heltallet 3 med heltallet 2 giver et decimal tal (1.5) – R klarer konverteringen for dig."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#numeric",
    "href": "qmd_base_r/base_r_data_types_da.html#numeric",
    "title": "Base R - data types",
    "section": "",
    "text": "Numeriske værdier er decimal tal som f.eks 2.33. I R, gemmes sådanne tal i computerens hukommelse som 64-bit værdier. Det betyder, at der er en øvre grænse for hvor store tal du kan arbejde med: 9,007,199,254,740,992.\nFor det mest er det uden betydning, men kig engang på denne kode:\n\nx &lt;- 9007199254740992 + 1\ny &lt;- 1/3\n\nformat(x, scientific=FALSE)\n\n[1] \"9007199254740992\"\n\ny\n\n[1] 0.3333333\n\n\n\n\n\n\n\n\nExercise # 1\n\n\n\n\n\n\nHvorfor fik x ikke værdien 9007199254740993 (9007199254740992 + 1)?\nEr 1/3 faktisk lig med 0.3333333?\n\n\n\n\n\n\n\n\n\n\nExercise # 1 Solution\n\n\n\n\n\n\n9007199254740992 er det største tal R kan arbejde med som en enkelt værdi på en 64-bit computer. Lægger man 1 til, overskrider man den grænse.\nNej, 1/3 er 0.33333333333333333333..[ud i uendeligheden] – R kan ikke gemme uendeligt store tal"
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#complex",
    "href": "qmd_base_r/base_r_data_types_da.html#complex",
    "title": "Base R - data types",
    "section": "",
    "text": "Komplekse tal er implementeret med complex() funktionen. Ikke så relevant for de meste statistiske analyse."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#character",
    "href": "qmd_base_r/base_r_data_types_da.html#character",
    "title": "Base R - data types",
    "section": "",
    "text": "Bruges til at gemme alfa-nummeriske tegn, f.eks alfabetets bogstaver, special tegn som ‘?’, ’*’, etc."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_da.html#raw",
    "href": "qmd_base_r/base_r_data_types_da.html#raw",
    "title": "Base R - data types",
    "section": "",
    "text": "Denne data type bruges til at gemme rå byte-data, altså binære tal i 8-but længde. Ikke så relevant for de meste statistiske analyse."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R4phd",
    "section": "",
    "text": "Klik for at skifte til dansk."
  },
  {
    "objectID": "index.html#welcome-to-r4phd",
    "href": "index.html#welcome-to-r4phd",
    "title": "R4phd",
    "section": "1 Welcome to R4phd",
    "text": "1 Welcome to R4phd\nThe idea behind this webpage was to form the basis for regular classroom teaching of R, RStudio and the R ecosystem. Primarily with Ph.D. courses based at the University of Southern Denmark in mind.\nYou will find a plethora of guides, examples, videos and FAQs on the internet, but it can be difficult to naviagte and it is not structured for classroom teaching.\n\nYou can start by looking at the table of content in the collapsable menu (top-left hand corner).\n\n\n\n\n\n\nHow to use this website\n\n\n\n\n\n\n2 Operating system – Windows, MacOS or Linux?\nThe teaching material on this site was prepared mainly on a Linux computer.\nIf you use Microsoft Windows or Apple MacOS you should expect things to look sightly different here, from how they appear on your own screen.\nIt should not give rise to any important issues however, as R and RStudio work very well and almost identically on all three operating systems. None-the-less, where I am aware of any real differences between the operating systems, I will illustrate it using three tabs in the following way (click the relevant tab):\n\nWindowsMacOSLinux\n\n\n…Windows specific content\n\n\n…MacOS specific content\n\n\n…Linux specific content\n\n\n\n\n\n3 Exercises\nOn occasion you will find small exercises in collapsible boxes, like this:\n(Click the collapsible box below):\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nIf there are important differences between Windows, MacOS and Linux, you can find the information relevant to you:\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n… and similarly, the solution will be found in a collapsible box:\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n\n\n4 Navigation\nThere are several ways to navigate between pages:\n\nIn the left-hand side, you will find a table of content of pages by category\nAt the end of every page in a section, you will find links to the preceding and following pages.\nA search function is available in the top-right hand corner\n\nNote the links at the bottom of pages within a section:\n\n\n5 Comments and questions\nIt is possible to leave comments, suggestions and questions at the end of each page – please help improve the R4PhD content by doing so:\n\nYou will need a github account, which can be created free of charge and which will probably come in handy at later time.\nAlso note, that as pages on the R4PhD site are paired in English and Danish, comments will appear on both pages – stick to English if possible.\n\nWe also recommend using Stack Overflow as great starting point for getting support when you run into trouble. We have created a Stack Overflow for Teams group specifically for this class but, by all means, use the general Stack Overflow community – you will find help is forthcoming very quickly, if you can word your questions succinctly.\nIt is possible to create a separate account in Stack Overflow, or you can just log in using the GitHub account you just created (?) or alternatively a Google or Facebook account."
  },
  {
    "objectID": "index.html#operating-system-windows-macos-or-linux",
    "href": "index.html#operating-system-windows-macos-or-linux",
    "title": "R4phd",
    "section": "2 Operating system – Windows, MacOS or Linux?",
    "text": "2 Operating system – Windows, MacOS or Linux?\nThe teaching material on this site was prepared mainly on a Linux computer.\nIf you use Microsoft Windows or Apple MacOS you should expect things to look sightly different here, from how they appear on your own screen.\nIt should not give rise to any important issues however, as R and RStudio work very well and almost identically on all three operating systems. None-the-less, where I am aware of any real differences between the operating systems, I will illustrate it using three tabs in the following way (click the relevant tab):\n\nWindowsMacOSLinux\n\n\n…Windows specific content\n\n\n…MacOS specific content\n\n\n…Linux specific content"
  },
  {
    "objectID": "index.html#exercises",
    "href": "index.html#exercises",
    "title": "R4phd",
    "section": "3 Exercises",
    "text": "3 Exercises\nOn occasion you will find small exercises in collapsible boxes, like this:\n(Click the collapsible box below):\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nIf there are important differences between Windows, MacOS and Linux, you can find the information relevant to you:\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen\n\n\n\n\n… and similarly, the solution will be found in a collapsible box:\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nIn a separate window marked by a warning-triangle\nIn one of three tabs marked with the operating system\nOn a postcard on the fridge in the canteen"
  },
  {
    "objectID": "index.html#navigation",
    "href": "index.html#navigation",
    "title": "R4phd",
    "section": "4 Navigation",
    "text": "4 Navigation\nThere are several ways to navigate between pages:\n\nIn the left-hand side, you will find a table of content of pages by category\nAt the end of every page in a section, you will find links to the preceding and following pages.\nA search function is available in the top-right hand corner\n\nNote the links at the bottom of pages within a section:"
  },
  {
    "objectID": "index.html#comments-and-questions",
    "href": "index.html#comments-and-questions",
    "title": "R4phd",
    "section": "5 Comments and questions",
    "text": "5 Comments and questions\nIt is possible to leave comments, suggestions and questions at the end of each page – please help improve the R4PhD content by doing so:\n\nYou will need a github account, which can be created free of charge and which will probably come in handy at later time.\nAlso note, that as pages on the R4PhD site are paired in English and Danish, comments will appear on both pages – stick to English if possible.\n\nWe also recommend using Stack Overflow as great starting point for getting support when you run into trouble. We have created a Stack Overflow for Teams group specifically for this class but, by all means, use the general Stack Overflow community – you will find help is forthcoming very quickly, if you can word your questions succinctly.\nIt is possible to create a separate account in Stack Overflow, or you can just log in using the GitHub account you just created (?) or alternatively a Google or Facebook account."
  },
  {
    "objectID": "day_4_hypothesis.html",
    "href": "day_4_hypothesis.html",
    "title": "Hypothesis testing",
    "section": "",
    "text": "Install the ggstatsplot and rstatix packages and add the library calls for these packages to your library code chunk\n\n\n\nbugs_long provides information on the extent to which men and women want to kill arthropods that vary in disgustingness (low, high) and freighteningness (low, high) (four groups in total). Each participant rated their attitude towards all four kinds of anthropods. bugs_long is a subset of the data reported by Ryan et al.(2013) .\nNote that this is a repeated measures design because the same participant gave four different ratings across four different conditions (LDLF, LDHF, HDLF, HDHF).\n\ndesire - The desire to kill an arthropod was indicated on a scale from 0 to 10\ngender Male/Female\nregion\ncondition\n\nLDLF: low disgustingness and low freighteningness\n\nLDHF: low disgustingness and high freighteningness\n\nHDLF: high disgustingness and low freighteningness\n\nHDHF: high disgustingness and high freighteningness\n\n\n\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() when comparing\nIs it reasonable to assume normality?\n\n\n\nCode\nbugs_long %&gt;% group_by(condition) %&gt;% shapiro_test(desire)\n\n# qqplot\nbugs_long %&gt;% \n  ggplot(aes(sample = desire, group = condition)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nbugs_long %&gt;% \n  ggplot(aes(x = desire, fill = condition)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nbugs_long %&gt;% \n  ggwithinstats(x = condition,\n                y = desire,\n                type = \"nonparametric\")\n\n\nCode\n# Note that the ggstatstutorial actually runs this as a \"parametric\" test\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?\n\n\n\n\n\n\nCreate a filtered data frame of bugs_long\n\n\n\nCode\nbl_LDHF &lt;- bugs_long %&gt;% filter(condition == \"LDHF\")\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() for this test?\nIs it reasonable to assume normality?\n\n\n\nCode\nbl_LDHF %&gt;% \n  filter(!is.na(gender), !is.na(desire)) %&gt;% \n  group_by(gender) %&gt;% \n  shapiro_test(desire)\n\n# qqplot\nbl_LDHF %&gt;% \n  ggplot(aes(sample = desire, color = gender)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nbl_LDHF %&gt;% \n  ggplot(aes(x = desire, fill = gender)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nbl_LDHF %&gt;% \n  ggbetweenstats(x = gender,\n                 y = desire,\n                 type = \"nonparametric\")\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?\n\n\n\n\n\n\nFirst, lump region togehter to two levels (fct_lump())\nReduce the data to one row pr subject ID, and discuss why this is a good idea.\n\n\n\nCode\nbl_region &lt;- bugs_long %&gt;%\n  mutate(region = fct_lump(region, 1)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;% \n  ungroup()\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() or perhaps ggbarstats() for this test?\nShould you asses normality?\n\n\n\nCode\n# Both variables are factors (categorical). Normality has to do with continuous data\n\n\n\nMake the appropriate test\n\n\n\nCode\nbl_region %&gt;% \n  ggbarstats(x = gender,\n             y = region)\n\n\n\nWhat is the name of the statistical test that was performed? (check the help page under the paired argument)\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?\n\n\n\n\n\n\nToothGrowth gives information on tooth length in 60 guinea pigs. Each animal received one of three dose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods, orange juice or ascorbic acid (a form of vitamin C and coded as VC).\n\nlen Tooth length\nsupp Supplement type\n\nVC Vitamin C as ascorbic acid\nOJ Orange Juice\n\ndose Dose in milligrams/day (0.5, 1, or 2)\n\n\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() when comparing\nIs it reasonable to assume normality?\n\n\n\nCode\nToothGrowth %&gt;% group_by(supp) %&gt;% shapiro_test(len)\n\n# qqplot\nToothGrowth %&gt;% \n  ggplot(aes(sample = len, color = supp)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nToothGrowth %&gt;% \n  ggplot(aes(x = len, fill = supp)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nToothGrowth %&gt;% \n  ggbetweenstats(x = supp,\n                 y = len,\n                 type = \"robust\")\n\n\nCode\n# It is likely completely fine to run this as a \"parametric\" test\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?"
  },
  {
    "objectID": "day_4_hypothesis.html#the-bugs_long-dataset",
    "href": "day_4_hypothesis.html#the-bugs_long-dataset",
    "title": "Hypothesis testing",
    "section": "",
    "text": "bugs_long provides information on the extent to which men and women want to kill arthropods that vary in disgustingness (low, high) and freighteningness (low, high) (four groups in total). Each participant rated their attitude towards all four kinds of anthropods. bugs_long is a subset of the data reported by Ryan et al.(2013) .\nNote that this is a repeated measures design because the same participant gave four different ratings across four different conditions (LDLF, LDHF, HDLF, HDHF).\n\ndesire - The desire to kill an arthropod was indicated on a scale from 0 to 10\ngender Male/Female\nregion\ncondition\n\nLDLF: low disgustingness and low freighteningness\n\nLDHF: low disgustingness and high freighteningness\n\nHDLF: high disgustingness and low freighteningness\n\nHDHF: high disgustingness and high freighteningness\n\n\n\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() when comparing\nIs it reasonable to assume normality?\n\n\n\nCode\nbugs_long %&gt;% group_by(condition) %&gt;% shapiro_test(desire)\n\n# qqplot\nbugs_long %&gt;% \n  ggplot(aes(sample = desire, group = condition)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nbugs_long %&gt;% \n  ggplot(aes(x = desire, fill = condition)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nbugs_long %&gt;% \n  ggwithinstats(x = condition,\n                y = desire,\n                type = \"nonparametric\")\n\n\nCode\n# Note that the ggstatstutorial actually runs this as a \"parametric\" test\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?\n\n\n\n\n\n\nCreate a filtered data frame of bugs_long\n\n\n\nCode\nbl_LDHF &lt;- bugs_long %&gt;% filter(condition == \"LDHF\")\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() for this test?\nIs it reasonable to assume normality?\n\n\n\nCode\nbl_LDHF %&gt;% \n  filter(!is.na(gender), !is.na(desire)) %&gt;% \n  group_by(gender) %&gt;% \n  shapiro_test(desire)\n\n# qqplot\nbl_LDHF %&gt;% \n  ggplot(aes(sample = desire, color = gender)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nbl_LDHF %&gt;% \n  ggplot(aes(x = desire, fill = gender)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nbl_LDHF %&gt;% \n  ggbetweenstats(x = gender,\n                 y = desire,\n                 type = \"nonparametric\")\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?\n\n\n\n\n\n\nFirst, lump region togehter to two levels (fct_lump())\nReduce the data to one row pr subject ID, and discuss why this is a good idea.\n\n\n\nCode\nbl_region &lt;- bugs_long %&gt;%\n  mutate(region = fct_lump(region, 1)) %&gt;% \n  group_by(subject) %&gt;% \n  slice(1) %&gt;% \n  ungroup()\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() or perhaps ggbarstats() for this test?\nShould you asses normality?\n\n\n\nCode\n# Both variables are factors (categorical). Normality has to do with continuous data\n\n\n\nMake the appropriate test\n\n\n\nCode\nbl_region %&gt;% \n  ggbarstats(x = gender,\n             y = region)\n\n\n\nWhat is the name of the statistical test that was performed? (check the help page under the paired argument)\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?"
  },
  {
    "objectID": "day_4_hypothesis.html#the-toothgrowth-dataset",
    "href": "day_4_hypothesis.html#the-toothgrowth-dataset",
    "title": "Hypothesis testing",
    "section": "",
    "text": "ToothGrowth gives information on tooth length in 60 guinea pigs. Each animal received one of three dose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods, orange juice or ascorbic acid (a form of vitamin C and coded as VC).\n\nlen Tooth length\nsupp Supplement type\n\nVC Vitamin C as ascorbic acid\nOJ Orange Juice\n\ndose Dose in milligrams/day (0.5, 1, or 2)\n\n\n\n\n\nShould you use ggwithinstats() or ggbetweenstats() when comparing\nIs it reasonable to assume normality?\n\n\n\nCode\nToothGrowth %&gt;% group_by(supp) %&gt;% shapiro_test(len)\n\n# qqplot\nToothGrowth %&gt;% \n  ggplot(aes(sample = len, color = supp)) +\n  geom_qq()+\n  geom_qq_line()\n\n\nCode\n# Density plot\nToothGrowth %&gt;% \n  ggplot(aes(x = len, fill = supp)) +\n  geom_density(alpha = 0.2)\n\n\n\nMake the appropriate test\n\n\n\nCode\nToothGrowth %&gt;% \n  ggbetweenstats(x = supp,\n                 y = len,\n                 type = \"robust\")\n\n\nCode\n# It is likely completely fine to run this as a \"parametric\" test\n\n\n\nWhat is the name of the statistical test that was performed?\n\nWhat is your interpretation?\nWhat is the consequence if you change the type of test?"
  },
  {
    "objectID": "day_3_missings.html",
    "href": "day_3_missings.html",
    "title": "Missings",
    "section": "",
    "text": "Use install.packages() to download the naniar package. When you have done that add library(naniar) to the code chunk where you call your libraries. Execute the line.\n\n\n\n\n\nvis_miss()\ngg_miss_upset()\nWhat happens if you add , nsets = 6 inside gg_miss_upset()\nnaniar contains more useful functions. You can see them here\n\n\n\nCode\nvis_miss(starwars)\ngg_miss_upset(starwars)"
  },
  {
    "objectID": "day_3_missings.html#missing-data",
    "href": "day_3_missings.html#missing-data",
    "title": "Missings",
    "section": "",
    "text": "Use install.packages() to download the naniar package. When you have done that add library(naniar) to the code chunk where you call your libraries. Execute the line.\n\n\n\n\n\nvis_miss()\ngg_miss_upset()\nWhat happens if you add , nsets = 6 inside gg_miss_upset()\nnaniar contains more useful functions. You can see them here\n\n\n\nCode\nvis_miss(starwars)\ngg_miss_upset(starwars)"
  },
  {
    "objectID": "day_3_data_import.html",
    "href": "day_3_data_import.html",
    "title": "data import",
    "section": "",
    "text": "1 Data import\n\n\nDownload the data_day_3.zip file from ItsLearning and unzip it in your raw_data directory\nThe unzipped folder contains:\n\nA .csv file called “Kronisk smerte - udvikling.csv”. It has been exported by a Danish version of Excel. Is this a good name for a file?\nA set of files related to a motioncapture project\nA Stata file (.dta) containing the sex of the participants\nA .csv file containing the age (in months) of the partipants.\n19 simplified motioncapture files of children performing vertical jumps\n\nFrame and Time_Seconds are time variables\nCGY gives you the height (in mm) of their center of gravity\n\nA folder called challenge that you need if you want to solve the challenge assignment\n\n\n\n\nImport “kronisk smerte - udvikling.csv”\n\nread.csv()\nread.csv2()\nread_csv2()\nWhat is the difference in the output? Why?\n\n\n\nCode\npath &lt;- here(\"raw_data\", \"data_day_3\"  ,\"Kronisk smerte - udvikling.csv\")\nread.csv(path)\nread.csv2(path)\nread_csv2(path)\n\n\n\n\n\nImport the files id_age.csv and id_sex.dta, combine them (use full_join()), and assign the combined dataframe to an object\n\nThe tidyverse includes the haven package that can read Stata´s .dta files\nThe function to use for the .dta file is haven::read_dta()\nInvestigate the two files before you combine them. Do you need to change anything?\nThe dplyr function full_join() will help you to combine the two imported objects.\n\n\n\nCode\na &lt;- haven::read_dta(here(\"raw_data\", \"data_day_3\", \"id_sex.dta\"))\n\nb &lt;- read_csv2(here(\"raw_data\", \"data_day_3\",\"id_age.csv\")) %&gt;%\n     rename(ID = id)  # Rename the id column\n\ndf_descriptives &lt;- full_join(a, b)\nrm(a,b) # Remove the objects a and b so that your environment is less crowded\n\n\n\n\n\nUse list.files() to generate an object called files containing the filenames of the 19 motioncapture files\n\n\nHints for the pattern =argument in list.files()\n\n\n, pattern = NULL          # The default setting. List all files in our directory\n, pattern = \".csv$\"       # all files in our directory that ends with \".csv\"\n, pattern = \"^desc\"       # all files in our directory that starts with \"desc\"\n, pattern = \"[0-9].csv$\"  # all files in our directory that ends with \"[a number from 0-9].csv\"\n\n\n\n\nCode\nfiles &lt;- list.files(here(\"raw_data\", \"data_day_3\"), pattern = \"[0-9].csv$\")\n\n\n\n\n\nImport the 19 motioncapture files\n\nUse `read_csv()``\nThe file = should include the path to the folder (use here()), and the files object you just created.\n\n\n\nCode\ndf_mocap &lt;- read_csv(here(\"raw_data\", \"data_day_3\", files))\n\n\n\nCombine the motion capture files with the descriptives object you created before\n\n\n\nCode\ndf_all &lt;- full_join(df_descriptives, df_mocap)\n\n\n\n\n\nUpdate the object you just created\n\nChange ID to a factor\nChange sex to a factor with levels = c(1,2), labels = c(\"Boy\", \"Girl\")\nChange age from months to years\nRetain the row with the highest value of CGY for each of the children\n\n\n\nCode\ndf_all &lt;- df_all %&gt;% \n  mutate(\n    ID = factor(ID),\n    sex = factor(sex, levels = c(1,2), labels = c(\"Boy\", \"Girl\")),\n    age = age/12) %&gt;% \n  group_by(ID) %&gt;% \n  filter(CGY == max(CGY, na.rm = TRUE))\n\n\n\n\n\nSave the object you just created\n\nSave the object you created before as an “.RData” file, save it in your “clean_data” folder\nSave the object you created before as an “.csv” file, save it in your “clean_data” folder\nWhat are the pros and cons of the two file types?\n\n\n\nCode\nsave(df_all, file = here(\"clean_data\", \"my_data.RData\"))\nwrite_csv(df_all, file = here(\"clean_data\", \"my_data.csv\"))\n\n\n\n\n\n1.0.1 LOOKING FOR A CHALLENGE?\n\nInspect the 19 motioncapture files in the folder called challenge\n\nWhat important piece of information is missing from the data in the files?\nWhere can you find this data?\n\n\nAnswer\n\nThe ID can only be found in the filename. You need to find a way to piece the ID together with the data in files\n\n\n\n\nInstall the package vroom and load it\n\nvroom is a very fast package for importing .csv files. (hence the name)\n\nThe main function in the vroom package is vroom()\nvroom() has the argument delim = that allows you specify the delimter you want\nRead the documentation for vroom()\n\nWhat does the id argument in the vroom() function do?\n\n\n\n\n\nUse vroom() to import all the mocap files in the challenge folder\n\nUse the id = argument in the vroom() function.\n\n\n\nCode\nfiles_chal &lt;- list.files(here(\"raw_data\", \"data_day_3\", \"challenge\"), pattern = \"[0-9].csv$\")\ndf_mocap_chal &lt;- vroom::vroom(here(\"raw_data\", \"data_day_3\", \"challenge\", files_chal),\n                              id = \"filename\")\n\n\n\n\n\nWe need to extract the ID from the filename column now\n\nCreate a column called ID that only contains the ID part from the filename\nYou need to use regular expressions to solve this\nTwo functions that may help you are str_extract() and str_remove()\nBoth functions have a pattern = argument that must be a regular expression\nUse them inside a mutate() call\n\n\n\nCode\ndf_mocap_chal &lt;- df_mocap_chal %&gt;%\n  mutate(ID = str_extract(filename, pattern = \"[0-9]+_3.1\"),  # Capture digits that come before _3.1\n         ID = str_remove(ID, pattern = \"_.+$\"),               # Remove the _3.1 part\n         ID = as.numeric(ID))                                 # Change ID from a string to a numeric variable. You can also change it to a factor"
  },
  {
    "objectID": "day_2_ggplot2_basics.html",
    "href": "day_2_ggplot2_basics.html",
    "title": "ggplot2",
    "section": "",
    "text": "Create a new quarto document\nInsert a code chunk and load 2 important libraries\nInsert a new code chunk- Write source(here(\"scripts\", \"01_import.R\")) in the chunk\nDiscuss what the code does and run it\nWrite a short headline to each code chunk\n\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#getting-started",
    "href": "day_2_ggplot2_basics.html#getting-started",
    "title": "ggplot2",
    "section": "",
    "text": "Create a new quarto document\nInsert a code chunk and load 2 important libraries\nInsert a new code chunk- Write source(here(\"scripts\", \"01_import.R\")) in the chunk\nDiscuss what the code does and run it\nWrite a short headline to each code chunk\n\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#guess-the-output",
    "href": "day_2_ggplot2_basics.html#guess-the-output",
    "title": "ggplot2",
    "section": "1 Guess the output",
    "text": "1 Guess the output\n\nLook at and discuss the code below.\nYou’ll need to guess a little because you haven’t seen all the datasets and functions yet, but use your common sense! See if you can predict what each plot will look like before running the code.\n\nggplot(mpg, aes(cty, hwy)) + geom_point()\n\nggplot(diamonds, aes(carat, price)) + geom_point()\n\nggplot(economics, aes(date, unemploy)) + geom_line()\n\nggplot(mpg, aes(cty)) + geom_histogram()"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#aesthetic-mappings---aes",
    "href": "day_2_ggplot2_basics.html#aesthetic-mappings---aes",
    "title": "ggplot2",
    "section": "2 Aesthetic mappings - aes()",
    "text": "2 Aesthetic mappings - aes()\nUse the mpg dataset.\n\n\n2.1 Explore the columntypes in the mpg dataset\nUse one or more of: ?mpg, head(), glimpse(), summary(), and/or skim()\n\n\nCode\n?mpg\nmpg %&gt;%  head()\nmpg %&gt;%  glimpse()\nmpg %&gt;% skimr::skim()  # or library(skimr) and then mpg %&gt;% skim()\n\n\n\n\n\n2.2 Experiment with the colour, shape, and size aesthetics.\nUse this basic code, and add/change the colour, shape, and size aesthetics.\n\nggplot(mpg, aes(cty, hwy)) + \n  geom_point()\n\n\n\n\n\nWhat happens when you map continuous variables to one or more of the aesthetics?\nWhat about categorical variables?\nWhat happens when you use multiple aesthetics in a plot?\n\n\n\nCode\n## Examples\n\n# Categorial\nggplot(mpg, aes(cty, hwy, colour = class)) + \n  geom_point()\n\n# Continuous \nggplot(mpg, aes(cty, hwy, size = displ)) + \n  geom_point()\n\n# Continuous \nggplot(mpg, aes(cty, hwy, color = hwy)) +  # Notice hwy is mapped to both y axis and color\n  geom_point()\n\n## A continuous variable doesn't work for shape\nggplot(mpg, aes(cty, hwy, shape = displ)) + \n  geom_point()\n\n# Multiple Categorical - a legend for each aesthetic is created\nggplot(mpg, aes(cty, hwy, colour = class, shape = fl)) + \n  geom_point()\n\n\n\n\n\n2.3 What’s gone wrong with this code? Why are the points not blue?\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy, color = \"blue\"))\n\n\n\nCode\n# If you want all the points to be colored blute, then color = \"blue\" must be placed outside the aes() function.\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             color = \"blue\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_point-and-geom_smooth",
    "href": "day_2_ggplot2_basics.html#geom_point-and-geom_smooth",
    "title": "ggplot2",
    "section": "3 geom_point() and geom_smooth()",
    "text": "3 geom_point() and geom_smooth()\n\nUse your soldiers dataset\n\n\nExplore the relationship between heightcm and weightkg using geom_point()\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point()\n\n\n\n\n\nColor the points according to BMI\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = BMI))+\n  geom_point()\n\n\n\n\n\nColor the points according to category\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = category))+\n  geom_point()\n\n\n\n\nExplore the relationship between heightcm and weightkg using geom_point() and geom_smooth()\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n\n\n\n\n\ncolor by sex\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg, color = sex))+\n  geom_point()+\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#facet_wrap",
    "href": "day_2_ggplot2_basics.html#facet_wrap",
    "title": "ggplot2",
    "section": "4 facet_wrap()",
    "text": "4 facet_wrap()\n\nWhat arguments can you use to control how many rows and columns appear in the output?\nWhat does the scales argument in facet_wrap() do? When might you use it?\n\n\n\nExplore the relationship between heightcm and weightkg\n\nUse geom_point() and geom_smooth()\nfacet by sex\ncolor the points by category\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = heightcm, y = weightkg))+\n  geom_point(aes(color = category))+\n  geom_smooth(method = \"lm\")+\n  facet_wrap(~sex)"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_bar",
    "href": "day_2_ggplot2_basics.html#geom_bar",
    "title": "ggplot2",
    "section": "5 geom_bar()",
    "text": "5 geom_bar()\n\n\nUse geom_bar() to explore how many soldiers of each race there is\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = race))+\n  geom_bar()\n\n\n\n\n\n\nUse geom_bar() to explore how many soldiers are at each Installation\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = Installation))+\n  geom_bar()\n\n# OR - Whats the difference?\n\nsoldiers %&gt;% \n  ggplot(aes(y = Installation))+\n  geom_bar()\n\n\n\n\n\nUse the fill aestetic to color the Installation bars according to race\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, fill = race))+\n  geom_bar()\n\n\n \n\nChange something so that you can visually evaluate if race is equally distributed across the Installations\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, fill = race))+\n  geom_bar(position = \"fill\",   #  All bars have full length/height - this makes it easier to see proportional differences between groups\n           color = \"black\"      #  Adds a black line around each box.\n           )"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#geom_boxplot",
    "href": "day_2_ggplot2_basics.html#geom_boxplot",
    "title": "ggplot2",
    "section": "6 geom_boxplot()",
    "text": "6 geom_boxplot()\n\n\nUse geom_boxplot to explore weightkg across the different Installations\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(x = Installation, y = weightkg))+\n  geom_boxplot()\n\n# OR\n\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot()\n\n\n\n\n\nRemove the outliers from the boxplot (read the documentation)\nAdd some jittered points to give an impression of the nr of soldiers at each installation\nGive the jittered points some transparency (decrease alpha) to avoid overplotting\n\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot(\n    outlier.shape = NA)+\n  geom_jitter(\n    height = 0.2,\n    alpha = 0.1)\n\n\n\n* Use facet_wrap() to split on sex have the plots placed in one column\n\n\nCode\nsoldiers %&gt;% \n  ggplot(aes(y = Installation, x = weightkg))+\n  geom_boxplot(\n    outlier.shape = NA)+\n  geom_jitter(\n    height = 0.2,\n    alpha = 0.1)+\n  facet_wrap(~sex, ncol = 1)"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#annotations-title-legends-etc.",
    "href": "day_2_ggplot2_basics.html#annotations-title-legends-etc.",
    "title": "ggplot2",
    "section": "7 Annotations (title, legends, etc.)",
    "text": "7 Annotations (title, legends, etc.)\n\n\nRead the documentation for labs()\nWhat can we control with this function?\n\n\n\nUse labs() and recreate this plot\nTo create a completely blank plot just type ggplot()\n\n\nCode\nggplot()+\n  labs(x = \"X-axis\",\n       y = \"Y-axis\",\n       title = \"Title\",\n       subtitle = \"Subtitle\",\n       caption = \"Caption\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#themes",
    "href": "day_2_ggplot2_basics.html#themes",
    "title": "ggplot2",
    "section": "8 Themes",
    "text": "8 Themes\n\nWhat theme was used for this plot?\n\nTo recreate the basic plot use: ggplot(mpg, aes(hwy, cty))+ geom_point()\nTry another theme. Type theme_ and try some of the suggestions.\n\n\n\n\n\n\n\n\n\nWant more?\nUse install.packages() to download the ggthemes package. When you have done that add library(ggthemes) to the code chunk where you call your libraries and execute the line.\nWatch the gallery"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#explore-soldiers-further",
    "href": "day_2_ggplot2_basics.html#explore-soldiers-further",
    "title": "ggplot2",
    "section": "9 Explore soldiers further",
    "text": "9 Explore soldiers further\n\nTogether with your neighbor\nCome up with a research question for the dataset\nDiscuss what variables to map\nDiscuss what geoms to use\nFix the labels in your plot (x, y, title, etc..)\nWhen you are done - show your plot to another group and take a look at their plot\nTry to work out the code they must have used to create that plot"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#saving-plots",
    "href": "day_2_ggplot2_basics.html#saving-plots",
    "title": "ggplot2",
    "section": "10 Saving plots",
    "text": "10 Saving plots\nIn your project folder, create a new folder for saving plots and/or tables (e.g. “plots”)\n\n\nread the documentation for ggsave()\n\nWhat does the arguments I have specified below do?\nAre they different from the defaults?\n\n\nggsave(filename = here(\"[YOUR FOLDER]\", \"[THE NAME OF YOUR FILE].png\"), # .png .pdf .jpg are typical options\n       plot = [The name of the ggplot object],                      # \n       dpi = \"retina\", \n       device = NULL                                                # Why can we leave this as NULL?\n       )\n\n\n\n\nCreate a simple plot and save it to your folder using ggsave()\n\nggplot(mpg, aes(hwy, cty))+\n  geom_point()+\n  theme_classic()\n\nggsave(filename = here(\"plots\", \"my_plot.png\"),\n       plot = last_plot(),\n       dpi = \"retina\")"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#color-and-fill-scales",
    "href": "day_2_ggplot2_basics.html#color-and-fill-scales",
    "title": "ggplot2",
    "section": "11 color and fill scales",
    "text": "11 color and fill scales\n\n\nPut a different fill scale on this plot\n\nstarwars %&gt;% \n  ggplot(aes(y = skin_color, fill = sex))+\n  geom_bar() \n\n\n\n\n\n\nCode\nstarwars %&gt;% \n  ggplot(aes(y = skin_color, fill = sex))+\n  geom_bar() +\n  scale_fill_brewer(type = \"qual\", palette = 3)\n\n\n\n\n\nPut a different color scale on this plot\n\nmtcars %&gt;%\n  ggplot(aes(x = mpg, y = disp, color = hp)) +\n  geom_point(size = 6)\n\n\n\n\n\n\nCode\nmtcars %&gt;%\n  ggplot(aes(x = mpg, y = disp, color = hp)) +\n  geom_point(size = 6) +\n  scale_color_continuous(type = \"viridis\", option = \"magma\")\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graph.\n\n\n\n\n\n\n\n\nUsing diamonds, recreate the R code necessary to generate the following graphs.\n\n\nHINT\n\nHINT: Think position=?????"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#overplotting",
    "href": "day_2_ggplot2_basics.html#overplotting",
    "title": "ggplot2",
    "section": "12 Overplotting",
    "text": "12 Overplotting\n\nFix this plot\n\nchange alpha\nchange shape\n\n\ndiamonds %&gt;% \n  filter(x&gt;3 & x&lt;9) %&gt;% \n  ggplot(aes(x = x, y = price))+\n  geom_point()\n\n\n\n\n\n\nCode\n# alpha and point\ndiamonds %&gt;% \n  filter(x&gt;3 & x&lt;9) %&gt;% \n  ggplot(aes(x = x, y = price))+\n  geom_point(alpha = 0.2,\n             shape = \".\") # This shape gives each point the size of a pixel"
  },
  {
    "objectID": "day_2_ggplot2_basics.html#arranging-plots",
    "href": "day_2_ggplot2_basics.html#arranging-plots",
    "title": "ggplot2",
    "section": "13 Arranging Plots",
    "text": "13 Arranging Plots\n\nInstall the patchwork package and load it\nUse install.packages() to download the patchwork package. When you have done that add library(patchwork) to the code chunk where you call your libraries and execute the line.\n\n\n\nRun this code and then recreate the plot below\n\np &lt;- ggplot(diamonds)\npf &lt;- ggplot(diamonds %&gt;% filter(carat&lt;3))\np1 &lt;- p + geom_bar(aes(x = cut, fill = clarity), position = \"fill\") +labs(title = \"p1\")\np2 &lt;- p + geom_bar(aes(x = cut, fill = clarity)) +labs(title = \"p2\")\np3 &lt;- pf + geom_histogram(aes(x = carat, fill = clarity), binwidth = 0.1, position = \"fill\", na.rm = TRUE) +labs(title = \"p3\")\np4 &lt;- pf + geom_histogram(aes(x = carat, fill = clarity), binwidth = 0.1, position = \"dodge\", na.rm = TRUE) +labs(title = \"p4\")\n\n\n\nCode\n(p1|p2/(p3+p4)) + plot_layout(guide = \"collect\")\n\n\n\n\n\n\n\n\n\nRead the documentation for plot_annotation()\n\nWhat does the function overall do?\nWhat does the argument tag_levels = 'A' do?\n\n\n\n\nTag the plots with roman numerals, and suffix the numerals with a “.”\n\n\nCode\n(p1|p2/(p3+p4)) + \n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\")\n\n\n\n\n\nAdd a catchy title\n\n\nCode\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\", \n                  title = \"A catchy title\")\n\n\n\n\n\nRemove the small plot titles (p1, p2, p3, p4) from the four plots\nYou need to use the & symbol to do this the smart way You need to use the labs() function You need to set an argument in the labs() function to NULL\n\n\nCode\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\", \n                  title = \"A catchy title\") &\n  labs(title = NULL)\n\n\n\n\n\nApply the theme_void() and the viridis magma fill scale\n\n\nCode\n(p1|p2/(p3+p4)) +\n  plot_layout(guide = \"collect\") +\n  plot_annotation(tag_levels = \"I\",\n                  tag_suffix = \".\",\n                  title = \"A catchy title\") & \n  theme_void() &\n  scale_fill_viridis_d(option = \"magma\")\n\n\n\n\n\nSave the plot to your plot folder\n\n\nCode\nggsave(filename = here(\"plots\", \"my_patchwork_plot.png\"),\n       plot = last_plot(),\n       dpi = \"retina\")"
  },
  {
    "objectID": "day_1_quarto_documents.html#quarto-documents",
    "href": "day_1_quarto_documents.html#quarto-documents",
    "title": "quarto documents",
    "section": "1 quarto documents",
    "text": "1 quarto documents\n\n\nStart a new .qmd document\nFile -&gt; New File -&gt; Quarto Document -&gt;\n\nMake sure the settings are set to “Document” and “HTML” (both are default settings),\nUncheck ‘Use visual markdown editor’\npress “Create”\n\nThe document contains three types of code YAML, R, and Markdown code. Take a look at the document and see if you can recognize the sections with R code.\n\nSave your file (Important: file_name_matters).\n\nPres “Render” and see what happens."
  },
  {
    "objectID": "day_1_quarto_documents.html#yaml-code",
    "href": "day_1_quarto_documents.html#yaml-code",
    "title": "quarto documents",
    "section": "2 YAML code",
    "text": "2 YAML code\nYAML (Yet Another Markup Language).\nThe YAML code is at the very top of the document. It begins with --- and ends with ---. It gives instructions to your computer on how it should build your document. You will learn about YAML code later. For now - notice that it is there and forget about it.\n\nDelete everything in the document except the YAML code"
  },
  {
    "objectID": "day_1_quarto_documents.html#markdown-code",
    "href": "day_1_quarto_documents.html#markdown-code",
    "title": "quarto documents",
    "section": "3 Markdown code",
    "text": "3 Markdown code\nMarkdown is a simple, text-based language used to style text on the web. You control the display of text by adding non-intrusive symbols: headings are made with hashtags (#), bold text with asterisks (*) or underscores (_), links with brackets and parentheses, among others. It’s quick to learn and write.\n\n\nHeadlines\nHeadlines are made using one or more # signs followed by a space\n# Largest headline\n## Second largest headline\n### Third largest headline\n##### Smallest headline possible.\n\nPractice making different headlines.\n\n\n\n\nBold and Italic\n*text* becomes text\n**text** becomes text\n***text*** becomes text\n\nPractice writing something in italics and bold\n\n\n\n\nNew lines\nTo break a line in R Markdown and have it appear in your output, use two trailing spaces and then hit return.\nIf you want a hard line break end your lines with a \\\n\nPractice making line-breaks.\n\n\n\n\nMarkdown Code\nYou can more about Markdown code here"
  },
  {
    "objectID": "day_1_quarto_documents.html#r-code",
    "href": "day_1_quarto_documents.html#r-code",
    "title": "quarto documents",
    "section": "4 R code",
    "text": "4 R code\n\n\nR code chunks\nInsert a code chunk in your document (Default CTRL+Alt+I)\nIf pressing CTRL+Alt+I doesn’t work click Tools -&gt; Command Palette -&gt; and type “Chunk” in the search field\nWhat you write inside the codechunk will be evaluated as R code.\nWrite 2+2 inside the Code chunk you just created, and Render the document.\n\n\n\n\n\n\nsolution\n\n\n\n\n\nYour code block should look something like this:\n```{r}\n2+2\n```\n\n\n\n\n\n\nRun Code chunk\nYou don’t need to Render your document in order to see the output of your code.\nPlace the cursor inside the code chunk you just made and Click the green triangle (play-sign) in the right side of the code chunk.\nNotice the output in the console.\nR comes with many inbuilt datasets, one of them is the iris dataset.\nPlot the iris dataset.\nInsert a codechunk, and write plot(iris) inside the codechunk.\nClick the green triangle.\n\n\n\n\n\n\nsolution\n\n\n\n\n\nYour code block should look something like this:\n```{r}\nplot(iris)\n```\n\n\n\n\n\n\n\n\n\nLifehack\n\n\n\npressing ALT+Enter will run the current line or selection.\npressing CTRL+Enter will run the current line or selection and jump to next line.\npressing CTRL+ALT+C will run the current code chunk (instead of just the current line).\n\n\n\n\n\nInline R code\nInline R code allows you to incorporate the results of your R code directly into the text of a document. It is useful because it lets you weave the results of your data analysis directly into your written text, making your documents more reproducible and prevents errors if your data changes.\nInline R code is written within the text and is surrounded by backticks and includes an “r” at the start. `r  3 + 4` will display the result 7 in the rendered document.\n\nUse the function nrow() and inline R code to write a sentence that says how many rows the iris dataset has\n\n\n\n\n\n\n\nsolution\n\n\n\n\n\nThe iris dataset contains `r nrow(iris)` rows\nor\nThe iris dataset contains `r iris %&gt;%  nrow()` rows"
  },
  {
    "objectID": "day_1_extra.html",
    "href": "day_1_extra.html",
    "title": "Day 1 Extra #1",
    "section": "",
    "text": "1 Extra materials for those ahead of the curve\n…"
  },
  {
    "objectID": "day_1_basics_of_Rstudio.html",
    "href": "day_1_basics_of_Rstudio.html",
    "title": "Basics of Rstudio",
    "section": "",
    "text": "1 Rstudio\nTogether in groups of two or three explain the following to each other:\n\nWhat and where is the Console?\nWhat and where is the Script?\nWhat is the difference between writing 2+2in the console and the script?\nWhat happens if you write a # in the script??\nWhen and why can comments in your code be useful?\nWhat and where is the Environment Pane?\nWhat and where is the “Files, Help, Plots, Packages, and Viewer” Pane?\nWhat does F1 and ?[some_function] do?\nWhat is an R Project, and why is it a good idea to use?"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#simulated-data",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#simulated-data",
    "title": "tidy data",
    "section": "0.1 Simulated data",
    "text": "0.1 Simulated data\nNotice the wide format\n\nset.seed(1)\n\nSorg &lt;- tibble(\n  ID = seq(1:100),                                        # n = 100 \n  ga_week = sample(13:43, 100, replace = TRUE),           # Gestational week\n  gender = sample(c(\"Male\", \"Female\"), 100, \n                  replace = TRUE, prob = c(0.4, 0.6)),    # More women\n  t1_pg13_sum = rnorm(100, mean = 20, sd = 10),           # Values from a normal distribution\n  t2_pg13_sum = rnorm(100, mean = t1_pg13_sum-5, sd = 5), # scores tend to drop \n  t3_pg13_sum = rnorm(100, mean = t2_pg13_sum-5, sd = 3), # scores tend to drop\n) %&gt;% \n  mutate(\n    across(.cols = ends_with(\"_sum\"),\n           .fns = ~if_else(gender == \"Female\", .x+10, .x)),  # Women have higher scores\n    across(.cols = ends_with(\"_sum\"),\n           .fns = ~ .x+ga_week/2)                            # Higer scores with higher GA week\n  ) %&gt;%\n  \n  # Create ga_cat on the basis of ga_week\n  # ga_cat is a categorical variable\n  mutate(\n    ga_cat = case_when(\n      ga_week &lt; 22 ~ \"14-21\",\n      ga_week &lt; 37 ~ \"22-36\",\n      ga_week &lt; 42 ~ \"37-42\",\n      ga_week &gt;= 42 ~ \"43+\"\n    ) %&gt;%  factor(ordered = TRUE)\n  )"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#print",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#print",
    "title": "tidy data",
    "section": "0.2 Print",
    "text": "0.2 Print\n\n\n# A tibble: 100 × 7\n      ID ga_week gender t1_pg13_sum t2_pg13_sum t3_pg13_sum ga_cat\n   &lt;int&gt;   &lt;int&gt; &lt;chr&gt;        &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt; &lt;ord&gt; \n 1     1      37 Female        40.7        31.3       30.7  37-42 \n 2     2      16 Female        31.8        33.2       30.2  14-21 \n 3     3      19 Male          30.0        27.9       28.8  14-21 \n 4     4      13 Male          15.2        14.1        8.27 14-21 \n 5     5      14 Female        42.8        45.6       36.8  14-21 \n 6     6      41 Female        37.7        30.9       24.7  37-42 \n 7     7      35 Female        63.8        62.8       58.1  22-36 \n 8     8      23 Male          26.5        21.2       15.5  22-36 \n 9     9      26 Female        59.8        52.3       46.0  22-36 \n10    10      30 Male          30.9        30.5       20.8  22-36 \n# ℹ 90 more rows"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1",
    "title": "tidy data",
    "section": "1.1 Example 1",
    "text": "1.1 Example 1\n\nSorg %&gt;% \n  ggplot(aes(x =ga_week))+\n  geom_point(aes(y = t1_pg13_sum))+\n  geom_point(aes(y = t2_pg13_sum))+\n  geom_point(aes(y = t3_pg13_sum))"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2",
    "title": "tidy data",
    "section": "1.2 Example 2",
    "text": "1.2 Example 2\n\nSorg %&gt;% \n  ggplot(aes(x =ga_week))+\n  geom_point(aes(y = t1_pg13_sum), color = \"red\")+\n  geom_point(aes(y = t2_pg13_sum), color = \"blue\")+\n  geom_point(aes(y = t3_pg13_sum), color = \"yellow\")"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-3",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-3",
    "title": "tidy data",
    "section": "1.3 Example 3",
    "text": "1.3 Example 3\n\nSorg %&gt;% \n  ggplot(aes(x =ga_week))+\n  geom_point(aes(y = t1_pg13_sum), color = \"red\")+\n  geom_point(aes(y = t2_pg13_sum), color = \"blue\")+\n  geom_point(aes(y = t3_pg13_sum), color = \"yellow\")+\n  facet_wrap(~gender)"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#pivot_longer",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#pivot_longer",
    "title": "tidy data",
    "section": "2.1 pivot_longer()",
    "text": "2.1 pivot_longer()\n\nSorg_long &lt;- Sorg %&gt;% \n  pivot_longer(cols = ends_with(\"_sum\"),\n               names_to = \"Tid\",\n               values_to = \"Grief\")\n\n\n\n# A tibble: 300 × 6\n      ID ga_week gender ga_cat Tid         Grief\n   &lt;int&gt;   &lt;int&gt; &lt;chr&gt;  &lt;ord&gt;  &lt;chr&gt;       &lt;dbl&gt;\n 1     1      37 Female 37-42  t1_pg13_sum  40.7\n 2     1      37 Female 37-42  t2_pg13_sum  31.3\n 3     1      37 Female 37-42  t3_pg13_sum  30.7\n 4     2      16 Female 14-21  t1_pg13_sum  31.8\n 5     2      16 Female 14-21  t2_pg13_sum  33.2\n 6     2      16 Female 14-21  t3_pg13_sum  30.2\n 7     3      19 Male   14-21  t1_pg13_sum  30.0\n 8     3      19 Male   14-21  t2_pg13_sum  27.9\n 9     3      19 Male   14-21  t3_pg13_sum  28.8\n10     4      13 Male   14-21  t1_pg13_sum  15.2\n# ℹ 290 more rows"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-1",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-1",
    "title": "tidy data",
    "section": "3.1 Example 1",
    "text": "3.1 Example 1\n\nSorg_long %&gt;% \n  ggplot(aes(x = ga_week,\n             y = Grief, \n             color = Tid)) +\n  geom_point()+\n  facet_grid(cols = vars(gender))"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-1-output",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-1-output",
    "title": "tidy data",
    "section": "3.1 Example 1",
    "text": "3.1 Example 1"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-2",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-2",
    "title": "tidy data",
    "section": "3.2 Example 1",
    "text": "3.2 Example 1\n\nSorg_long %&gt;% \n  ggplot(aes(x = ga_week,\n             y = Grief, \n             color = Tid)) +\n  geom_point()+\n  geom_smooth(method = \"lm\")+\n  facet_grid(rows = vars(Tid),\n             cols = vars(gender))"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-2-output",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-1-2-output",
    "title": "tidy data",
    "section": "3.2 Example 1",
    "text": "3.2 Example 1"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2-1",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2-1",
    "title": "tidy data",
    "section": "3.3 Example 2",
    "text": "3.3 Example 2\n\nSorg_long %&gt;% \n  ggplot(aes(x = Tid,\n             y = Grief,\n             fill = ga_cat))+\n  geom_boxplot(alpha = 0.5)+\n  geom_point(alpha = 0.3) +\n  geom_path(aes(group = ID), alpha = 0.3)+\n  facet_grid(cols = vars(gender),\n             rows = vars(ga_cat))"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2-1-output",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#example-2-1-output",
    "title": "tidy data",
    "section": "3.3 Example 2",
    "text": "3.3 Example 2"
  },
  {
    "objectID": "Home_excercise/tidy_data_going_from_wide_to_long.html#also-see",
    "href": "Home_excercise/tidy_data_going_from_wide_to_long.html#also-see",
    "title": "tidy data",
    "section": "3.4 Also see",
    "text": "3.4 Also see\nSlides + excercises from Day 1 (Other important functions for data wrangling.)"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#section",
    "href": "day_1_basics_of_R_code.html#section",
    "title": "Basics of R code",
    "section": "1.1 <-",
    "text": "1.1 &lt;-\n\nDo you have a short cut for the assignment operator? (Tools -&gt; Show Command Palette -&gt; and type “assignment”)\nWhat does the assign operator &lt;- do?\n\n\n\nAssign the inbuilt datset iris to an object called my_data\niris is available to you when you load R. It´s an inbuilt dataset. So it is available to you even though you cant find it in the Environment pane. Just type iris.\n\n\nCode\nmy_data &lt;- iris\n\n\n\n\n\nprint my_data\n\n\nCode\nmy_data"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#c",
    "href": "day_1_basics_of_R_code.html#c",
    "title": "Basics of R code",
    "section": "1.2 c()",
    "text": "1.2 c()\nThe c is short for concatenate, and means to link together.\nThis function combines values into a vector or list. For now you can think of a vector as a sequence of values. The values are seperated by a ,\n\n\nUse c() to create a sequence of numbers from 0 to 4\n\n\nCode\nc(0, 1, 2, 3, 4)\n\n\n\n\nUse c() to create a sequence of numbers from 0 to 4 in steps of 2\n\n\nCode\nc(0, 2, 4)"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#seq",
    "href": "day_1_basics_of_R_code.html#seq",
    "title": "Basics of R code",
    "section": "1.3 seq()",
    "text": "1.3 seq()\nOf course, such predictable operations can be done with ease in a more reliable way. We will use the function seq() as an example. The output of this function is a sequence of numbers. The sequence of numbers is dictated by the arguments that you provide.\nRead the arguments section on help page for seq()\nType ?seq() in the console or type seq()and pres F1 while the cursor stands on the on the letters.\n\n\nMake a sequence of numbers that goes from 0 to 100\n\n\nCode\nseq(from = 0,\n    to = 100)\n\n# This simple operation can also be done by just writing 0:100\n\n\n\n\n\nMake a sequence of numbers that goes from 0 to 100 in steps of 2\n\n\nCode\nseq(from = 0,\n    to = 100,\n    by = 2)"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#sample",
    "href": "day_1_basics_of_R_code.html#sample",
    "title": "Basics of R code",
    "section": "1.4 sample()",
    "text": "1.4 sample()\n\nUsing sample(), take a sample of 5 random numbers between 1 and 100\n\n\nCode\nsample(1:100, 5)\n\n\n\n\nWhat does the argument replace do? What is the default value?"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#mean",
    "href": "day_1_basics_of_R_code.html#mean",
    "title": "Basics of R code",
    "section": "1.5 mean()",
    "text": "1.5 mean()\nAnother function we can use is mean(). This function gives you the mean value of a sequence of numbers. Read the arguments section of the help page for mean()\n\n\nWhat type of input does the first arguments of the mean() function require?\n\n\nCode\n# It requires a vector. \n# You can still think of this as a sequence of numbers\n# c()\n\n\n\n\n\nUsing c(), take the mean of the numbers 5, 3, 1, and 10\n\n\nCode\nmean(c(5, 3, 1, 10))\n\n\n\n\n\nTake the mean of this vector c(2, 4, 6, NA)\n\n\nCode\nmean(c(2, 4, 6, NA))\n\n\n\n\n\nTake the mean of this vector c(2, 4, 6, NA), disregarding NA values\n\n\n\n\n\n\nHint\n\n\n\n\n\nRead about the na.rm argument in the mean() function. What is the default value?\n\n\n\n\n\nCode\nmean(c(2, 4, 6, NA),\n     na.rm = TRUE)\n\n\n\n\n\nYou will find the na.rm argument in many functions. It always defaults to FALSE. Discuss if this is a good idea? Is it different from other programs?"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#section-1",
    "href": "day_1_basics_of_R_code.html#section-1",
    "title": "Basics of R code",
    "section": "1.6 %>%",
    "text": "1.6 %&gt;%\n\nWhat is your keyboard shortcut to write the pipe %&gt;% ? (Pres CTRL+SHIFT+P and type pipe in the search field).\n\n\nLoad the tidyverse\nWhy? The %&lt;% is a part of the tidyverse, and is not included in Base R\n\nlibrary(tidyverse)\n\n\n\n\nUsing the pipe, create a sequence of numbers going from 0 til 100 and then take the mean of the sequence.\n\n\nCode\nseq(from = 0,\n    to = 100) %&gt;%\n  mean()\n\n\n\n\n\nUsing the pipe, create a sequence of numbers going from 1 to 20 in 39 steps, and then sample 10 random numbers from the sequence\n\n\nCode\nseq(from = 1,\n    to = 20,\n    length.out = 39) %&gt;% \n  sample(10)\n\n\n\n\n\nRewrite this code to use the pipe instead\n\nsort(\n  sample(seq(1:100),\n         10,\n         replace = TRUE)\n  )\n\n\n\nCode\nseq(1:100) %&gt;% \n  sample(10,\n         replace = TRUE) %&gt;% \n  sort()"
  },
  {
    "objectID": "day_1_basics_of_R_code.html#explore",
    "href": "day_1_basics_of_R_code.html#explore",
    "title": "Basics of R code",
    "section": "1.7 Explore",
    "text": "1.7 Explore\nInvestigate the following functions that we may need later on in this course.\n\nquantile()\nrnorm()\nmedian()\n\ncumsum()\nmin()\n\nmax()\n\nn()\nset.seed()"
  },
  {
    "objectID": "day_1_dplyr.html#load-the-tidyverse-and-the-here-package",
    "href": "day_1_dplyr.html#load-the-tidyverse-and-the-here-package",
    "title": "dplyr",
    "section": "Load the tidyverse and the here package",
    "text": "Load the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)"
  },
  {
    "objectID": "day_1_dplyr.html#here",
    "href": "day_1_dplyr.html#here",
    "title": "dplyr",
    "section": "1.1 here()",
    "text": "1.1 here()\n\nTry out the here() function\n\nWhat happens if you write here() ?\nWhat happens if you write here(\"raw_data\") ?\n\nCompare your output with your neighbors.\nCompare your output with someone who has a different operating system (Windows, Mac, Linux) than you. (Hint: look for \\ /)\nDiscuss if and how the here()function could ever be of any use to anybody\n\n\n\n\n\nLoad the soldiers dataset\nUse the function read_csv2()\nThe file argument should be here(\"raw_data\", \"soldiers.csv\")\n\n\nCode\nread_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\n\nAssign the soldiers dataset to an object called soldiers\nGreat, now read the data again and assign it (remember &lt;-) to an object called soldiers\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))"
  },
  {
    "objectID": "day_1_dplyr.html#skim",
    "href": "day_1_dplyr.html#skim",
    "title": "dplyr",
    "section": "1.2 skim()",
    "text": "1.2 skim()\nThere are many ways to explore a dataframe. In this course we will take a shortcut and use the skim() function from the skimr package. The skim() function provides an exellent overview of a dataframe.\nLoad the skimr package and use the skim() function to get an impression of the soldiers dataset.\nDiscuss with your neighbor:\n\nNr of rows?\nNr of columns?\nMissing values?\nTypes of variables?\nHow many unique values does the different character variables have?\n\nAny fake data? (hint: Yes, for educational purposes I have added some fake data)\n\n\n\nCode\nlibrary(skimr)\nskim(soldiers)"
  },
  {
    "objectID": "day_1_dplyr.html#select",
    "href": "day_1_dplyr.html#select",
    "title": "dplyr",
    "section": "2.1 select()",
    "text": "2.1 select()\n\nselect the columns subjectid, sex, age\n\n\nCode\nsoldiers %&gt;% \n  select(subjectid, sex, age)\n\n\n\n\n\n\nselect the columns 1, 3, 5:7\n\n\nCode\nsoldiers %&gt;% \n  select(1,3,5:7)\n\n\n\n\n\n\nremove the columns 3:5\n\n\nCode\nsoldiers %&gt;% \n  select(-(3:5))\n\n\n\n\n\n\nselect all columns that contains the word “circumference”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nUse one of the tidyselect helper functions.\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  select(contains(\"circumference\"))\n\n\n\n\n\nremove all columns containing the letter “c”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nUse one of the tidyselect helper functions.\nUse a minus sign.\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  select(-contains(\"c\"))\n\n\n\n\n\nselect all columns that contains a “c” OR “x” OR “y” OR “z”\n\n\n\n\n\n\nHINT\n\n\n\n\n\nIn R(and many other programming languages) the | sign is used as a logical operator for OR.\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  select(contains(\"c\") | contains(\"x\") | contains(\"y\") | contains(\"z\"))\n\n\n\n\n\nselect all columns that contains a “c” OR “x” OR “y” OR “z”\nThis time use the tidyselect helper function called matches()\nmatches() allows you to use logical operators inside the function. E.g., matches(\"this|that\")\n\n\nCode\nsoldiers %&gt;% \n  select(matches(\"c|x|y|z\"))\n\n\n\n\n\nChallenge: Why not always use matches()?\nUse the preloaded iris data-set. (just write iris)\nTry to use matches() to select all columns containing a “.”\n\n\nCode\niris %&gt;% \n  select(matches(\".\")) %&gt;% \n  head() # This line is just to prevent a very long output.\n\n\n\nWhy did we select the Species column?\nWhat happens if we use contains() instead\n\n\nCode\niris %&gt;% \n  select(contains(\".\")) %&gt;% \n  head() # This line is just to prevent a very long output.\n\n\n\nWhat is the difference in the output? Why is it different?\n\n\nANSWER\n\ncontains(): Contains a literal string.\nmatches(): Matches a regular expression.\nIn regular expressions . is a wildcard.\n\nThe wildcard . matches any character. For example, a.b matches any string that contains an “a”, and then any character and then “b”; and a.*b matches any string that contains an “a”, and then the character “b” at some later point.\nhttps://en.wikipedia.org/wiki/Regular_expression"
  },
  {
    "objectID": "day_1_dplyr.html#filter",
    "href": "day_1_dplyr.html#filter",
    "title": "dplyr",
    "section": "2.2 filter()",
    "text": "2.2 filter()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nKeep all rows where sex is Female:\n\n\n\n\n\n\nHint\n\n\n\n\n\n???? == \"Female\"\n\n\n\n\n\nCode\nsoldiers %&gt;% filter(sex == \"Female\")\n\n\n\n\n\nKeep all rows where weightkg is missing (NA value)\n\n\n\n\n\n\nHint\n\n\n\n\n\nuse the is.na() function\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  filter(is.na(weightkg))\n\n\n\n\n\nKeep all rows where WritingPreference is “Left hand” AND sex is “Female”\n\n\nCode\nsoldiers %&gt;% \n  filter(WritingPreference == \"Left hand\" ,  sex == \"Female\")  # you can use & instead of a ,\n\n\n\n\n\nKeep all rows where WritingPreference is “Left hand” OR sex is “Female”\n\n\nCode\nsoldiers %&gt;% \n  filter(WritingPreference == \"Left hand\" |  sex == \"Female\")  \n\n\n\n\n\nWhat is going wrong in this code?\n\nsoldiers %&gt;% \n  select(1:5) %&gt;% \n  filter(WritingPreference == \"Left hand\" |  sex == \"Female\")  \n\nThe error message is:\n\nError in `filter()`:\nℹ In argument: `WritingPreference == \"Left hand\" | sex == \"Female\"`.\nCaused by error:\n! object 'WritingPreference' not found\nRun `rlang::last_error()` to see where the error occurred.\n\n\n\nANSWER\nThe variable WritingPreference was not selected in the first line.\n\n\n\n\n\nKeep all rows where age is above 30 and the weightkg is below 600\n\n\nCode\nsoldiers %&gt;% \n  filter(age &gt; 30, weightkg &lt; 600)\n\n\n\n\n\n\nKeep all rows where Ethnicity is either “Mexican” OR “Filipino” OR “Caribbean Islander”\n\n\n\n\n\n\nHint\n\n\n\n\n\nyou need to use %in% and c()\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  filter(Ethnicity %in% c(\"Mexican\", \"Filipino\", \"Caribbean Islander\"))\n\n\n\n\n\n\n\n\nDifference between == and %in%\n\n\n\n\n\ntldr - Use %in% instead of == when you want to filter for multiple values.\nRead on if you want to understand why. (You don’t have to)\nThe code filter(Ethnicity == c(\"Mexican\", \"Filipino\")) is likely not doing what you expect. The ‘==’ operator does an element-wise comparison, which means it compares the first element of ‘Ethnicity’ to the first element of the vector (“Mexican”), the second element of ‘Ethnicity’ to the second element of the vector (“Filipino”). The short vector is then recycled so now the third element of ‘Ethnicity’ is compared to the first element of the vector (“Mexican”), the fourth element of ‘Ethnicity’ to the second element of the vector (“Filipino”), and so on.\nInspect the differences in how may rows these lines of code produce\n\nsoldiers %&gt;% \n  filter(Ethnicity %in% c(\"Mexican\", \"Filipino\"))\n\nsoldiers %&gt;% \n  filter(Ethnicity == c(\"Mexican\", \"Filipino\"))\n\nRun this code chunk line by line. Inspect the differences.\n\n# Create a data frame\ndf &lt;- data.frame(\n  Ethnicity = c(\"Mexican\", \"Filipino\", \"Italian\", \"Mexican\", \"Italian\", \"Filipino\"),\n  Name = c(\"John\", \"Maria\", \"Luigi\", \"Carlos\", \"Francesco\", \"Jose\"),\n  stringsAsFactors = FALSE\n)\n\n# Investigate the data frame\ndf\n\n# Filter using %in%\ndf %&gt;% filter(Ethnicity %in% c(\"Mexican\", \"Filipino\"))\n\n# Filter using ==\ndf %&gt;% filter(Ethnicity == c(\"Mexican\", \"Filipino\"))"
  },
  {
    "objectID": "day_1_dplyr.html#summarise",
    "href": "day_1_dplyr.html#summarise",
    "title": "dplyr",
    "section": "2.3 summarise()",
    "text": "2.3 summarise()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nCalculate the mean and standard deviation of footlength\n\n\nCode\nsoldiers %&gt;% summarise(\n  footlength_avg = mean(footlength),\n  footlength_sd = sd(footlength))\n\n\n\n\n\nCalculate the median and interquartile range of earlength\n\n\nHINT\n\nuse the IQR() function\n\n\n\nCode\nsoldiers %&gt;% \n  summarise(\n    earlength_median = median(earlength),\n    earlength_iqr = IQR(earlength))\n\n\n\n\n\nCount the number of rows where WritingPreference is equal to “Right hand”\n\n\nCode\nsoldiers %&gt;%  \n  summarise(\n    n_righthanded = sum(WritingPreference == \"Right hand\"))\n\n\n\n\n\n\nHow old is the oldest soldier?\n\n\nHINT if you can’t work out why get an NA value\n\nMany Base R functions, including mean(), does not ignore NA values by default. This means that if the vector contains an NA value the result will be NA. Is this a good or bad thing?\nYou can set the argument na.rm = TRUE, to ignore missing values.\n\n\n\nCode\nsoldiers %&gt;% \n  summarise(\n    age_max = max(age, na.rm = TRUE))\n\n\n\n\n\n\nCalculate the mean weight of the Females\n\n\nHINT if you can’t work out why get an NA value\n\nMany Base R functions, including mean(), does not ignore NA values by default. This means that if the vector contains an NA value the result will be NA. Is this a good or bad thing?\nYou can set the argument na.rm = TRUE, to ignore missing values.\n\n\n\nCode\nsoldiers %&gt;% \n  filter(sex == \"Female\") %&gt;% \n  summarise(\n    weight_avg = mean(weightkg, na.rm = TRUE))\n\n\n\n\n\nCalculate the range in weight (max-min) within Males\n\n\nCode\nsoldiers %&gt;% \n  filter(sex == \"Male\") %&gt;% \n  summarise(\n    weight_range = max(weightkg, na.rm = TRUE)-min(weightkg, na.rm = TRUE))"
  },
  {
    "objectID": "day_1_dplyr.html#group_by-and-arrange",
    "href": "day_1_dplyr.html#group_by-and-arrange",
    "title": "dplyr",
    "section": "2.4 group_by() and arrange()",
    "text": "2.4 group_by() and arrange()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nCalculate the mean and sd of weightkg and age for all Installations\n\n\nCode\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(weight_avg = mean(weightkg, na.rm = TRUE),\n            weight_sd = sd(weightkg, na.rm = TRUE),\n            age_avg = mean(age, na.rm = TRUE),\n            age_sd = sd(age, na.rm = TRUE))\n\n\n\n\n\nCalculate the mean and sd of weightkg and age for all Installations for both sexes\n\n\nCode\nsoldiers %&gt;% \n  group_by(Installation, sex) %&gt;% \n  summarise(weight_avg = mean(weightkg, na.rm = TRUE),\n            weight_sd = sd(weightkg, na.rm = TRUE),\n            age_avg = mean(age, na.rm = TRUE),\n            age_sd = sd(age, na.rm = TRUE))\n\n\n\n\n\nCalcualate the average height for each Installation and count the number of missing values within each Installation\n\n\n\n\n\n\nHint\n\n\n\n\n\nTo count missings, use the functions sum() and is.na()\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)))\n\n\n\n\n\nAs before, but now also add the number of observations (rows) within each Installation\n\n\n\n\n\n\nHint\n\n\n\n\n\nUse n()\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)),\n            n = n())\n\n\n\n\n\nAs before, but now arrange the output after number of soldiers at each Installation in descending order.\n\n\nCode\nsoldiers %&gt;% \n  group_by(Installation) %&gt;% \n  summarise(height_avg = mean(Heightin, na.rm = TRUE),\n            height_n_miss = sum(is.na(Heightin)),\n            n = n()) %&gt;% \n  arrange(desc(n))"
  },
  {
    "objectID": "day_1_dplyr.html#mutate",
    "href": "day_1_dplyr.html#mutate",
    "title": "dplyr",
    "section": "2.5 mutate()",
    "text": "2.5 mutate()\nRestart R. (Click Session -&gt; Restart R)\nLoad the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\n\nLoad the soldiersdata and assign it to an object called soldiers\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\n\n\n\nAdd a column called heightcm with the height of the soldiers in cm\n\nUpdate the soldiers dataset with the new variable\nplace the new variable after Heightin\n\n\n\nCode\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    heightcm = Heightin * 2.54,\n    .after = Heightin)\n\n\n\n\n\n\nUpdate the weightkg column to kg instead of kg*10\n\nUpdate the soldiers dataset with the new weightkg column\n\n\n\nCode\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    weightkg = weightkg/10\n    )\n\n\n\n\n\n\nAdd a column called BMI with the Body mass index (BMI) of the soldiers\nBMI\n\nUpdate the soldiers dataset to with the new variable\nplace the new variable after weightkg\n\n\n\nCode\nsoldiers &lt;- soldiers %&gt;% \n  mutate(BMI = weightkg/(heightcm/100)^2,\n         .after = weightkg)\n\n\n\n\n\n\nAdd a column called obese that contains the value TRUE if BMI is &gt; 30\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    obese = if_else(BMI &gt; 30, TRUE, FALSE),\n    .before = 1 # This line code just places the variable at the front\n  )\n\n# OR\n\nsoldiers %&gt;% \n  mutate(\n    obese = BMI &gt; 30,\n    .before = 1 # This line code just places the variable at the front\n  )\n\n\n\n\n\n\nInspect the below table from Wikipedia\n\n\n\n\n\nCategory\nBMI (kg/m2)\n\n\n\n\nUnderweight (Severe thinness)\n&lt; 16.0\n\n\nUnderweight (Moderate thinness)\n16.0 – 16.9\n\n\nUnderweight (Mild thinness)\n17.0 – 18.4\n\n\nNormal range\n18.5 – 24.9\n\n\nOverweight (Pre-obese)\n25.0 – 29.9\n\n\nObese (Class I)\n30.0 – 34.9\n\n\nObese (Class II)\n35.0 – 39.9\n\n\nObese (Class III)\n&gt;= 40.0\n\n\n\n\n\n\n\n\n\nCreate the variable category that tells us whether the soldiers are “Underweight”, “Normal range”, “Overweight”, or “Obese”\n\nUpdate the soldiers dataset with the new variable\nplace the new variable after BMI\n\n\n\n\n\n\n\n\nHint 1\n\n\n\n\n\nUse case_when()\n\n\n\n\n\n\n\n\n\nHint 2\n\n\n\n\n\n\nsoldiers %&gt;% \n  mutate(\n    category = ????\n    )\n\n\n\n\n\n\n\n\n\n\nHint 3\n\n\n\n\n\n\nsoldiers %&gt;% \n  mutate(\n    category = case_when(\n      #TEST HERE ~ OUTPUT, \n      #TEST HERE ~ OUTPUT,\n      #TEST HERE ~ OUTPUT,\n      #.default = OUTPUT\n    )\n    )\n\n\n\n\n\n\nCode\nsoldiers &lt;- soldiers %&gt;% \n  mutate(\n    category = case_when(\n      BMI &lt; 18.5 ~ \"Underweight\",\n      BMI &lt; 25   ~ \"Normal range\",\n      BMI &lt; 30   ~ \"Overweight\",\n      BMI &gt;= 30  ~ \"Obese\",\n      .default = NA),\n    .after = BMI\n    )"
  },
  {
    "objectID": "day_1_dplyr.html#count",
    "href": "day_1_dplyr.html#count",
    "title": "dplyr",
    "section": "2.6 count()",
    "text": "2.6 count()\nFor simple counting count() is faster than summarise(n = n()) or mutate(n = n())\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count()\n\n\n\nANSWER\n\ncount() works like summarise(n = n())\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count(cut)\n\n\n\nAnswer\n# The code is equivalent to:\ndiamonds %&gt;% group_by(cut) %&gt;% summarise(n = n())\n\n# OR\n\ndiamonds %&gt;% summarise(n = n(), .by = cut)\n\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  count(cut, color)\n\n\n\nAnswer\n# The code is equivalent to:\ndiamonds %&gt;% group_by(cut, color) %&gt;% summarise(n = n())\n\n# OR\n\ndiamonds %&gt;% summarise(n = n(), .by = c(cut, color))\n\n\n# However, notice that the first solution returns a grouped tibble\n\n\n\n\n\nWhat is this code equivalent to?\n\ndiamonds %&gt;% \n  add_count()\n\n\n\nANSWER\n\nadd_count() works like mutate(n = n())\n\n\n\n\nCount the number of diamonds within each type of cut and calculate the percentage of each cut\n\n\nCode\ndiamonds %&gt;% \n  count(cut) %&gt;% \n  mutate(percent = n/sum(n)*100)\n\n\n\n\n\nInspect the output of this code. What is going wrong?\n\ndiamonds %&gt;% \n  group_by(cut) %&gt;% \n  count() %&gt;% \n  mutate(percent = n/sum(n)*100)\n\n# A tibble: 5 × 3\n# Groups:   cut [5]\n  cut           n percent\n  &lt;ord&gt;     &lt;int&gt;   &lt;dbl&gt;\n1 Fair       1610     100\n2 Good       4906     100\n3 Very Good 12082     100\n4 Premium   13791     100\n5 Ideal     21551     100"
  },
  {
    "objectID": "day_1_other.html",
    "href": "day_1_other.html",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "In this section we will explore a few other functions that you most likely are going to need.\n\npivot_wider() and pivot_longer()\n_join()\nacross()\n\n\n\n\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\n\n\n\n\n\nIn the realm of data science, it’s common to encounter data in what we call a “wide” format. To visualize this, imagine that each measurement of the same attribute is spread across multiple columns instead of being listed down in rows. Consider a scenario where we record a person’s weight at different intervals; in the wide format, we might see individual columns dedicated to each time point, like weightkg_week0, weightkg_week10 and so forth. Essentially, the column labels often carry dual information: the attribute (in this case, ‘weight’) and the condition or time (like ‘week0’ or ‘week10’).\nOften, data is inputted in this wide format for convenience, as it visually follows the chronological order of data collection or event occurrence. However, in the practice of data science, it’s generally more efficient to work with data in what we call a “long” format.\nIn long format, the data is structured such that each row is a unique observation or instance, and each column represents a unique variable or attribute. Continuing with the weight example, instead of having separate columns for each week’s weight (weightkg_week0, weightkg_week10), we would have separate rows for each weight measurement, with a column for the weight (weightkg) and another column for the time point (week).\nThe long format, also known as “tidy” data, provides a systematic and consistent structure, allowing us to work with data more effectively. Plus, many functions and packages in R, such as the popular ggplot2 for data visualization, are designed to work optimally with this long format.\nBut how do we move from wide format to long format? And vice versa? This is where the pivot_longer() and pivot_wider() functions from the tidyverse in R come into play.\n\n\n\nThe code creates a made-up data set. You dont need to understand the code.\n\nIs the data frame in a wide or long format? How can you tell?\n\n\nset.seed(1)\n\nweight_data &lt;- tibble(\n  id = 1:100,\n  sex = sample(c(\"Male\", \"Female\"), size = 100, replace = TRUE),\n  weightkg_week0 = rnorm(100, mean = 95, sd = 5)) %&gt;% \n  \n  # Mean wiegh more than women\n  mutate(\n    weightkg_week0 = if_else(\n      sex == \"Male\", weightkg_week0 * rnorm(100, mean = 1.15, sd = 0.3),\n      weightkg_week0\n    )\n  ) %&gt;% \n  \n  # Weight change over weeks\n  mutate(\n    weightkg_week1 = rnorm(100, mean = weightkg_week0*0.96, sd = 0.5), \n    weightkg_week2 = rnorm(100, mean = weightkg_week1*0.97, sd = 0.5),\n    weightkg_week3 = rnorm(100, mean = weightkg_week2*0.98, sd = 0.5), \n    weightkg_week4 = rnorm(100, mean = weightkg_week3*0.99, sd = 0.5),\n    weightkg_week5 = rnorm(100, mean = weightkg_week4, sd = 0.5))\n  \n\nweight_data\n\n\n\n\n\nThis exercise is only here to show you how troublesome it can be to work with data in a wide format. You don’t need to write all the code.\n\n\nCode\nweight_data %&gt;% \n  group_by(sex) %&gt;% \n  summarise(week0 = mean(weightkg_week0),\n            week1 = mean(weightkg_week1),\n            # etc. etc.\n            )\n\n\n\n\n\n\n\nThe pivot_longer() function takes wide format data and makes it longer by increasing the number of rows and decreasing the number of columns. For example, it can take our weight data from multiple columns (weightkg_week0, weightkg_week10) and collapse them into two columns: one for weight and one for timepoint.\n\n\n\n\n\nCode\n?pivot_longer\n\n\n\nWhat does this line in the help file mean?\ncols &lt;tidy-select&gt; Columns to pivot into longer format. ::: {.callout collapse=true} #### Answer This means that you use all the tidyselect functions that you also use with select() when you tell R what columns you to pivot into a longer format. :::\nWhat does the names_to and values_to arguments do?\n\n\n\n\n\n\n\nCode\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"))\n\nweight_data_long\n\n\n\n\n\n\n\n\nCode\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"),\n               names_to = \"week\",\n               values_to = \"weightkg\")\nweight_data_long\n\n\nWe will fix the values in the week column later. For now we are happy with the long data format.\n\n\n\n\n\nassign you results to an object called weight_data_long_sum\n\n\n\nCode\nweight_data_long_sum &lt;- weight_data_long %&gt;% \n  group_by(sex, week) %&gt;% \n  summarise(mean = mean(weightkg))\n\nweight_data_long_sum\n\n\n\n\n\n\n\nThe pivot_wider() function takes long format data and makes it wider by decreasing the number of rows and increasing the number of columns. For instance, it can spread our long format weight data back into multiple columns for each week’s weight.\n\n\n\n\n\nCode\n?pivot_wider\n\n\n\n\n\n\n\n\nCode\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"week\",\n              values_from = mean)\n\n\n# A tibble: 2 × 7\n# Groups:   sex [2]\n  sex    weightkg_week0 weightkg_week1 weightkg_week2 weightkg_week3\n  &lt;chr&gt;           &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Female           94.7           90.9           88.3           86.4\n2 Male            113.           108.           105.           103. \n# ℹ 2 more variables: weightkg_week4 &lt;dbl&gt;, weightkg_week5 &lt;dbl&gt;\n\n\n\n\n\n\n\n\nCode\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"sex\",\n              values_from = mean)\n\n\n# A tibble: 6 × 3\n  week           Female  Male\n  &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n1 weightkg_week0   94.7  113.\n2 weightkg_week1   90.9  108.\n3 weightkg_week2   88.3  105.\n4 weightkg_week3   86.4  103.\n5 weightkg_week4   85.5  102.\n6 weightkg_week5   85.4  102.\n\n\n\n\n\n\n\n\n\n\nChange it into three variables:\n\nsex (“female”, “male”)\npregnant (“yes”, “no”)\ncount, which is a non-negative integer representing the number of observations.\n\n\npreg &lt;- tribble(\n  ~pregnant, ~male, ~female,\n  \"yes\", NA, 10,\n  \"no\", 20, 12\n)\npreg\n\n\n\nCode\npreg %&gt;%\n  pivot_longer(c(male, female), names_to = \"sex\", values_to = \"count\")\n\n\n\n\n\n\ntable2 is a dataset that is load with the tidyverse. Try to type table2 in the console.\ntable2 displays the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000. The data contains values associated with four variables (country, year, cases, and population).\nChange table2 into the output below:\n\n\nCode\ntable2 %&gt;% \n  pivot_wider(names_from = type,\n              values_from = count)\n\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\n\n\n\n\nThe join functions in the dplyr package in R are used to combine two dataframes based on a shared key (or set of keys). There are several types of joins, each with their own use cases:\n\ninner_join(): This returns only the rows in which the key exists in both dataframes.\nleft_join(): This returns all the rows from the first (left-hand) dataframe, and any rows from the second (right-hand) dataframe that match. If there’s no match, the columns for the right-hand dataframe will be filled with NA.\nright_join(): This is the reverse of left_join(). It returns all the rows from the second (right-hand) dataframe, and any rows from the first (left-hand) dataframe that match. If there’s no match, the columns for the left-hand dataframe will be filled with NA.\nfull_join(): This returns all rows from both dataframes. If there’s no match, the columns for the other dataframe will be filled with NA.\nsemi_join(): This returns all rows from the first (left-hand) dataframe where there are matching values in the second dataframe, but it doesn’t add any columns from the second dataframe.\nanti_join(): This returns all rows from the first (left-hand) dataframe where there are not matching values in the second dataframe. It also doesn’t add any columns from the second dataframe.\n\nThese functions are essential tools for merging and manipulating data in R, allowing you to effectively combine and cross-reference information from multiple dataframes.\n\nRead the slides from Day 1 to see code examples.\n\nRun this code to get example data\n\nset.seed(1)\nA &lt;- tibble(id = c(1:5, 7:8),\n            sex = sample(c(\"Male\", \"Female\"), 7, replace = TRUE),\n            nr_of_orders = sample(5:10, 7, replace = TRUE))\nB &lt;- tibble(id = 1:6,\n            age = sample(25:75, 6),\n            total_order_value = sample(5:50, 6)*100)\n\n\n\n\n\n\nCode\nanti_join(A, B)\nanti_join(B, A)\n\n\n\n\n\n\n\nsemi_join(A, B)\n\n\n\n\n\n\n\nCode\nleft_join(A, B)\n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  arrange(id)\n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) \n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) %&gt;% \n  group_by(sex) %&gt;% \n  summarise(\n    mean_avg_order_value = mean(avg_order_value, na.rm = TRUE)\n  )\n\n\n\n\n\n\n\nRestart R Load the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\nLoad the soldiers data set and assign it to an object called soliders\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\nThe across() function is part of the dplyr package in R and is used for applying a function (or functions) across multiple columns in a dataframe.\nacross() is particularly useful when you want to perform the same operation on multiple columns but don’t want to write out each operation individually. It works in combination with mutate() and summarise().\nVery importantly the .cols argument allows you to use the tidyselect functions that you are now familiar with.\nHere’s a basic example of its usage.\nLet’s say we want to take the mean of weightkg and earlength in the soldiers dataframe.\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = mean)                         # What function to apply - Notice that mean is not written mean()\n    )\n\nYou can see that the mean of weightkg is NA. This is because is has missings values and mean() defaults to na.rm = FALSE. If we want to change this, we have to write a slightly more complicated code. In the following code you will find two new things:\n\n~ You tell R - “I am going to show you a function”\n.x You tell R - “Put the column that you have selected here”\n\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ mean(.x, na.rm = TRUE))     # What function to apply\n    )\n\n.x can also be used outside of a function. Lets say we want to double all the values instead of taking the mean\n\nsoldiers %&gt;% \n  mutate(across(                         # Notice now we use mutate() instead of summarise()\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ .x * 2                           \n    )) \n\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(across(\n    .cols = contains(\"circumference\"), \n    .fns = ~.x *0.393701))\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1      1017 151168-2263 Male      41 &lt;NA&gt;                   1 Right hand       \n 2      4775 210475-1945 Man       35 &lt;NA&gt;                   1 Left hand        \n 3      2177 290568-1069 Male      42 &lt;NA&gt;                   2 Left hand        \n 4      5026 121283-0610 Female    26 &lt;NA&gt;                   2 Right hand       \n 5      1533 090189-0422 Woman     21 Mexican                3 Right hand       \n 6      4567 020487-3860 Female    23 &lt;NA&gt;                   1 Right hand       \n 7      2347 041287-8106 Female    22 Caribbean Islan…       2 Right hand       \n 8       270 130765-7114 Woman     45 &lt;NA&gt;                   1 Right hand       \n 9      4050 020166-4680 Female    44 &lt;NA&gt;                   2 Left hand        \n10      5307 101188-3148 Female    21 &lt;NA&gt;                   1 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nYou can also target columns based on their type (logical, double, character, factor, numeric). Using the functions is.logical(), is.double(), etc.. However, you need to use them inside the function where()\nIn this example, we change all character columns to factors (You will learn about the column types on day 3). where(is.character) selects the columns where the condition is true (i.e., the column is character), and as.factor is the function that gets applied to these columns. As a result, all character columns get converted to factor.\n\nsoldiers %&gt;% \n  mutate(across(\n    .cols = where(is.character), # What columns to target - notice is.character is not written is.charater()\n    .fns = as.factor             # What function to apply - notice as.factor is written without ()                           \n    )) \n\n\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~.x+1.5\n    )\n  )\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1     1018. 151168-2263 Male    42.5 &lt;NA&gt;                 2.5 Right hand       \n 2     4776. 210475-1945 Man     36.5 &lt;NA&gt;                 2.5 Left hand        \n 3     2178. 290568-1069 Male    43.5 &lt;NA&gt;                 3.5 Left hand        \n 4     5028. 121283-0610 Female  27.5 &lt;NA&gt;                 3.5 Right hand       \n 5     1534. 090189-0422 Woman   22.5 Mexican              4.5 Right hand       \n 6     4568. 020487-3860 Female  24.5 &lt;NA&gt;                 2.5 Right hand       \n 7     2348. 041287-8106 Female  23.5 Caribbean Islan…     3.5 Right hand       \n 8      272. 130765-7114 Woman   46.5 &lt;NA&gt;                 2.5 Right hand       \n 9     4052. 020166-4680 Female  45.5 &lt;NA&gt;                 3.5 Left hand        \n10     5308. 101188-3148 Female  22.5 &lt;NA&gt;                 2.5 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nStandardizing a variable is a statistical process that transforms the variable’s values to have a mean of 0 and a standard deviation of 1. This is often used often used within machinelearning.\nThe most common way of standardizing a values is to subtract the mean from each value and divide by the standard deviation.\nThe standard score (or z-score) of a value x is calculated as:\n\\[z = (x - μ) / σ\\]\n\n\n\n\n\n\nHint\n\n\n\n\n\nIf we would target just a single columns the code could be\n\nsoldiers %&gt;% \n  mutate(\n    weightkg = (weightkg-mean(weightkg, na.rm = TRUE))/sd(weightkg, na.rm=TRUE)\n  )\n\n\n\n\n\n\nShow me the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~(.x - mean(.x, na.rm = TRUE))/sd(.x, na.rm = TRUE)\n    )\n  )\n\n\n\n\n\n\nacross() can do much more than this. For instance, it can invoke multiple functions simultaneously in a single call, like calculating the mean and standard deviation of chosen variables. Or change the names of the newly created columns. Read more here"
  },
  {
    "objectID": "day_1_other.html#getting-started-for-now",
    "href": "day_1_other.html#getting-started-for-now",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(here)"
  },
  {
    "objectID": "day_1_other.html#wide-and-long-data-formats",
    "href": "day_1_other.html#wide-and-long-data-formats",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "In the realm of data science, it’s common to encounter data in what we call a “wide” format. To visualize this, imagine that each measurement of the same attribute is spread across multiple columns instead of being listed down in rows. Consider a scenario where we record a person’s weight at different intervals; in the wide format, we might see individual columns dedicated to each time point, like weightkg_week0, weightkg_week10 and so forth. Essentially, the column labels often carry dual information: the attribute (in this case, ‘weight’) and the condition or time (like ‘week0’ or ‘week10’).\nOften, data is inputted in this wide format for convenience, as it visually follows the chronological order of data collection or event occurrence. However, in the practice of data science, it’s generally more efficient to work with data in what we call a “long” format.\nIn long format, the data is structured such that each row is a unique observation or instance, and each column represents a unique variable or attribute. Continuing with the weight example, instead of having separate columns for each week’s weight (weightkg_week0, weightkg_week10), we would have separate rows for each weight measurement, with a column for the weight (weightkg) and another column for the time point (week).\nThe long format, also known as “tidy” data, provides a systematic and consistent structure, allowing us to work with data more effectively. Plus, many functions and packages in R, such as the popular ggplot2 for data visualization, are designed to work optimally with this long format.\nBut how do we move from wide format to long format? And vice versa? This is where the pivot_longer() and pivot_wider() functions from the tidyverse in R come into play.\n\n\n\nThe code creates a made-up data set. You dont need to understand the code.\n\nIs the data frame in a wide or long format? How can you tell?\n\n\nset.seed(1)\n\nweight_data &lt;- tibble(\n  id = 1:100,\n  sex = sample(c(\"Male\", \"Female\"), size = 100, replace = TRUE),\n  weightkg_week0 = rnorm(100, mean = 95, sd = 5)) %&gt;% \n  \n  # Mean wiegh more than women\n  mutate(\n    weightkg_week0 = if_else(\n      sex == \"Male\", weightkg_week0 * rnorm(100, mean = 1.15, sd = 0.3),\n      weightkg_week0\n    )\n  ) %&gt;% \n  \n  # Weight change over weeks\n  mutate(\n    weightkg_week1 = rnorm(100, mean = weightkg_week0*0.96, sd = 0.5), \n    weightkg_week2 = rnorm(100, mean = weightkg_week1*0.97, sd = 0.5),\n    weightkg_week3 = rnorm(100, mean = weightkg_week2*0.98, sd = 0.5), \n    weightkg_week4 = rnorm(100, mean = weightkg_week3*0.99, sd = 0.5),\n    weightkg_week5 = rnorm(100, mean = weightkg_week4, sd = 0.5))\n  \n\nweight_data\n\n\n\n\n\nThis exercise is only here to show you how troublesome it can be to work with data in a wide format. You don’t need to write all the code.\n\n\nCode\nweight_data %&gt;% \n  group_by(sex) %&gt;% \n  summarise(week0 = mean(weightkg_week0),\n            week1 = mean(weightkg_week1),\n            # etc. etc.\n            )"
  },
  {
    "objectID": "day_1_other.html#pivot_longer",
    "href": "day_1_other.html#pivot_longer",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The pivot_longer() function takes wide format data and makes it longer by increasing the number of rows and decreasing the number of columns. For example, it can take our weight data from multiple columns (weightkg_week0, weightkg_week10) and collapse them into two columns: one for weight and one for timepoint.\n\n\n\n\n\nCode\n?pivot_longer\n\n\n\nWhat does this line in the help file mean?\ncols &lt;tidy-select&gt; Columns to pivot into longer format. ::: {.callout collapse=true} #### Answer This means that you use all the tidyselect functions that you also use with select() when you tell R what columns you to pivot into a longer format. :::\nWhat does the names_to and values_to arguments do?\n\n\n\n\n\n\n\nCode\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"))\n\nweight_data_long\n\n\n\n\n\n\n\n\nCode\nweight_data_long &lt;- weight_data %&gt;% \n  pivot_longer(cols = starts_with(\"weight\"),\n               names_to = \"week\",\n               values_to = \"weightkg\")\nweight_data_long\n\n\nWe will fix the values in the week column later. For now we are happy with the long data format.\n\n\n\n\n\nassign you results to an object called weight_data_long_sum\n\n\n\nCode\nweight_data_long_sum &lt;- weight_data_long %&gt;% \n  group_by(sex, week) %&gt;% \n  summarise(mean = mean(weightkg))\n\nweight_data_long_sum"
  },
  {
    "objectID": "day_1_other.html#pivot_wider",
    "href": "day_1_other.html#pivot_wider",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The pivot_wider() function takes long format data and makes it wider by decreasing the number of rows and increasing the number of columns. For instance, it can spread our long format weight data back into multiple columns for each week’s weight.\n\n\n\n\n\nCode\n?pivot_wider\n\n\n\n\n\n\n\n\nCode\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"week\",\n              values_from = mean)\n\n\n# A tibble: 2 × 7\n# Groups:   sex [2]\n  sex    weightkg_week0 weightkg_week1 weightkg_week2 weightkg_week3\n  &lt;chr&gt;           &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Female           94.7           90.9           88.3           86.4\n2 Male            113.           108.           105.           103. \n# ℹ 2 more variables: weightkg_week4 &lt;dbl&gt;, weightkg_week5 &lt;dbl&gt;\n\n\n\n\n\n\n\n\nCode\nweight_data_long_sum %&gt;% \n  pivot_wider(names_from = \"sex\",\n              values_from = mean)\n\n\n# A tibble: 6 × 3\n  week           Female  Male\n  &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;\n1 weightkg_week0   94.7  113.\n2 weightkg_week1   90.9  108.\n3 weightkg_week2   88.3  105.\n4 weightkg_week3   86.4  103.\n5 weightkg_week4   85.5  102.\n6 weightkg_week5   85.4  102."
  },
  {
    "objectID": "day_1_other.html#more-examples-of-pivot_wider-and-pivot_longer",
    "href": "day_1_other.html#more-examples-of-pivot_wider-and-pivot_longer",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Change it into three variables:\n\nsex (“female”, “male”)\npregnant (“yes”, “no”)\ncount, which is a non-negative integer representing the number of observations.\n\n\npreg &lt;- tribble(\n  ~pregnant, ~male, ~female,\n  \"yes\", NA, 10,\n  \"no\", 20, 12\n)\npreg\n\n\n\nCode\npreg %&gt;%\n  pivot_longer(c(male, female), names_to = \"sex\", values_to = \"count\")\n\n\n\n\n\n\ntable2 is a dataset that is load with the tidyverse. Try to type table2 in the console.\ntable2 displays the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000. The data contains values associated with four variables (country, year, cases, and population).\nChange table2 into the output below:\n\n\nCode\ntable2 %&gt;% \n  pivot_wider(names_from = type,\n              values_from = count)\n\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583"
  },
  {
    "objectID": "day_1_other.html#join",
    "href": "day_1_other.html#join",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "The join functions in the dplyr package in R are used to combine two dataframes based on a shared key (or set of keys). There are several types of joins, each with their own use cases:\n\ninner_join(): This returns only the rows in which the key exists in both dataframes.\nleft_join(): This returns all the rows from the first (left-hand) dataframe, and any rows from the second (right-hand) dataframe that match. If there’s no match, the columns for the right-hand dataframe will be filled with NA.\nright_join(): This is the reverse of left_join(). It returns all the rows from the second (right-hand) dataframe, and any rows from the first (left-hand) dataframe that match. If there’s no match, the columns for the left-hand dataframe will be filled with NA.\nfull_join(): This returns all rows from both dataframes. If there’s no match, the columns for the other dataframe will be filled with NA.\nsemi_join(): This returns all rows from the first (left-hand) dataframe where there are matching values in the second dataframe, but it doesn’t add any columns from the second dataframe.\nanti_join(): This returns all rows from the first (left-hand) dataframe where there are not matching values in the second dataframe. It also doesn’t add any columns from the second dataframe.\n\nThese functions are essential tools for merging and manipulating data in R, allowing you to effectively combine and cross-reference information from multiple dataframes.\n\nRead the slides from Day 1 to see code examples.\n\nRun this code to get example data\n\nset.seed(1)\nA &lt;- tibble(id = c(1:5, 7:8),\n            sex = sample(c(\"Male\", \"Female\"), 7, replace = TRUE),\n            nr_of_orders = sample(5:10, 7, replace = TRUE))\nB &lt;- tibble(id = 1:6,\n            age = sample(25:75, 6),\n            total_order_value = sample(5:50, 6)*100)\n\n\n\n\n\n\nCode\nanti_join(A, B)\nanti_join(B, A)\n\n\n\n\n\n\n\nsemi_join(A, B)\n\n\n\n\n\n\n\nCode\nleft_join(A, B)\n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  arrange(id)\n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) \n\n\n\n\n\n\n\n\nCode\nfull_join(A,B) %&gt;% \n  mutate(\n    avg_order_value = total_order_value/nr_of_orders) %&gt;% \n  group_by(sex) %&gt;% \n  summarise(\n    mean_avg_order_value = mean(avg_order_value, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "day_1_other.html#across",
    "href": "day_1_other.html#across",
    "title": "Other data wrangling functions",
    "section": "",
    "text": "Restart R Load the tidyverse and the here package\n\n\nCode\nlibrary(tidyverse)\nlibrary(here)\n\n\nLoad the soldiers data set and assign it to an object called soliders\n\n\nCode\nsoldiers &lt;- read_csv2(here(\"raw_data\", \"soldiers.csv\"))\n\n\nThe across() function is part of the dplyr package in R and is used for applying a function (or functions) across multiple columns in a dataframe.\nacross() is particularly useful when you want to perform the same operation on multiple columns but don’t want to write out each operation individually. It works in combination with mutate() and summarise().\nVery importantly the .cols argument allows you to use the tidyselect functions that you are now familiar with.\nHere’s a basic example of its usage.\nLet’s say we want to take the mean of weightkg and earlength in the soldiers dataframe.\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = mean)                         # What function to apply - Notice that mean is not written mean()\n    )\n\nYou can see that the mean of weightkg is NA. This is because is has missings values and mean() defaults to na.rm = FALSE. If we want to change this, we have to write a slightly more complicated code. In the following code you will find two new things:\n\n~ You tell R - “I am going to show you a function”\n.x You tell R - “Put the column that you have selected here”\n\n\nsoldiers %&gt;% \n  summarise(across(\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ mean(.x, na.rm = TRUE))     # What function to apply\n    )\n\n.x can also be used outside of a function. Lets say we want to double all the values instead of taking the mean\n\nsoldiers %&gt;% \n  mutate(across(                         # Notice now we use mutate() instead of summarise()\n    .cols = c(\"weightkg\", \"earlength\"),  # What columns to target\n    .fns = ~ .x * 2                           \n    )) \n\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(across(\n    .cols = contains(\"circumference\"), \n    .fns = ~.x *0.393701))\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1      1017 151168-2263 Male      41 &lt;NA&gt;                   1 Right hand       \n 2      4775 210475-1945 Man       35 &lt;NA&gt;                   1 Left hand        \n 3      2177 290568-1069 Male      42 &lt;NA&gt;                   2 Left hand        \n 4      5026 121283-0610 Female    26 &lt;NA&gt;                   2 Right hand       \n 5      1533 090189-0422 Woman     21 Mexican                3 Right hand       \n 6      4567 020487-3860 Female    23 &lt;NA&gt;                   1 Right hand       \n 7      2347 041287-8106 Female    22 Caribbean Islan…       2 Right hand       \n 8       270 130765-7114 Woman     45 &lt;NA&gt;                   1 Right hand       \n 9      4050 020166-4680 Female    44 &lt;NA&gt;                   2 Left hand        \n10      5307 101188-3148 Female    21 &lt;NA&gt;                   1 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nYou can also target columns based on their type (logical, double, character, factor, numeric). Using the functions is.logical(), is.double(), etc.. However, you need to use them inside the function where()\nIn this example, we change all character columns to factors (You will learn about the column types on day 3). where(is.character) selects the columns where the condition is true (i.e., the column is character), and as.factor is the function that gets applied to these columns. As a result, all character columns get converted to factor.\n\nsoldiers %&gt;% \n  mutate(across(\n    .cols = where(is.character), # What columns to target - notice is.character is not written is.charater()\n    .fns = as.factor             # What function to apply - notice as.factor is written without ()                           \n    )) \n\n\n\n\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~.x+1.5\n    )\n  )\n\n\n# A tibble: 6,208 × 24\n   subjectid fake_cpr    sex      age Ethnicity        DODRace WritingPreference\n       &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;            \n 1     1018. 151168-2263 Male    42.5 &lt;NA&gt;                 2.5 Right hand       \n 2     4776. 210475-1945 Man     36.5 &lt;NA&gt;                 2.5 Left hand        \n 3     2178. 290568-1069 Male    43.5 &lt;NA&gt;                 3.5 Left hand        \n 4     5028. 121283-0610 Female  27.5 &lt;NA&gt;                 3.5 Right hand       \n 5     1534. 090189-0422 Woman   22.5 Mexican              4.5 Right hand       \n 6     4568. 020487-3860 Female  24.5 &lt;NA&gt;                 2.5 Right hand       \n 7     2348. 041287-8106 Female  23.5 Caribbean Islan…     3.5 Right hand       \n 8      272. 130765-7114 Woman   46.5 &lt;NA&gt;                 2.5 Right hand       \n 9     4052. 020166-4680 Female  45.5 &lt;NA&gt;                 3.5 Left hand        \n10     5308. 101188-3148 Female  22.5 &lt;NA&gt;                 2.5 Right hand       \n# ℹ 6,198 more rows\n# ℹ 17 more variables: Installation &lt;chr&gt;, Component &lt;chr&gt;, Branch &lt;chr&gt;,\n#   Heightin &lt;dbl&gt;, weightkg &lt;dbl&gt;, earlength &lt;dbl&gt;, footlength &lt;dbl&gt;,\n#   handlength &lt;dbl&gt;, handbreadth &lt;dbl&gt;, hipbreadth &lt;dbl&gt;, chestbreadth &lt;dbl&gt;,\n#   thighcircumference &lt;dbl&gt;, waistcircumference &lt;dbl&gt;,\n#   anklecircumference &lt;dbl&gt;, bicepscircumference &lt;dbl&gt;,\n#   calfcircumference &lt;dbl&gt;, span &lt;dbl&gt;\n\n\n\n\n\n\nStandardizing a variable is a statistical process that transforms the variable’s values to have a mean of 0 and a standard deviation of 1. This is often used often used within machinelearning.\nThe most common way of standardizing a values is to subtract the mean from each value and divide by the standard deviation.\nThe standard score (or z-score) of a value x is calculated as:\n\\[z = (x - μ) / σ\\]\n\n\n\n\n\n\nHint\n\n\n\n\n\nIf we would target just a single columns the code could be\n\nsoldiers %&gt;% \n  mutate(\n    weightkg = (weightkg-mean(weightkg, na.rm = TRUE))/sd(weightkg, na.rm=TRUE)\n  )\n\n\n\n\n\n\nShow me the code\nsoldiers %&gt;% \n  mutate(\n    across(\n      .cols = where(is.numeric),\n      .fns = ~(.x - mean(.x, na.rm = TRUE))/sd(.x, na.rm = TRUE)\n    )\n  )\n\n\n\n\n\n\nacross() can do much more than this. For instance, it can invoke multiple functions simultaneously in a single call, like calculating the mean and standard deviation of chosen variables. Or change the names of the newly created columns. Read more here"
  },
  {
    "objectID": "day_1_settting_up_your_course_project.html",
    "href": "day_1_settting_up_your_course_project.html",
    "title": "Setting up your course project",
    "section": "",
    "text": "1 Setting up your course project\nFollow these instructions step by step:\n\nStart a new project. Think about the name and where you place the project. You are going to be using this project a lot. (Important: project_and_folder_names_matter)\nCreate a folder in your project called raw_data\n\nCreate a folder in your project called clean_data\n\nCreate a folder in your project called scripts\n\nPlace the soldiers.csv file from ItsLearning in the raw_data folder\n\nCreate an R script (File -&gt; New File -&gt; R script), save it in the scripts folder and call it 01_import.R\n\nClose the R script you just created and leave it for now.\n\nThis file and folder structure is a basic setup that will work for most projects. We will return to this later today, and on day 4 you will learn how to improve this setup even further.\n\n\n\nDiscuss with you neighbor what the meaning of this madness can be about?\n\n\n\n\n\n2 Setting up your course project (continued)\n\n\n\n\n\n\nImportant\n\n\n\nYou should not do this before you have completed the wrangling exercises for select(), filter(), summarise(), group_by(), arrange(), and mutate()\n\n\nYou now have the skills to continue the work we started in Section 1.\nThis coming task is important for the rest of your course.\n\nAs you have noticed the soldiers dataset is not perfect when we load it, e.g., Height is measured in inches, weightkg is measured in Kg*10, etc..\nTherefore, we need to change a few things before we can continue our work with this data.\nIt is essential in datascience and research that this process is documented and reproducible.\n\n\n\nOpen the R script 01_import.R that you created in Section 1.\n\nFor the rest of this section you are going to work in this R script.\n\n \n\n\nWrite the necessary code to import the soldiers.csv file and update the data\nWrite comments and explain your code as you solve the steps below\n\nAdd heightcm (height in cm)\nFix weightkg\nExplore the sex variable and fix it\nAdd BMI\nAdd category (level of BMI)\nAdd race - Base the values in race on the description below\nRemove Heightin\nPlace the variables in an order that you like (use relocate())\nMake sure that all changes are assigned to soldiers. Your script should provide you with an updated version of soldiers in the environment pane.\n\n\n\n\n\n\n\nrace in soldiers\n\n\n\n\n\nDODRace is a variable in the soldiers dataset. The description is given below: \nDODRace – Department of Defense Race; a single digit indicating a subject’s self-reported preferred single race where selecting multiple races is not an option. This variable is intended to be comparable to the Defense Manpower Data Center demographic data. Where 1 = White, 2 = Black, 3 = Hispanic, 4 = Asian, 5 = Native American, 6 = Pacific Islander, 8 = Other"
  },
  {
    "objectID": "day_2_ggplot2_extras.html",
    "href": "day_2_ggplot2_extras.html",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "href": "day_2_ggplot2_extras.html#diving-deeper-into-ggplot2-extensions",
    "title": "Extra Material",
    "section": "",
    "text": "ggplot2 stands as a cornerstone for data visualization in R. But the richness of the R ecosystem extends far beyond its foundational tools. Complementing the core offerings of ggplot2 is a suite of powerful extension packages, each designed to elevate and refine your visualization experiences.\nIn this section, we’ll journey through three particularly impactful extensions: gganimate, ggiraph, and ggside.\n\n\n\n\n\n\nTwist!\n\n\n\nWhile our exploration in this section will be guided, it comes with a twist. We’ll be immersing ourselves in blogs and webpages from the broader R community. The aim? To prepare you for a future where you will explore the R ecosystem independently.\n\n\nHere is a brief introduction to three packages. Start with the one you find most interesting.\n\n\nBreathe life into your static plots by transforming them into animations. Whether you’re showcasing trends over time or simply adding a dynamic touch to your visuals, gganimate is your go-to tool.\n\n\n\n\n\n\n\n\nMake your plots interactive! With ggiraph, you can create hover-over effects, clickable elements, and other interactive features that make your plots more engaging and informative.\n\n\n\n\n\n\n\n\n\nExpand the canvas of your data stories by crafting marginal plots alongside your primary visualization. With ggside, you can seamlessly incorporate histograms, density plots, or boxplots directly adjacent to your main plot. Whether it’s enriching a scatterplot with marginal distributions or adding supplementary insights, ggside offers that extra dimension to your visual narratives."
  },
  {
    "objectID": "day_2_ggplot2_extras.html#gganimate-1",
    "href": "day_2_ggplot2_extras.html#gganimate-1",
    "title": "Extra Material",
    "section": "1 gganimate",
    "text": "1 gganimate\nMost packages have a webpage where the package and its core functions are introduced. Head the gganimate website and read the getting started section. Then continue to exercises here where we will practice using the soldiers dataset that you already know.\nYou need to install gganimate\n\n\n\n\n\n\nInstalling gganimate\n\n\n\n\n\n\ninstall.packages(\"gganimate\")\n\n\n\n\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(gganimate)  # Animate plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\nAnimate this plot so its shows difference between men and women\n\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)\n\n\n\n\n\nAssign the animation to an object\n\n\n\nCode\n# One option\nmy_animation &lt;- soldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  transition_states(sex,\n                    transition_length = 1,\n                    state_length = 2)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")\n\nmy_animation\n\n\n\n\n\nCode\n# Another option\nsoldiers %&gt;% \n  ggplot(aes(x = weightkg, y = Installation, fill = Installation, seq_along = sex))+\n  geom_boxplot(outlier.shape = NA,\n               alpha = 0.5)+\n  labs(title = \"Weight in Kgs of male and female soldiers\",\n       subtitle = \"Now showing {closest_state}\")+\n  transition_states(sex,\n                    transition_length = 0.5,\n                    state_length = 2)+\n  enter_fade()+\n  exit_fly()\n\n\n\n\n\nSave your animation in the plots folder you created earlier\n\n\nCode\nanim_save(\n    filename = here(\"plots\", \"my_animation.gif\"),\n    animation = my_animation\n  )\n\n\n\n\n\nOxboys data\nLoad thenlme package and examine the Oxboys dataset that it comes with.\nYou might need to install the nlme package first.\n\n\nCode\nlibrary(nlme)\nhead(Oxboys)\n?Oxboys\n\n\n\n\nCreate an animation that shows how height changes with age\n\nUse transition_reveal()\n\n\n\nCode\nOxboys %&gt;% \n  ggplot(aes(x = age, y = height))+\n  # geom_boxplot(fill = \"steelblue\", \n  #              alpha = 0.5, \n  #              width = 0.3,\n  #              outlier.shape = NA)+\n  geom_line(aes(group = Subject), color = \"grey\", alpha = 1)+\n  geom_point(aes(group = Subject))+\n  labs(x = \"Standardized age \\n(years)\",\n       y = \"Height\\n(cm)\")+\n  theme_classic()+\n  transition_reveal(age)"
  },
  {
    "objectID": "day_2_ggplot2_extras.html#ggiraph-1",
    "href": "day_2_ggplot2_extras.html#ggiraph-1",
    "title": "Extra Material",
    "section": "2 ggiraph",
    "text": "2 ggiraph\nAnother useful resource for learning R is blogposts. These are often written in a much more accesible language. For learning ggiraph we will use a blogpost written by Albert Rapp. Head to his blogpost about ggiraph and read it. You don’t need to read the sections about shinyapps. When you have done that continue to exercises below.\nYou need to install ggiraph.\n\n\n\n\n\n\nInstalling ggiraph\n\n\n\n\n\n\ninstall.packages(\"ggiraph\")\n\n\n\n\n\n\nLoad the tidyverse, here, ggiraph, patchwork, and the cleaned soldiers dataset\n\n\nCode\n# Load libraries\nlibrary(tidyverse)  # Data wrangling and plots\nlibrary(here)       # File control in project\nlibrary(ggiraph)    # Interactive plots\nlibrary(patchwork)  # Combining plots\n\n# Load the cleaned soldiers dataset\nsource(here(\"scripts\", \"01_import.R\"))\n\n\n\n\n\nExplore Fort Hood, Camp Arnold, and Fort Doughnut\n\nFilter you data to the three camps\nMake a interactive boxplot that shows the name of the installation\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nYou can use the base R functions paste() or paste0() to combine text and values in your tooltip.\nYou can also use glue() from the glue package, but you need to install that package first. In the blogpost Albert uses the glue() function.\n\n\n\n\n\n\n\n\n\nSize of your interactive plot\n\n\n\n\n\nWith the default options, the interactive plots tends to be oversized. Add this option to reduce it\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\n\n\nCode\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")))+\n  labs(y = NULL)+\n  theme_classic()\n\ngirafe(ggobj = my_plot)\n\n\n\n\nAdd an interactive geom_jitter layer.\n\nfacet the plot on sex\nMake a tooltip that gives you the subjectid, BMI, height, weight, biceps circumference, and waist circumference.\n\n\n\n\n\n\n\nHint line breaks\n\n\n\n\n\n“\\n” Gives you a line break\n\n\n\n\n\nCode\nmy_plot &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL)+\n  geom_boxplot_interactive(\n    aes(tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.3,\n    shape = 21\n  )+\n  theme_classic()\n\ngirafe(ggobj = my_plot,\n       options = list(opts_sizing(rescale = FALSE)))\n\n\n\n\nCreate another interactive plot with geom_jitter_interactive()\n\nCombine your new plot with the one you made above using patchwork\nSet the data_id argument to: data_id = subjectid for the points\nUse the options that Alfred suggested in his post (see tip below)\n\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))\n\n\n\n\n\n\nCode\nmy_plot_a &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = BMI, y = Installation, fill = Installation, ))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"BMI\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot_b &lt;- soldiers %&gt;% \n  filter(Installation %in% c(\"Fort Hood\", \"Camp Arnold\", \"Fort Doughnut\")) %&gt;% \n  ggplot(aes(x = waistcircumference, y = Installation, fill = Installation))+\n  facet_wrap(~sex, ncol = 1)+\n  labs(y = NULL,\n       x = NULL,\n       title = \"Waist circumference\")+\n  geom_boxplot_interactive(\n    aes(data_id = Installation,\n        tooltip = paste0(\"This is the \", Installation, \" installation\")),\n    outlier.shape = NA) +\n  geom_jitter_interactive(\n    aes(data_id = subjectid,\n        tooltip = paste0(\"Subjectid: \", subjectid,\n                         \"\\n BMI:   \", round(BMI), \" (\", category, \")\",\n                         \"\\nHeight: \", round(heightcm), \" cm\",\n                         \"\\nWeight: \", round(weightkg), \" kg\",\n                         \"\\nBiceps: \", round(bicepscircumference), \" mm\", \n                         \"\\nWaist:  \", round(waistcircumference), \" mm\")),\n    height = 0.2,\n    alpha = 0.5,\n    shape = 21\n  )+\n  theme_classic()\n\nmy_plot &lt;- my_plot_a + my_plot_b +\n  plot_layout(guides = \"collect\") &\n  theme(legend.position='bottom')\n\ngirafe(ggobj = my_plot,\n       options = list(\n         opts_hover(css = ''),\n         opts_hover_inv(css = \"opacity:0.2;\"), \n         opts_sizing(rescale = FALSE)\n  ))"
  },
  {
    "objectID": "day_3_factors.html",
    "href": "day_3_factors.html",
    "title": "factors",
    "section": "",
    "text": "Use the soldiers dataset for the following exercises.\n\n\n\n\nrace is now ordered alphabetically (try: soldiers %&gt;%  count(race)))\n\nfix race so that it is ordered after frequency (fct_infreq())\nAdd the code to your 01_import.R file\nTry to recreate one of the plots from day two where you used x = race. Do you see the difference?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    race = fct_infreq(race)\n  ) %&gt;% \n  \n  ggplot(aes(x = race, fill = race))+\n  geom_bar()+\n  scale_x_discrete(labels = scales::label_wrap(8)) # one of many ways to fix long labels on the axis\n\n\n\n\n\n\n\nBackground information: DODRace was collected by assigning fixed race values (1:7) to each soldier. Ethnicity was a black space where the soldiers themselves have filled out their race.\n\nExplore Ethnicity using count() and view()\n\n\nsoldiers %&gt;% \n  count(Ethnicity) # add  %&gt;% view()\n\n \n\n\n\nOMG.. we probably need to merge some of the many Ethnicity groups.\nTry with fct_lump()\n\nCan you find a number of levels that’s reasonable?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    Ethnicity = fct_lump(Ethnicity, 5) # I dont think this is reasonable see below\n  ) %&gt;% \n  count(Ethnicity)\n\n\n\n\n\n\n\nHmmm… fct_lump() is probably not the best choice for the Ethnicity variable. It has too many groups, and many groups have similar sounding names. We need to fix this manually.\n\n\nHere is a code example where we merge all the Apache.\nMerge a few more groups together by building on this code.\nAdd the code to your 01_import.R file\n\n\nsoldiers %&gt;% \n  mutate(\n    Ethnicity = fct_collapse(Ethnicity,\n      Apache = c(\"Apache Blackfoot\",\n                 \"Apache Blackfoot Cherokee Crow\",\n                 \"Apache Cherokee\",\n                 \"Apache Kiowa Mexican\",\n                 \"Apache Mexican\" )\n    )\n  ) \n\n\n\n\n\n\nDODRace, race, and Ethnicity are all true factors in the sense that no values in any of these variables are more ´race´ than other values. Think about category do the values here imply more or less of the same thing?\n\nFix category by changing it into an ordered variable. Use the function factor() and set the argument ordered = TRUE\nAdd the code to your 01_import.R file\nTry to recreate some of the plots we did on day 2 were we colored the points using category - Notice the difference?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    category = factor(category,\n                      levels = (c(\"Underweight\",\n                                \"Normal range\",\n                                \"Overweight\",\n                                \"Obese\")),\n                      ordered = TRUE)\n  ) \n\n\n \n\n\n\n\n \n\n\n\n\n\n\n\n\nCollapse the model types a4 quattro and a4 into a4\nCreate a bar plot sorted by frequency\nWork out a way to show what manufacturers the models belong to\n\n\n\nHere is my suggestion\n\nI have cheated and used some functions (str_to_title() and facet_grid()), and theme options that I haven´t showed you before.\n\n\nCode\nmpg %&gt;% \n  group_by(manufacturer) %&gt;% \n  mutate(\n    model = model %&gt;% str_to_title() %&gt;%  fct_collapse(A4 = c(\"A4\", \"A4 Quattro\")) %&gt;% fct_infreq(),\n    manufacturer = str_to_title(manufacturer)) %&gt;% \n  ggplot(aes(y = model, fill = manufacturer)) +\n  geom_bar()+\n  geom_text(aes(x = 0.5, label = model), size =3,  hjust = 0, check_overlap = TRUE)+ # Display the model name at the position (x=0.5, y = model)\n  scale_x_continuous(expand = c(0,0))+ # Remove the padding between the y-axis and the start of the bars\n  facet_grid(rows = vars(manufacturer), \n             scales = \"free_y\", \n             space = \"free_y\",\n             switch = \"y\")+\n  ggthemes::theme_pander()+\n  theme(axis.text.y=element_blank(), # Remove the names from y-axis (we used geom_tect instead)\n        axis.ticks.y = element_blank(), # Remove y axis ticks (the small lines)\n        strip.text.y.left = element_text(angle = 0, hjust = 1), # Change strip text orientation\n        legend.position = \"none\" # remove fill legend\n        ) +\n  labs(\n    title = \"Count of car models in `ggplot2::mpg` data set\",\n    x = \"Count of car models\",\n    y = NULL,\n    caption = \"Consider a different fill color scale. The current one seems to imply a gradient\"\n  )\n\n\n\n\n\n\n\n\nOrder the columns after frequency\nPimp it with a nice theme and consider adding some nice colors\nCorrect the y-axis label and give the plot a title\nConsider lumping together some of the levels\n\n\n\nCode\nggplot(starwars, aes(y = eye_color)) + \n  geom_bar() \n\n\n\n\nHere is my suggestion\n\nI have cheated and used three functions (str_to_title(), after_stat(), and scale_fill_gradient()), that I haven´t showed you before.\n\n\nCode\nstarwars %&gt;%\n  mutate(eye_color = fct_recode(str_to_title(eye_color))) %&gt;%  # Change all factor levels to Title case\n  mutate(eye_color = fct_lump(eye_color, 7) %&gt;% fct_infreq()) %&gt;% \n  ggplot(aes(y = eye_color,\n             fill = after_stat(count))) +                      # Set the fill color to the count value\n  geom_bar() +\n  ggthemes::theme_foundation()+\n  scale_fill_gradient(low = \"grey\", high = \"black\")+           # Create a new fill scale going from grey to black\n  labs(\n    x = \"Count\", \n    y = \"Eye Color\",\n    title = \"Eye color counts of Starwars characters\",\n    caption = \"Consider... Is the grey gradient disturbing? e.g. ´brown´ has a black color \")+\n  theme(plot.title.position = \"plot\")   # Place the title all the way to the left side\n\n\n\n\n\n\n\ntable1 displays the number of TB cases documented by WHO in Afghanistan, Brazil, and China between 1999 and 2000.\n\nCreate a new variable called case_pr_mill_pop (cases pr. million)\n\nrecode country labels so that (Afghanistan = Afg, Brazil = Bra, China = Chi)\n\nreorder country factor after case_pr_mill_pop\n\narrange the table after country\n\n\n\nCode\ntable1 %&gt;%\n  mutate(\n    case_pr_mill_pop = cases/(population/1e6),\n    country = fct_recode(country,\n                         \"Afg\" = \"Afghanistan\",\n                         \"Bra\" = \"Brazil\",\n                         \"Chi\" = \"China\"),\n    country = fct_reorder(country, case_pr_mill_pop)) %&gt;% \n  arrange(country)"
  },
  {
    "objectID": "day_3_factors.html#base-exercises",
    "href": "day_3_factors.html#base-exercises",
    "title": "factors",
    "section": "",
    "text": "Use the soldiers dataset for the following exercises.\n\n\n\n\nrace is now ordered alphabetically (try: soldiers %&gt;%  count(race)))\n\nfix race so that it is ordered after frequency (fct_infreq())\nAdd the code to your 01_import.R file\nTry to recreate one of the plots from day two where you used x = race. Do you see the difference?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    race = fct_infreq(race)\n  ) %&gt;% \n  \n  ggplot(aes(x = race, fill = race))+\n  geom_bar()+\n  scale_x_discrete(labels = scales::label_wrap(8)) # one of many ways to fix long labels on the axis\n\n\n\n\n\n\n\nBackground information: DODRace was collected by assigning fixed race values (1:7) to each soldier. Ethnicity was a black space where the soldiers themselves have filled out their race.\n\nExplore Ethnicity using count() and view()\n\n\nsoldiers %&gt;% \n  count(Ethnicity) # add  %&gt;% view()\n\n \n\n\n\nOMG.. we probably need to merge some of the many Ethnicity groups.\nTry with fct_lump()\n\nCan you find a number of levels that’s reasonable?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    Ethnicity = fct_lump(Ethnicity, 5) # I dont think this is reasonable see below\n  ) %&gt;% \n  count(Ethnicity)\n\n\n\n\n\n\n\nHmmm… fct_lump() is probably not the best choice for the Ethnicity variable. It has too many groups, and many groups have similar sounding names. We need to fix this manually.\n\n\nHere is a code example where we merge all the Apache.\nMerge a few more groups together by building on this code.\nAdd the code to your 01_import.R file\n\n\nsoldiers %&gt;% \n  mutate(\n    Ethnicity = fct_collapse(Ethnicity,\n      Apache = c(\"Apache Blackfoot\",\n                 \"Apache Blackfoot Cherokee Crow\",\n                 \"Apache Cherokee\",\n                 \"Apache Kiowa Mexican\",\n                 \"Apache Mexican\" )\n    )\n  ) \n\n\n\n\n\n\nDODRace, race, and Ethnicity are all true factors in the sense that no values in any of these variables are more ´race´ than other values. Think about category do the values here imply more or less of the same thing?\n\nFix category by changing it into an ordered variable. Use the function factor() and set the argument ordered = TRUE\nAdd the code to your 01_import.R file\nTry to recreate some of the plots we did on day 2 were we colored the points using category - Notice the difference?\n\n\n\nCode\nsoldiers %&gt;% \n  mutate(\n    category = factor(category,\n                      levels = (c(\"Underweight\",\n                                \"Normal range\",\n                                \"Overweight\",\n                                \"Obese\")),\n                      ordered = TRUE)\n  )"
  },
  {
    "objectID": "day_3_factors.html#challenges-with-forcats-ggplot-dplyr",
    "href": "day_3_factors.html#challenges-with-forcats-ggplot-dplyr",
    "title": "factors",
    "section": "",
    "text": "Collapse the model types a4 quattro and a4 into a4\nCreate a bar plot sorted by frequency\nWork out a way to show what manufacturers the models belong to\n\n\n\nHere is my suggestion\n\nI have cheated and used some functions (str_to_title() and facet_grid()), and theme options that I haven´t showed you before.\n\n\nCode\nmpg %&gt;% \n  group_by(manufacturer) %&gt;% \n  mutate(\n    model = model %&gt;% str_to_title() %&gt;%  fct_collapse(A4 = c(\"A4\", \"A4 Quattro\")) %&gt;% fct_infreq(),\n    manufacturer = str_to_title(manufacturer)) %&gt;% \n  ggplot(aes(y = model, fill = manufacturer)) +\n  geom_bar()+\n  geom_text(aes(x = 0.5, label = model), size =3,  hjust = 0, check_overlap = TRUE)+ # Display the model name at the position (x=0.5, y = model)\n  scale_x_continuous(expand = c(0,0))+ # Remove the padding between the y-axis and the start of the bars\n  facet_grid(rows = vars(manufacturer), \n             scales = \"free_y\", \n             space = \"free_y\",\n             switch = \"y\")+\n  ggthemes::theme_pander()+\n  theme(axis.text.y=element_blank(), # Remove the names from y-axis (we used geom_tect instead)\n        axis.ticks.y = element_blank(), # Remove y axis ticks (the small lines)\n        strip.text.y.left = element_text(angle = 0, hjust = 1), # Change strip text orientation\n        legend.position = \"none\" # remove fill legend\n        ) +\n  labs(\n    title = \"Count of car models in `ggplot2::mpg` data set\",\n    x = \"Count of car models\",\n    y = NULL,\n    caption = \"Consider a different fill color scale. The current one seems to imply a gradient\"\n  )\n\n\n\n\n\n\n\n\nOrder the columns after frequency\nPimp it with a nice theme and consider adding some nice colors\nCorrect the y-axis label and give the plot a title\nConsider lumping together some of the levels\n\n\n\nCode\nggplot(starwars, aes(y = eye_color)) + \n  geom_bar() \n\n\n\n\nHere is my suggestion\n\nI have cheated and used three functions (str_to_title(), after_stat(), and scale_fill_gradient()), that I haven´t showed you before.\n\n\nCode\nstarwars %&gt;%\n  mutate(eye_color = fct_recode(str_to_title(eye_color))) %&gt;%  # Change all factor levels to Title case\n  mutate(eye_color = fct_lump(eye_color, 7) %&gt;% fct_infreq()) %&gt;% \n  ggplot(aes(y = eye_color,\n             fill = after_stat(count))) +                      # Set the fill color to the count value\n  geom_bar() +\n  ggthemes::theme_foundation()+\n  scale_fill_gradient(low = \"grey\", high = \"black\")+           # Create a new fill scale going from grey to black\n  labs(\n    x = \"Count\", \n    y = \"Eye Color\",\n    title = \"Eye color counts of Starwars characters\",\n    caption = \"Consider... Is the grey gradient disturbing? e.g. ´brown´ has a black color \")+\n  theme(plot.title.position = \"plot\")   # Place the title all the way to the left side\n\n\n\n\n\n\n\ntable1 displays the number of TB cases documented by WHO in Afghanistan, Brazil, and China between 1999 and 2000.\n\nCreate a new variable called case_pr_mill_pop (cases pr. million)\n\nrecode country labels so that (Afghanistan = Afg, Brazil = Bra, China = Chi)\n\nreorder country factor after case_pr_mill_pop\n\narrange the table after country\n\n\n\nCode\ntable1 %&gt;%\n  mutate(\n    case_pr_mill_pop = cases/(population/1e6),\n    country = fct_recode(country,\n                         \"Afg\" = \"Afghanistan\",\n                         \"Bra\" = \"Brazil\",\n                         \"Chi\" = \"China\"),\n    country = fct_reorder(country, case_pr_mill_pop)) %&gt;% \n  arrange(country)"
  },
  {
    "objectID": "day_3_tables.html",
    "href": "day_3_tables.html",
    "title": "Tables",
    "section": "",
    "text": "Use install.packages() to download the gt and gtsummary packages. When you have done that add library(gt) and library(gtsummary) to the code chunk where you call your libraries. Execute the lines.\n\n\n\n\n\n\n\n\nCreate a tbl_summary()\n\n\n\nCode\nsoldiers %&gt;% \n  select(sex, heightcm, weightkg) %&gt;% \n  tbl_summary()\n\n\n\n\n\n\n\nDont display missing values\nadd_p() (read here and here if you want to change the default tests).\n\nTry the following functions:\n\nadd_overall()\nadd_stat_label()\nbold_labels()\nitalicize_levels()\nWhen you have the table you like use as_gt() %&gt;% gtsave(filename = here(\"\"))\n\n\n\nCode\nsoldiers %&gt;% \n  select(sex, heightcm, weightkg, WritingPreference) %&gt;% \n  tbl_summary(\n    by = WritingPreference,\n    missing = \"no\"\n  ) %&gt;% \n  add_p() %&gt;% \n  bold_labels() %&gt;% \n  italicize_levels() %&gt;% \n  add_overall() \n\n\n\n\n\n\nYou probably need to investigate the help file for tbl_summary() to solve these. * Change the statistics to mean and sd * Change the statistical test of the continous variables from a “Kruskal-Wallis rank sum test” to a One-way ANOVA * Find better names for sex, heightcm, and weightkg * save the table as a .docx file in your tables folder\n\n\nCode\nmy_table &lt;- soldiers %&gt;% \n  select(sex, heightcm, weightkg, WritingPreference) %&gt;% \n  tbl_summary(\n    by = WritingPreference,\n    missing = \"no\",\n    \n    # Change labels\n    label = list(\n      sex ~ \"Sex\",\n      weightkg ~ \"Weight (kg)\",\n      heightcm ~ \"Height (cm)\"),\n    \n    # Change statistics\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\")\n    \n    \n  ) %&gt;% \n  \n  # t.test\n  add_p(\n    test = list(all_continuous() ~ \"aov\",\n                all_categorical() ~ \"chisq.test.no.correct\")\n    ) %&gt;% \n  bold_labels() %&gt;% \n  italicize_levels() %&gt;% \n  add_overall() \n\nmy_table\n\n\nmy_table %&gt;% \n  as_gt() %&gt;% \n  gtsave(filename = here(\"tables\", \"my_table.docx\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntab_*()\nfmt_*()\ncols_*()\ncells_*()\n\n\n\n\n\nBelow is a suggestion for soldiers, but you are free to try with you own data if you prefer that.\nUsing soldiers and gt(), create a table in the following steps:\n\nKeep the columns Installation, sex, and all the columns that ends with circumference,\nRemove Fort Rucker - it only has one soldier\nGroup by Installation and sex\nsummarise the data and calculate the mean and sd of all the columns that ends with circumference\n\nyou can do this manually (with many lines of code)\nor you can do this by using the across() function inside summarise(). If you are going to be working with a dataset that has many columns, I suggest you invest some time into learning about across()\n\npipe the summarised table to gt() and set the rowname_col argument to sex\nadd a suitable title and subtitle\nAssign the table to an object called my_tbl\n\n\n\nCode\nmy_tbl &lt;- soldiers %&gt;% \n  \n  # Select some columns and arrange the tible\n  select(Installation, sex, \n         ends_with(\"circumference\")) %&gt;% \n  \n  # Remove Fort Rucker\n  filter(Installation != \"Fort Rucker\") %&gt;% \n\n  # Remove the Installation with only one Soldier\n  #group_by(Installation) %&gt;% \n  #add_count() %&gt;% \n  #filter(n &gt; 1) %&gt;% \n  \n  # Summary stats by Installation and Race\n  group_by(Installation, sex) %&gt;% \n  summarise(\n    across(.cols = ends_with(\"circumference\"),\n           .fns = list(mean = ~ mean(.x, na.rm = TRUE),\n                       sd = ~ sd(.x, na.rm = TRUE)))) %&gt;% \n  \n  # group only by installation\n  # because we want to use sex in the rowname_col argument in gt() - see below\n  group_by(Installation) %&gt;% \n  \n  # Send to gt and perform a few styling functions\n  gt(rowname_col = \"sex\") %&gt;% \n  \n  tab_header(\n    title = md(\"**Overview of soldiers soldiers by sex and installation**\"),\n    subtitle = md(\"*The data is a mock up version of the soldiers dataset*\")) %&gt;% \n  \n  tab_footnote(\n    footnote = \"To preserve anonymity, observations from Fort Rucker has been removed becuase of a low number of observations\"\n  )\n\nmy_tbl\n\n\n\n\n\nYou can some try some of these functions\n\ntab_header()\ntab_source_note()\ntab_stubhead()\ntab_spanner()\ntab_spanner_delim()\nfmt_number()\n\nfmt_percent()\n\nfmt_missing()\ncol_merge_n_pct()\ncols_label()\nmd()\ncells_body() and tab_footnote()\n\n\n\nCode\n# It is always a choice how much you want to style your in R, and what you leave for manual editing afterwards (e.g. Word)\n# You can style everything in R, but it can be code intensive\n# In general - you want the basic structure of your table to be in place\n# You NEVER want to manually edit values or merge columns.\n# Editing column and spanners names are less labour intensive and dont contain the same risk of making errors\n# I think the below table is an ok place to stop the styling in R.\n\nmy_tbl_styled &lt;- my_tbl %&gt;% \n  \n  tab_spanner_delim(\n    delim = \"_\",\n    columns = everything()\n  ) %&gt;%\n  \n  fmt_number(\n    columns = contains(\"circumference\"),\n    decimals = 1\n  ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"thigh\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"waist\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"ankle\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"biceps\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"calf\"),\n    pattern = \"{1} ({2})\"\n    ) \n\nmy_tbl_styled\n\n\n\n\n\n\n\nCreate a folder called “tables”\n\n\n\nCode\ngtsave(\n  data = my_tbl_styled,\n  filename = here(\"tables\", \"ANSUR_fort_sex.docx\")\n)\n\n# Word can also open .rtf  files - its sometimes works better in this format\ngtsave(\n  data = my_tbl_styled,\n  filename = here(\"tables\", \"ANSUR_fort_sex.rtf\")\n)\n\n\n\n\n\n\n\n\n\n\nUse tab_options()\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  tab_options(row_group.background.color = \"#C2B7B7\") %&gt;% \n  tab_options(heading.background.color = \"#C2B7B7\") %&gt;% \n  tab_options(column_labels.background.color = \"#C2B7B7\")\n\n\n\n\n\n\n\n\nInstall the package gtExtras and add library(gtExtras) to the codechunk where you load your libraries.\n\n\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  gt_theme_espn()\n\n\n\n\n\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  gt_theme_espn() %&gt;% \n  gt_hulk_col_numeric(thighcircumference_mean)"
  },
  {
    "objectID": "day_3_tables.html#gtsummary",
    "href": "day_3_tables.html#gtsummary",
    "title": "Tables",
    "section": "",
    "text": "Create a tbl_summary()\n\n\n\nCode\nsoldiers %&gt;% \n  select(sex, heightcm, weightkg) %&gt;% \n  tbl_summary()\n\n\n\n\n\n\n\nDont display missing values\nadd_p() (read here and here if you want to change the default tests).\n\nTry the following functions:\n\nadd_overall()\nadd_stat_label()\nbold_labels()\nitalicize_levels()\nWhen you have the table you like use as_gt() %&gt;% gtsave(filename = here(\"\"))\n\n\n\nCode\nsoldiers %&gt;% \n  select(sex, heightcm, weightkg, WritingPreference) %&gt;% \n  tbl_summary(\n    by = WritingPreference,\n    missing = \"no\"\n  ) %&gt;% \n  add_p() %&gt;% \n  bold_labels() %&gt;% \n  italicize_levels() %&gt;% \n  add_overall() \n\n\n\n\n\n\nYou probably need to investigate the help file for tbl_summary() to solve these. * Change the statistics to mean and sd * Change the statistical test of the continous variables from a “Kruskal-Wallis rank sum test” to a One-way ANOVA * Find better names for sex, heightcm, and weightkg * save the table as a .docx file in your tables folder\n\n\nCode\nmy_table &lt;- soldiers %&gt;% \n  select(sex, heightcm, weightkg, WritingPreference) %&gt;% \n  tbl_summary(\n    by = WritingPreference,\n    missing = \"no\",\n    \n    # Change labels\n    label = list(\n      sex ~ \"Sex\",\n      weightkg ~ \"Weight (kg)\",\n      heightcm ~ \"Height (cm)\"),\n    \n    # Change statistics\n    statistic = list(all_continuous() ~ \"{mean} ({sd})\")\n    \n    \n  ) %&gt;% \n  \n  # t.test\n  add_p(\n    test = list(all_continuous() ~ \"aov\",\n                all_categorical() ~ \"chisq.test.no.correct\")\n    ) %&gt;% \n  bold_labels() %&gt;% \n  italicize_levels() %&gt;% \n  add_overall() \n\nmy_table\n\n\nmy_table %&gt;% \n  as_gt() %&gt;% \n  gtsave(filename = here(\"tables\", \"my_table.docx\"))"
  },
  {
    "objectID": "day_3_tables.html#gt",
    "href": "day_3_tables.html#gt",
    "title": "Tables",
    "section": "",
    "text": "tab_*()\nfmt_*()\ncols_*()\ncells_*()\n\n\n\n\n\nBelow is a suggestion for soldiers, but you are free to try with you own data if you prefer that.\nUsing soldiers and gt(), create a table in the following steps:\n\nKeep the columns Installation, sex, and all the columns that ends with circumference,\nRemove Fort Rucker - it only has one soldier\nGroup by Installation and sex\nsummarise the data and calculate the mean and sd of all the columns that ends with circumference\n\nyou can do this manually (with many lines of code)\nor you can do this by using the across() function inside summarise(). If you are going to be working with a dataset that has many columns, I suggest you invest some time into learning about across()\n\npipe the summarised table to gt() and set the rowname_col argument to sex\nadd a suitable title and subtitle\nAssign the table to an object called my_tbl\n\n\n\nCode\nmy_tbl &lt;- soldiers %&gt;% \n  \n  # Select some columns and arrange the tible\n  select(Installation, sex, \n         ends_with(\"circumference\")) %&gt;% \n  \n  # Remove Fort Rucker\n  filter(Installation != \"Fort Rucker\") %&gt;% \n\n  # Remove the Installation with only one Soldier\n  #group_by(Installation) %&gt;% \n  #add_count() %&gt;% \n  #filter(n &gt; 1) %&gt;% \n  \n  # Summary stats by Installation and Race\n  group_by(Installation, sex) %&gt;% \n  summarise(\n    across(.cols = ends_with(\"circumference\"),\n           .fns = list(mean = ~ mean(.x, na.rm = TRUE),\n                       sd = ~ sd(.x, na.rm = TRUE)))) %&gt;% \n  \n  # group only by installation\n  # because we want to use sex in the rowname_col argument in gt() - see below\n  group_by(Installation) %&gt;% \n  \n  # Send to gt and perform a few styling functions\n  gt(rowname_col = \"sex\") %&gt;% \n  \n  tab_header(\n    title = md(\"**Overview of soldiers soldiers by sex and installation**\"),\n    subtitle = md(\"*The data is a mock up version of the soldiers dataset*\")) %&gt;% \n  \n  tab_footnote(\n    footnote = \"To preserve anonymity, observations from Fort Rucker has been removed becuase of a low number of observations\"\n  )\n\nmy_tbl\n\n\n\n\n\nYou can some try some of these functions\n\ntab_header()\ntab_source_note()\ntab_stubhead()\ntab_spanner()\ntab_spanner_delim()\nfmt_number()\n\nfmt_percent()\n\nfmt_missing()\ncol_merge_n_pct()\ncols_label()\nmd()\ncells_body() and tab_footnote()\n\n\n\nCode\n# It is always a choice how much you want to style your in R, and what you leave for manual editing afterwards (e.g. Word)\n# You can style everything in R, but it can be code intensive\n# In general - you want the basic structure of your table to be in place\n# You NEVER want to manually edit values or merge columns.\n# Editing column and spanners names are less labour intensive and dont contain the same risk of making errors\n# I think the below table is an ok place to stop the styling in R.\n\nmy_tbl_styled &lt;- my_tbl %&gt;% \n  \n  tab_spanner_delim(\n    delim = \"_\",\n    columns = everything()\n  ) %&gt;%\n  \n  fmt_number(\n    columns = contains(\"circumference\"),\n    decimals = 1\n  ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"thigh\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"waist\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"ankle\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"biceps\"),\n    pattern = \"{1} ({2})\"\n    ) %&gt;% \n  \n  cols_merge(\n    columns = contains(\"calf\"),\n    pattern = \"{1} ({2})\"\n    ) \n\nmy_tbl_styled\n\n\n\n\n\n\n\nCreate a folder called “tables”\n\n\n\nCode\ngtsave(\n  data = my_tbl_styled,\n  filename = here(\"tables\", \"ANSUR_fort_sex.docx\")\n)\n\n# Word can also open .rtf  files - its sometimes works better in this format\ngtsave(\n  data = my_tbl_styled,\n  filename = here(\"tables\", \"ANSUR_fort_sex.rtf\")\n)\n\n\n\n\n\n\n\n\n\n\nUse tab_options()\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  tab_options(row_group.background.color = \"#C2B7B7\") %&gt;% \n  tab_options(heading.background.color = \"#C2B7B7\") %&gt;% \n  tab_options(column_labels.background.color = \"#C2B7B7\")"
  },
  {
    "objectID": "day_3_tables.html#gtextras",
    "href": "day_3_tables.html#gtextras",
    "title": "Tables",
    "section": "",
    "text": "Install the package gtExtras and add library(gtExtras) to the codechunk where you load your libraries.\n\n\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  gt_theme_espn()\n\n\n\n\n\n\n\n\nCode\nmy_tbl_styled %&gt;% \n  gt_theme_espn() %&gt;% \n  gt_hulk_col_numeric(thighcircumference_mean)"
  },
  {
    "objectID": "day_4_regression.html#the-palmerpenguins-dataset",
    "href": "day_4_regression.html#the-palmerpenguins-dataset",
    "title": "Regression",
    "section": "1.1 The palmerpenguins dataset",
    "text": "1.1 The palmerpenguins dataset\n\nInstall the palmerpenguins package and add a library call to palmerpenguins in the code chunk where you call your other libraries.   Read the documentation for palmerpenguins here\n\n\n1.1.0.1 Using the penguins dataset. Let body_mass_g be your dependent variable (y), and investigate how changes in the other variables in penguins impact body_mass_g\n\nBuild at least two models\nConsider making the formula for one of the models body_mass_g ~ . - What does this do?\nStore them as (pen_model1, pen_model2, etc.)\nRemember that we are just practicing coding here. Today is about How do we code it. The purpose of this particular exercise is to introduce you to a few very useful functions from the easystats package(s), and to get you started with using lm().\n\n\n\nCode\npen_model1 &lt;- penguins %&gt;% lm(body_mass_g ~ sex + species, data = .)\npen_model2 &lt;- penguins %&gt;% lm(body_mass_g ~ bill_depth_mm + bill_length_mm + flipper_length_mm, data = .)\npen_model3 &lt;- penguins %&gt;% lm(body_mass_g ~ ., data = .)\n\n\n\n\n\n1.1.0.2 Base R\n\nPrint a summary of penguins (summary(penguins))\nExplore the elements in one of your models using $\n\nType pen_model1$ and explore the drop down menu\ncoefficients(pen_model1)\nPrint a summary() of one of your models\n\n\n\n\n\n1.1.0.3 easystats\n\nCheck the assumptions of your models (check_model)\n\nDiscuss if/why some assumptions are violated\nWhat could be done to remedy this?\n\n\n\n\nCode\ncheck_model(pen_model1)\n\n\nCode\ncheck_model(pen_model2)\n\n\nCode\ncheck_model(pen_model3)\n\n\n  \n\nInvestigate the model parameters of your models model_parameters()\n\n\n\nCode\nmodel_parameters(pen_model1)\nmodel_parameters(pen_model2)\nmodel_parameters(pen_model3)\n\n\n  \n\nCompare your models compare_models()\n\n\n\nCode\ncompare_models(pen_model1, pen_model2, pen_model3)\n\n\n  \n\nCompare the performance of your models compare_performance()\n\n\n\nCode\ncompare_performance(pen_model1, pen_model2, pen_model3)\n\n\n  \n\nPlot a comparison of your models compare_performance() %&gt;% plot()\n\n\n\nCode\ncompare_performance(pen_model1, pen_model2, pen_model3) %&gt;% plot()\n\n\n  \n\nMake a report of the model you think is the best\n\n\n\nCode\nreport(pen_model3)"
  },
  {
    "objectID": "day_4_regression.html#the-phdpublications-dataset",
    "href": "day_4_regression.html#the-phdpublications-dataset",
    "title": "Regression",
    "section": "1.2 The PhDPublications dataset",
    "text": "1.2 The PhDPublications dataset\n\nInstall the package AER and load the package (+add library call to your library code chunk)\nAER contains &gt;100 different datasets (to see a list: data(package = 'AER')).\nLoad the dataset PhDPublications, by writing data(PhDPublications)\nRead the documentation for PhDPublications\n\n\n\n1.2.0.1 Using PhDPublications, investigate what influenced the number of articles PhD students published during the last 3 years of their PhD.\n\nWe want to predict articles what type of data is this?\n\n\n\nANSWER\n\nR will tell you this is an integer, but if you read the documentaion you will realize that the numbers represent Count or Rate data (Number of articles within a three year period). We typically need to model this type of data using another approach than linear regression. Lets investigate the distribution of articles.\n\n\nInvestigate the distribution of the articles variable (see plot below).\n\nDoes it look normal?\nCan you recognize the type of distribution?\n\n\nANSWER\n\nThis looks like a possion distribution, and you should not model this using normal linear regression with lm(). Instead you should use glm(, family = poisson())\n\n\n\n\n\nCode\nPhDPublications %&gt;% \n  ggplot(aes(x = articles))+\n  geom_density(bw = 0.5, fill = \"lightgrey\", size = 1)+\n  theme_modern()\n\n\n\nBuild at least two models\nConsider making the formula for one of the models articles ~ . - What does this do?\nStore them as (phd_model1, phd_model2, etc.)\nRemember that we are just practicing coding here. Today is about How do we code it. The purpose of this particular exercise is to show you that you can use the same easystats functions to work with different model types. The output will automagically adjust. This is a big advantage to other packages and programs.\n\n\n\nCode\nphd_model1 &lt;- PhDPublications %&gt;% glm(articles ~ gender, data = ., family = poisson())\nphd_model2 &lt;- PhDPublications %&gt;% glm(articles ~ ., data = ., family = poisson())\nphd_model3 &lt;- PhDPublications %&gt;% glm(articles ~ gender + kids + mentor,  data = ., family = poisson())\n\n\n\n\n\n1.2.0.2 Base R\n\nPrint a summary of PhDPublications (summary(PhDPublications))\nExplore the elements in one of your models using $\n\nType phd_model1$ and explore the drop down menu\ncoefficients(phd_model1)\nPrint a summary() of one of your models\n\n\n\n\n\n1.2.0.3 easystats\n  \n\nCheck the assumptions of your models (check_model)\n\nDiscuss if/why some assumptions are violated\nWhat could be done to remedy this?\n\n\n\n\nCode\ncheck_model(phd_model1)\n\n\nCode\ncheck_model(phd_model2)\n\n\nCode\ncheck_model(phd_model3)\n\n\n  \n\nInvestigate the model parameters of your models model_parameters()\n\n\n\nCode\nmodel_parameters(phd_model1)\nmodel_parameters(phd_model2)\nmodel_parameters(phd_model3)\n\n\n  \n\nCompare your models compare_models()\n\n\n\nCode\ncompare_models(phd_model1, phd_model2, phd_model3)\n\n\n  \n\nCompare the performance of your models compare_performance()\n\n\n\nCode\ncompare_performance(phd_model1, phd_model2, phd_model3)\n\n\n  \n\nPlot a comparison of your models compare_performance() %&gt;% plot()\n\n\n\nCode\ncompare_performance(phd_model1, phd_model2, phd_model3) %&gt;% plot()\n\n\n  \n\nMake a report of the model you think is the best\n\n\n\nCode\nreport(phd_model3)"
  },
  {
    "objectID": "day_4_regression.html#want-more",
    "href": "day_4_regression.html#want-more",
    "title": "Regression",
    "section": "Want More?",
    "text": "Want More?\nFor more information on easystats read here.\n\n\n1.2.0.4 gtsummary can also be used to create regressiontables:\n\ntbl_regression()\nadd_n()\nadd_glance_source_note()\n\n\n\nCode\npen_model2 %&gt;% \n  tbl_regression() %&gt;% \n  add_n() %&gt;% \n  add_glance_source_note() \n\n\n\ntry to pipe tbl_regression() to a plot()\n\n\n\nCode\npen_model2 %&gt;% \n  tbl_regression() %&gt;% \n  plot()\n\n\n\ntbl_uvregression() is great for a large number of univariable regressions\n\n\n\nCode\npenguins %&gt;% \n  tbl_uvregression(y = body_mass_g,\n                   method = lm) %&gt;% \n  bold_labels() %&gt;% \n  italicize_levels()\n\n\n\n\n\n1.2.0.5 GGally\nInstall the GGally package and add a library call to the code chunk where you call your libraries.\n\nGGally has many powerful functions for dataanalysis\n\nggpairs() to investigate your data. Try:\n\nggpairs(PhDPublications)\nggpairs(PhDPublications, mapping = aes(color = gender, alpha = 0.2))\n\nggcoef_model() to plot you coefficients. Try:\n\n\n\n\nCode\nmodels &lt;- list(\"model 2\" = phd_model2, \"model 3\" = phd_model3)\nggcoef_compare(models = models)"
  },
  {
    "objectID": "index_da.html",
    "href": "index_da.html",
    "title": "R4phd",
    "section": "",
    "text": "Click to switch to English"
  },
  {
    "objectID": "index_da.html#velkommen-til-r4phd",
    "href": "index_da.html#velkommen-til-r4phd",
    "title": "R4phd",
    "section": "1 Velkommen til R4phd",
    "text": "1 Velkommen til R4phd\nDet var tanken med denne webside at danne basis for almindelig ‘klasseværelses’ undervisning i brugen af R, RStudio og resten af R-økosystemet. Mest med tanke for PhD kurser og med udgangspunktet i Sundhedsvidenskab på Syddansk universitet i Odense.\nDer findes i forvejen et overflødighedshorn af vejledninger, eksempler, videoer, FAQ’s og mere rundt omkring på internettet, men det kan være svært at finde rundt i og det er overvejende på Engelsk.\n\nDu kan starte ved at kigge i indholdsfortegnelsen i fold-ud menuen (øverst til venstre).\n\n\n\n\n\n\nSådan bruger du hjemmesiden\n\n\n\n\n\n\n2 Styresystem – Windows, MacOS eller Linux?\nUndervisningsmaterialet her på siden er lavet på en Linux computer.\nHvis du bruger Microsoft Windows eller Apple MacOS må du derfor forvente at mine video eksempler ser lidt anderledes ud end de gør på din egen skærm.\nDet burde ikke give anledning til problemer da R og RStudio fungerer fint og næsten ens på alle tre styresystemer, men der hvor jeg er bekendt med forskelle mellem styresystemerne vil jeg gøre opmærksom på det med tre forskellige faneblade på denne måde (klik på den relevante fane):\n\nWindowsMacOSLinux\n\n\n…Windows specifikt indhold\n\n\n…MacOS specifikt indhold\n\n\n…Linux specifikt indhold\n\n\n\n\n\n3 Øvelser\nNogle steder vil du finde små øvelser placeret i fold-ud bokse som denne her.\nKlik på fold-ud boksen herunder:\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nHvis der er forskelle mellem Windows, MacOS og Linux, vil du kunne finde den relevante information:\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n… og løsningen placeret i tilsvarende fold-ud bokse.\n\n\n\n\n\n\nLøsning øvelse #1\n\n\n\n\n\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n\n\n4 Navigation\nDer er flere muligheder for at navigere mellem siderne:\n\nI venstre side findes et indeks over afsnit og underordnede sider\nPå hver side i et afsnit, vil der nederst være links til forrige og næste side\nEn søge funktion er tilgængelig i øverste højre hjørne\n\n\n\n5 Kommentarer og spørgsmål\nDet er muligt at efterlade kommentarer, forslag og spørgsmål nederst på hver side – hjælp venligst med til at forbedre indholdet på R4PhD i kommentar felterne:\n\nDu skal bruge en github konto, som kan oprettes gratis og som formentligt vil vise sig nyttig i fremtiden.\nBemærk også, at da siderne her på R4PhD er skrevet parvist på dansk og engelsk, vil kommentarer vises på begge sider – hvis det er muligt så skriv derfor alle kommentarer på engelsk.\n\nVi anbefaler også at bruge Stack Overflow som indgangspunkt til R’s internet samfund (online community) når du får brug for hjælp. Vi har oprettet en Stack Overflow for Teams gruppe specifikt til denne undervisning, men brug bare det overordnede Stack Overflow. Du vil opdage at du nok skal få hjælp dér, meget hurtigt hvis du kan formulere dine spørgsmål klart og tydeligt.\nDet er muligt at oprette en separat konto ved Stack Overflow, men du kan også logge ind dér med den GitHub konto du netop (?) har oprettet. Alternativt kan du også logge en med en Google eller Facebook konto.\nVi har (indtil videre) besluttet, at bruge Stack Overflow for Teams som platform for kommentarer og spørgsmål.\nDet er muligt at oprette en konto ved Stack Overflow, eller at logge ind med en Google, Github eller Facebook konto, hvis man har sådan én i forvejen."
  },
  {
    "objectID": "index_da.html#styresystem-windows-macos-eller-linux",
    "href": "index_da.html#styresystem-windows-macos-eller-linux",
    "title": "R4phd",
    "section": "2 Styresystem – Windows, MacOS eller Linux?",
    "text": "2 Styresystem – Windows, MacOS eller Linux?\nUndervisningsmaterialet her på siden er lavet på en Linux computer.\nHvis du bruger Microsoft Windows eller Apple MacOS må du derfor forvente at mine video eksempler ser lidt anderledes ud end de gør på din egen skærm.\nDet burde ikke give anledning til problemer da R og RStudio fungerer fint og næsten ens på alle tre styresystemer, men der hvor jeg er bekendt med forskelle mellem styresystemerne vil jeg gøre opmærksom på det med tre forskellige faneblade på denne måde (klik på den relevante fane):\n\nWindowsMacOSLinux\n\n\n…Windows specifikt indhold\n\n\n…MacOS specifikt indhold\n\n\n…Linux specifikt indhold"
  },
  {
    "objectID": "index_da.html#øvelser",
    "href": "index_da.html#øvelser",
    "title": "R4phd",
    "section": "3 Øvelser",
    "text": "3 Øvelser\nNogle steder vil du finde små øvelser placeret i fold-ud bokse som denne her.\nKlik på fold-ud boksen herunder:\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nHvis der er forskelle mellem Windows, MacOS og Linux, vil du kunne finde den relevante information:\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen\n\n\n\n\n… og løsningen placeret i tilsvarende fold-ud bokse.\n\n\n\n\n\n\nLøsning øvelse #1\n\n\n\n\n\n\nI et seperat vindue markeret med advarselstrekant\nPå et af tre faneblade markeret med styresystemet\nPå et postkort på køleskabet i kantinen"
  },
  {
    "objectID": "index_da.html#navigation",
    "href": "index_da.html#navigation",
    "title": "R4phd",
    "section": "4 Navigation",
    "text": "4 Navigation\nDer er flere muligheder for at navigere mellem siderne:\n\nI venstre side findes et indeks over afsnit og underordnede sider\nPå hver side i et afsnit, vil der nederst være links til forrige og næste side\nEn søge funktion er tilgængelig i øverste højre hjørne"
  },
  {
    "objectID": "index_da.html#kommentarer-og-spørgsmål",
    "href": "index_da.html#kommentarer-og-spørgsmål",
    "title": "R4phd",
    "section": "5 Kommentarer og spørgsmål",
    "text": "5 Kommentarer og spørgsmål\nDet er muligt at efterlade kommentarer, forslag og spørgsmål nederst på hver side – hjælp venligst med til at forbedre indholdet på R4PhD i kommentar felterne:\n\nDu skal bruge en github konto, som kan oprettes gratis og som formentligt vil vise sig nyttig i fremtiden.\nBemærk også, at da siderne her på R4PhD er skrevet parvist på dansk og engelsk, vil kommentarer vises på begge sider – hvis det er muligt så skriv derfor alle kommentarer på engelsk.\n\nVi anbefaler også at bruge Stack Overflow som indgangspunkt til R’s internet samfund (online community) når du får brug for hjælp. Vi har oprettet en Stack Overflow for Teams gruppe specifikt til denne undervisning, men brug bare det overordnede Stack Overflow. Du vil opdage at du nok skal få hjælp dér, meget hurtigt hvis du kan formulere dine spørgsmål klart og tydeligt.\nDet er muligt at oprette en separat konto ved Stack Overflow, men du kan også logge ind dér med den GitHub konto du netop (?) har oprettet. Alternativt kan du også logge en med en Google eller Facebook konto.\nVi har (indtil videre) besluttet, at bruge Stack Overflow for Teams som platform for kommentarer og spørgsmål.\nDet er muligt at oprette en konto ved Stack Overflow, eller at logge ind med en Google, Github eller Facebook konto, hvis man har sådan én i forvejen."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html",
    "href": "qmd_base_r/base_r_data_types_en.html",
    "title": "Base R - data types",
    "section": "",
    "text": "R is constructed to work with a number of basic data types:\n\nlogical : TRUE or FALSE\ninteger : whole numbers\nnumeric : decimal numbers\ncomplex : complex numbers\ncharacter : alphabetic and other characters\nraw : byte data\n\nIt is important to use the right data type for your data management and analyses.\nNote The listed data types above are basic data types and R offers many other combined and more complex data types.\nIt is also important to know the type of the data you are working with, otherwise you may get confusing output. A common mistake is to load data from an external source (e.g. a .csv file) and assume that variable x was loaded as a character string, but actually it was loaded as a factor. If in doubt, check out class() and str() functions.\nConsider the following code and resulting plot:\n\nggplot(mpg, aes(x=year, y=hwy)) + geom_point()\n\n\n\n\nNow look at the revised code below and the changes it made to the plot:\n\nggplot(mpg, aes(x=factor(year), y=hwy)) + geom_point()\n\n\n\n\nIn the first instance, the variable ‘year’ is a continuous numeric variable. That was not immediately obvious to us, but you could have used str(mpg) or class(mpg$year) to find out.\nIn the second instance, the column year from the mpg dataframe was converted into a categorical factor using the factor() function.\nAs you can see, this made quite a difference to the plot.\n\n\nCan assumes the values of either TRUE or FALSE.\nNote That logical values can also be regarded as integer values 1 and 0, corresponding to TRUE and FALSE.\nLook at this code and its output:\n\na &lt;- TRUE\na + 3\n\n[1] 4\n\n\n\n\n\nIntegers are whole natural numbers: -1, 0, 1, 2, etc.\nR handles data type conversions for you if necessary. So, for instance:\n\nas.integer(3)/as.integer(2)\n\n[1] 1.5\n\n\nDividing the integer 3 with the integer 2 yields a decimal number (1.5) – R will handle such type conversions for you.\n\n\n\nNumeric values are decimal points such as 2.33. In R, such numbers are stored as 64-bit values in computer memory, that means the limit for numeric values is 9,007,199,254,740,992. After than, R (and any other computer statistical program will run into trouble).\nMost of the time, this limit does not affect us, but take a look at this code:\n\nx &lt;- 9007199254740992 + 1\ny &lt;- 1/3\n\nformat(x, scientific=FALSE)\n\n[1] \"9007199254740992\"\n\ny\n\n[1] 0.3333333\n\n\n\n\n\n\n\n\nExercise # 1\n\n\n\n\n\n\nWhy did x not come 9007199254740993 (9007199254740992 + 1)?\nIs 1/3 actually equal to 0.3333333?\n\n\n\n\n\n\n\n\n\n\nExercise # 1 Solution\n\n\n\n\n\n\n9007199254740992 is the largest integer R can store as a single value on a 64-bit computer. Adding one exceeds this limit.\nNo, 1/3 is 0.33333333333333333333..[into infinity] – R can not store that many digits\n\n\n\n\n\n\n\nComplex numbers are implimented with the complex() function. Not really relevant for most statistical analyses.\n\n\n\nUse for storing alpha-numerical characters, i.e. letters of the alphabet, special characters like ‘?’, ’*’, etc.\n\n\n\nThe raw data type holds raw byte data, i.e. binary numbers of length 8-bits. Not really relevant for most statistical analyses."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#logical-or-boolean",
    "href": "qmd_base_r/base_r_data_types_en.html#logical-or-boolean",
    "title": "Base R - data types",
    "section": "",
    "text": "Can assumes the values of either TRUE or FALSE.\nNote That logical values can also be regarded as integer values 1 and 0, corresponding to TRUE and FALSE.\nLook at this code and its output:\n\na &lt;- TRUE\na + 3\n\n[1] 4"
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#integer",
    "href": "qmd_base_r/base_r_data_types_en.html#integer",
    "title": "Base R - data types",
    "section": "",
    "text": "Integers are whole natural numbers: -1, 0, 1, 2, etc.\nR handles data type conversions for you if necessary. So, for instance:\n\nas.integer(3)/as.integer(2)\n\n[1] 1.5\n\n\nDividing the integer 3 with the integer 2 yields a decimal number (1.5) – R will handle such type conversions for you."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#numeric",
    "href": "qmd_base_r/base_r_data_types_en.html#numeric",
    "title": "Base R - data types",
    "section": "",
    "text": "Numeric values are decimal points such as 2.33. In R, such numbers are stored as 64-bit values in computer memory, that means the limit for numeric values is 9,007,199,254,740,992. After than, R (and any other computer statistical program will run into trouble).\nMost of the time, this limit does not affect us, but take a look at this code:\n\nx &lt;- 9007199254740992 + 1\ny &lt;- 1/3\n\nformat(x, scientific=FALSE)\n\n[1] \"9007199254740992\"\n\ny\n\n[1] 0.3333333\n\n\n\n\n\n\n\n\nExercise # 1\n\n\n\n\n\n\nWhy did x not come 9007199254740993 (9007199254740992 + 1)?\nIs 1/3 actually equal to 0.3333333?\n\n\n\n\n\n\n\n\n\n\nExercise # 1 Solution\n\n\n\n\n\n\n9007199254740992 is the largest integer R can store as a single value on a 64-bit computer. Adding one exceeds this limit.\nNo, 1/3 is 0.33333333333333333333..[into infinity] – R can not store that many digits"
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#complex",
    "href": "qmd_base_r/base_r_data_types_en.html#complex",
    "title": "Base R - data types",
    "section": "",
    "text": "Complex numbers are implimented with the complex() function. Not really relevant for most statistical analyses."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#character",
    "href": "qmd_base_r/base_r_data_types_en.html#character",
    "title": "Base R - data types",
    "section": "",
    "text": "Use for storing alpha-numerical characters, i.e. letters of the alphabet, special characters like ‘?’, ’*’, etc."
  },
  {
    "objectID": "qmd_base_r/base_r_data_types_en.html#raw",
    "href": "qmd_base_r/base_r_data_types_en.html#raw",
    "title": "Base R - data types",
    "section": "",
    "text": "The raw data type holds raw byte data, i.e. binary numbers of length 8-bits. Not really relevant for most statistical analyses."
  },
  {
    "objectID": "qmd_base_r/base_r_missing_data_en.html",
    "href": "qmd_base_r/base_r_missing_data_en.html",
    "title": "Base R - missing data",
    "section": "",
    "text": "1 Handling missing data\nTake a look at this simple code:\n\n# Our seven participants self-reported their age:\nparticipants_age &lt;- c(23,25,23,21,25,NA,20)\n\n# What is the mean age?\nmean(participants_age)\n\n[1] NA\n\n\nThe NA values indicates a data point that is Not Available, i.e. missing. This is fundementally not the same as NULL or 0. So how would you calculate a mean value? Well, when the age of one participant is unavailable, so is the mean value and R, quite rightly, reports the mean as NA.\nYou might think, it would be obvious to calculate the mean value of the available values and ignore the one NA. In some cases, that makes sense and is a valid decision to make (or perhaps not). The important think is: you have to decide how to deal with missing values - R won’t do it for you. This is not a bug, it’s a (safety) feature.\nLook at this amended code:\n\n# Our seven participants self-reported their age:\nparticipants_age &lt;- c(23,25,23,21,25,NA,20)\n\n# What is the mean age?\nmean(participants_age, na.rm=TRUE)\n\n[1] 22.83333\n\n\nWhat is your best quess as to the meaning of na.rm=TRUE?"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_en.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_en.html",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "A first time overview of RStudios GUI\n\n\nBy default, the RStudio GUI is divided into four panes (the different colors added here are for illustration). This layout can be changed to your liking, but for now stick with the standard as illustrated above.\n\n\n\n\n\n\nHelp! My layout does not look like that …\n\n\n\n\n\nIf the text editor field is missing, it is probably just because you do not have any text files open for editing – try clicking File / New file / R script (CTRL+SHIFT+n).\nIf you have accidentally hidden one or more panes, try clicking View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_en.html#a-first-time-overview-of-rstudios-gui",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_en.html#a-first-time-overview-of-rstudios-gui",
    "title": "RStudios GUI #1",
    "section": "",
    "text": "A first time overview of RStudios GUI\n\n\nBy default, the RStudio GUI is divided into four panes (the different colors added here are for illustration). This layout can be changed to your liking, but for now stick with the standard as illustrated above.\n\n\n\n\n\n\nHelp! My layout does not look like that …\n\n\n\n\n\nIf the text editor field is missing, it is probably just because you do not have any text files open for editing – try clicking File / New file / R script (CTRL+SHIFT+n).\nIf you have accidentally hidden one or more panes, try clicking View / Panes / Show all panes (CTRL+SHIFT+o)."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_en.html#resizing-panes",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_en.html#resizing-panes",
    "title": "RStudios GUI #1",
    "section": "2 Resizing panes",
    "text": "2 Resizing panes\nClick and drag…\n\n\n\nResizing panes in RStudio with click-and-drag\n\n\nAlso, note the minimize and maximize icons in the top-right hand corner of each pane: \n\n\n\nMinimizing and maximizing panes in RStudio"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_en.html#rstudio-layout",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_en.html#rstudio-layout",
    "title": "RStudios GUI #1",
    "section": "3 RStudio layout",
    "text": "3 RStudio layout\nWant to change the layout (different colors, fonts, text size, etc) of RStudio? Click: Tools / Global options / Appearance … for now, do not mess with the settings in General, Code, etc.\n\n\n\nChanging the RStudio appearance"
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_1_en.html#multiple-tabs-in-panes",
    "href": "qmd_gui/rstudio_introduction_to_gui_1_en.html#multiple-tabs-in-panes",
    "title": "RStudios GUI #1",
    "section": "4 Multiple tabs in panes",
    "text": "4 Multiple tabs in panes\nEach pane in RStudio can, and often will, contain more than a single tab. For instance, in the image below, the ‘Output’ pane contains Files, Plots, Packages, Help, Viewer and Presentation.\n\n\n\nMultiple tabs in each RStudio pane\n\n\nNote, that the tabs presented in a pane may depend on the type of document you are working with. Also some extra functionality, such as Git version control, will change the available tabs.\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nTry to complete the following:\n\nCreate three panes in the ‘Text editor’ pane.\nUse the help functionality to find out how to determine the version of R on your computer.\nFind your R console. type: a &lt;- 5 (press enter) – what happened in your Environment?\nChange the layout of RStudio to a dark color scheme.\n\n\n\n\n\n\n\n\n\n\nSolution to exercise #1\n\n\n\n\n\n\nSimply create three new files: File / New file / R script (CTRL+SHIFT+n).\nNote there are two search boxes in the help tab of the output pane – use the one on the right hand side to learn about the R.Version base function.\nIn the Environment tab of the Environment pane, you should see a list of ‘Values’ with ‘a’ being ‘5’.\nIn Tools / Global options / Appearance, choose e.g. ‘Cobalt’ in the Editor theme dialog."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_2_en.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_2_en.html",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Important concept you need to grasp!\n\n\n\n\n\nYou can think about your workflow in RStudio as consisting of two separate work stations: you either talk to R or you write for R:\n\n\nYou talk to R in the console (orange), but the entire conversation is lost when you close RStudio!\nIf you tell R to create some data, it is stored in the short term memory and you can talk R about it, but it is lost when you close RStudio.\nIf you tell R to do something that is not valid R code, it will complain (error).\nNote If you tell R to write something to a file, that file will not be lost, but your command to do so is.\n\n\n\nIn the text editor (blue) you can write anything to be saved to a text file.\nIt will not be read by R until you specifically ask it to.\nIf you write something that isn’t valid R code, you will not get an error (albeit RStudio may give you a hint) … in fact, you write a shopping list in the text editor, if you want to and R won’t complain.\n\n\n\n\nA typical workflow consists of ping-pong’ing back and forth between i) testing code in real-time (console and short term memory) and ii) storing working code in a text file.\n\n\n\n\n\n\nExample\n\n\n\n\n\nLet’s say you want to use the functions mean and rnorm to calculate the mean of a sample of 100 from a normal distribution. The following code should do the trick:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…before using that code in you manuscript, you might want to check it out in the console:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.290902\n\n\nPerhaps, you then realize, that the result has too many digits and you amend your code:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.95\n\n\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nOpen RStudio and create and empty R script by menu: File / New File / R Script or keyboard: CTRL-SHIFT-n\n\nCopy paste this code rnorm(n=100, mean=1, sd=2) %&gt;% mean() into the console and execute it by pressing ENTER – what happens in the text editor?\nCopy and paste this code rnorm(n=100, mean=120, sd=25) %&gt;% mean() into the text editor and press ENTER – what happens in the console?\nCopy and paste this code rnorm(n=100, mean=20, sd=250) %&gt;% mean() into the text editor and press CTRL+ENTER – what happens in the console?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\n\nNothing happens in the text editor\nNothing happens in the console\nThe code is copied and pasted into the console and executed\n\nBonus question Amend the code in the text editor so that the output of the R command is ascribed to a variable called x. What happens in the Environment tab of the Environment pane, i) when you added the code to the text file and ii) when you copy/paste/execute (CTRL+ENTER) the code in the console?\n\n\n\n\n\n\n\n\n\nExercise #2\n\n\n\n\n\nWhen you close an R project, RStudio will ask you whether you want to save a ‘Workspace image’.\nA workspace image stores the information currently in the console and the short term memory (Environment) and restores it, the next time you open the project.\n\nWhat are the potential benefits of that?\nWhat are the potential pitfalls of that?\n\n\n\n\n\n\n\n\n\n\nExercise #2 Solution\n\n\n\n\n\n\nRestoring a workspace image from the last time you worked in the project, lets you pick up and start from the exact same position, which can sometimes be helpful. For instance, if you rely on downloading a large dataset from the internet, you can save some time.\nA common mistake that frustrates beginners: Ping-pong’ing back and forth, you might solve a problem in the console which commits the right data to short term memory, but forget to add that problem-solving code to the script in the text editor. If you do not use the workspace image, that mistake will become apparent next time you open your project with an empty environment."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_2_en.html#work-flow-in-rstudios-gui",
    "href": "qmd_gui/rstudio_introduction_to_gui_2_en.html#work-flow-in-rstudios-gui",
    "title": "RStudios GUI #2",
    "section": "",
    "text": "Important concept you need to grasp!\n\n\n\n\n\nYou can think about your workflow in RStudio as consisting of two separate work stations: you either talk to R or you write for R:\n\n\nYou talk to R in the console (orange), but the entire conversation is lost when you close RStudio!\nIf you tell R to create some data, it is stored in the short term memory and you can talk R about it, but it is lost when you close RStudio.\nIf you tell R to do something that is not valid R code, it will complain (error).\nNote If you tell R to write something to a file, that file will not be lost, but your command to do so is.\n\n\n\nIn the text editor (blue) you can write anything to be saved to a text file.\nIt will not be read by R until you specifically ask it to.\nIf you write something that isn’t valid R code, you will not get an error (albeit RStudio may give you a hint) … in fact, you write a shopping list in the text editor, if you want to and R won’t complain.\n\n\n\n\nA typical workflow consists of ping-pong’ing back and forth between i) testing code in real-time (console and short term memory) and ii) storing working code in a text file.\n\n\n\n\n\n\nExample\n\n\n\n\n\nLet’s say you want to use the functions mean and rnorm to calculate the mean of a sample of 100 from a normal distribution. The following code should do the trick:\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n…before using that code in you manuscript, you might want to check it out in the console:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean()\n\n[1] 1.290902\n\n\nPerhaps, you then realize, that the result has too many digits and you amend your code:\n\nrnorm(n=100, mean=1, sd=2) %&gt;% mean() %&gt;% round(2)\n\n[1] 0.95\n\n\n\n\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nOpen RStudio and create and empty R script by menu: File / New File / R Script or keyboard: CTRL-SHIFT-n\n\nCopy paste this code rnorm(n=100, mean=1, sd=2) %&gt;% mean() into the console and execute it by pressing ENTER – what happens in the text editor?\nCopy and paste this code rnorm(n=100, mean=120, sd=25) %&gt;% mean() into the text editor and press ENTER – what happens in the console?\nCopy and paste this code rnorm(n=100, mean=20, sd=250) %&gt;% mean() into the text editor and press CTRL+ENTER – what happens in the console?\n\n\n\n\n\n\n\n\n\n\nExercise #1 Solution\n\n\n\n\n\n\nNothing happens in the text editor\nNothing happens in the console\nThe code is copied and pasted into the console and executed\n\nBonus question Amend the code in the text editor so that the output of the R command is ascribed to a variable called x. What happens in the Environment tab of the Environment pane, i) when you added the code to the text file and ii) when you copy/paste/execute (CTRL+ENTER) the code in the console?\n\n\n\n\n\n\n\n\n\nExercise #2\n\n\n\n\n\nWhen you close an R project, RStudio will ask you whether you want to save a ‘Workspace image’.\nA workspace image stores the information currently in the console and the short term memory (Environment) and restores it, the next time you open the project.\n\nWhat are the potential benefits of that?\nWhat are the potential pitfalls of that?\n\n\n\n\n\n\n\n\n\n\nExercise #2 Solution\n\n\n\n\n\n\nRestoring a workspace image from the last time you worked in the project, lets you pick up and start from the exact same position, which can sometimes be helpful. For instance, if you rely on downloading a large dataset from the internet, you can save some time.\nA common mistake that frustrates beginners: Ping-pong’ing back and forth, you might solve a problem in the console which commits the right data to short term memory, but forget to add that problem-solving code to the script in the text editor. If you do not use the workspace image, that mistake will become apparent next time you open your project with an empty environment."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "As mentioned elsewhere, the console lets you talk directly to the R interpreter and you will spend much time in the console testing out your code.\nHere follows a number of practical simple hints on how to use the console:\n\n\n\n\n\nWrite mean in the console and wait a short while – RStudio will present you with a list of functions etc in the current environment that starts with mean. Try scrolling through the list.\n\n\n\n\n\n\n\n\n\nWrite meaning_of_life &lt;- 52 (ENTER) to create a new variable – now try out hint #1 again and you will see this new variable has been added to the list.\n\n\n\n\n\n\nBut the meaning of life is not 52, is it?1 So we need to fix that.\n\n\n\nIn the console on an empty line, simply press the keyboard up-arrow and your previous command should re-appear, amend it to 42 and press ENTER. You can use the arrows to scroll up/down through a history of you console commands, in the current session.\n\n\n\n\n\n\n\n\n\nIn the top right hand corner of the console click the icon which resembles a broom. It clears the console window, but the console hisotry is retained.\n\n\n\n\n\n\n\n\n\nOpen an empty R script in the text editor, enter print(\"copy, paste, execute\") (CTRL+ENTER) – this command should be copied into the console and executed immediately.\n\n\n\n\n\n\n\n\n\nIn the text editor add another line below the first one: print(\"with CTRL-ENTER\") – this time, highlight both lines (mouse: click+drag) before CTRL+ENTER.\n\n\nHint Check out the ‘Run’ dropdown button in the top right-hand corner of the text editor, to run all code or specific chunks.\n\nThere is apparently no keyboard short-cut to copy/paste the current console line to the text editor."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#predictive-texting",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#predictive-texting",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Write mean in the console and wait a short while – RStudio will present you with a list of functions etc in the current environment that starts with mean. Try scrolling through the list."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#predictive-texting-..-which-is-adaptive",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#predictive-texting-..-which-is-adaptive",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Write meaning_of_life &lt;- 52 (ENTER) to create a new variable – now try out hint #1 again and you will see this new variable has been added to the list."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#re-use-previous-commands",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#re-use-previous-commands",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "But the meaning of life is not 52, is it?1 So we need to fix that.\n\n\n\nIn the console on an empty line, simply press the keyboard up-arrow and your previous command should re-appear, amend it to 42 and press ENTER. You can use the arrows to scroll up/down through a history of you console commands, in the current session."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#sweeping-away-the-clutter",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#sweeping-away-the-clutter",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "In the top right hand corner of the console click the icon which resembles a broom. It clears the console window, but the console hisotry is retained."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#running-a-command-from-the-text-editor",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#running-a-command-from-the-text-editor",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "Open an empty R script in the text editor, enter print(\"copy, paste, execute\") (CTRL+ENTER) – this command should be copied into the console and executed immediately."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#running-multiple-commands-from-the-text-editor",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#running-multiple-commands-from-the-text-editor",
    "title": "RStudios GUI – the console",
    "section": "",
    "text": "In the text editor add another line below the first one: print(\"with CTRL-ENTER\") – this time, highlight both lines (mouse: click+drag) before CTRL+ENTER.\n\n\nHint Check out the ‘Run’ dropdown button in the top right-hand corner of the text editor, to run all code or specific chunks.\n\nThere is apparently no keyboard short-cut to copy/paste the current console line to the text editor."
  },
  {
    "objectID": "qmd_gui/rstudio_introduction_to_gui_console_en.html#footnotes",
    "href": "qmd_gui/rstudio_introduction_to_gui_console_en.html#footnotes",
    "title": "RStudios GUI – the console",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAccording to the fictional supercomputer Deep Thought in Douglas Adams’ sci-fi universe, The Answer to the Ultimate Question of Life, The Universe, and Everything, is 42, but you probably already knew that :-)↩︎"
  },
  {
    "objectID": "qmd_installation/installation_background_da.html",
    "href": "qmd_installation/installation_background_da.html",
    "title": "R versus RStudio",
    "section": "",
    "text": "Selve R er et kodesprog og udviklingsmiljø som er særligt velegnet til statistik og data-science.\nR kode ser eksempelvis sådan her ud:\n\nmine_nye_data &lt;- read.csv(\"data_mappe/min_data_fil.csv\")\nmine_nye_data &lt;- mine_nye_data %&gt;%\n  select(-cpr_nummer)\nantal_observationer &lt;- mine_nye_data %&gt;% nrow()\nmin_fine_graf &lt;- mine_nye_data %&gt;% ggplot() + geom_histogram()\n\nR er med andre ord det kode sprog du bruger til indlæse og rense dine data, definere dine analyser, generere dine tabeller og grafer, osv, osv.\n\n\n\nDerimod er RStudio et grafisk program som ‘bare’ gør det nemmere at arbejde med R. Det er egentligt ikke nødvendigt at bruge RStudio, men der er en god grund til at næste alle R-brugere gør det.\nRStudio ser eksempelvis sådan her ud:\n\n\n\nScreenshot af RStudio som det så ud mens jeg sad og skrev denne webside … det kan man nemlig også bruge R-økosystemet til :-)\n\n\n\n\n\nR økosystemet er et veritabelt overflødighedshorn af ekstra funktionalitet som kan lægges over på selve R. Det kommer først og fremmest i form af R pakker, som der findes mange tusinde af, men det er også vejledninger, youTube videoer, chat-fora og meget andet. Uanset hvilke problemer du kommer ud for på din R rejse, kan du være næste 100% sikker på at nogen allerede har beskrevet løsningen … den ligger allerede klar til dig derude i R økosystemet.\nMen før vi kaster os over alt det, så skal vi altså først have installeret R."
  },
  {
    "objectID": "qmd_installation/installation_background_da.html#r-mig-her-og-r-mig-der",
    "href": "qmd_installation/installation_background_da.html#r-mig-her-og-r-mig-der",
    "title": "R versus RStudio",
    "section": "",
    "text": "Selve R er et kodesprog og udviklingsmiljø som er særligt velegnet til statistik og data-science.\nR kode ser eksempelvis sådan her ud:\n\nmine_nye_data &lt;- read.csv(\"data_mappe/min_data_fil.csv\")\nmine_nye_data &lt;- mine_nye_data %&gt;%\n  select(-cpr_nummer)\nantal_observationer &lt;- mine_nye_data %&gt;% nrow()\nmin_fine_graf &lt;- mine_nye_data %&gt;% ggplot() + geom_histogram()\n\nR er med andre ord det kode sprog du bruger til indlæse og rense dine data, definere dine analyser, generere dine tabeller og grafer, osv, osv.\n\n\n\nDerimod er RStudio et grafisk program som ‘bare’ gør det nemmere at arbejde med R. Det er egentligt ikke nødvendigt at bruge RStudio, men der er en god grund til at næste alle R-brugere gør det.\nRStudio ser eksempelvis sådan her ud:\n\n\n\nScreenshot af RStudio som det så ud mens jeg sad og skrev denne webside … det kan man nemlig også bruge R-økosystemet til :-)\n\n\n\n\n\nR økosystemet er et veritabelt overflødighedshorn af ekstra funktionalitet som kan lægges over på selve R. Det kommer først og fremmest i form af R pakker, som der findes mange tusinde af, men det er også vejledninger, youTube videoer, chat-fora og meget andet. Uanset hvilke problemer du kommer ud for på din R rejse, kan du være næste 100% sikker på at nogen allerede har beskrevet løsningen … den ligger allerede klar til dig derude i R økosystemet.\nMen før vi kaster os over alt det, så skal vi altså først have installeret R."
  },
  {
    "objectID": "qmd_installation/installation_check_da.html",
    "href": "qmd_installation/installation_check_da.html",
    "title": "Check all is OK",
    "section": "",
    "text": "1 Tjek din R installation\nUnder antagelse af, at du har en fungerende installation af R and RStudio, så gør følgende:\n\n\n\n\n\n\nVis mig hvordan\n\n\n\n\n\n\n\n\n\n1. Først udfold call-out boksen herunder (‘Installations tjekker’)\n2. Dernæst, kopier koden fra kode-feltet ved at klikke på clip-board ikonet i øverste, højre hjørne af feltet som kommer frem når musen er over\n3. Luk for call-out boksen igen\n\n\n\n\n\n\nInstallations tjekker\n\n\n\n\n\n\n# This script is intented to test whether the basic\n# requirements for an R-installation is met, prior\n# to taking part in the R4PHD courses.\n\n### Operating system\n\nsys_name &lt;- Sys.info()[['sysname']]\nsys_version &lt;- Sys.info()[['release']]\nsys_machine &lt;- Sys.info()[['machine']]\n\nif (sys_name %in% c(\"Linux\", \"MacOS\", \"Windows\")) {\n  print(paste0(\"[OK] Your operating system is \", sys_name, \" (version \", sys_version,\")\"))\n} else {\n  print(paste0(\"[WARNING] Your operating system is reported as '\", sys_name, \"'. 'Linux', MacOS' or 'Windows' was expected.\"))\n}\n\n### CPU architecture\n\nif (sys_machine %in% c(\"x86_64\", \"amd64\", \"arm64\", \"x86-64\")) {\n  print(\"[OK] You computer has a 64 bit CPU\")\n} else if (sys_machine %in% c(\"i386\", \"i586\", \"i686\")) {\n  print(\"[WARNING] You computer has an older 32 bit CPU\")\n} else {\n  print(paste0(\"[WARNING] You computer is reported as \",sys_machine,\" ... not what was expected.\"))\n}\n\n### R version\n\nr_version_major &lt;- R.Version()[['major']]\nr_version_string &lt;- R.Version()[['version.string']]\n\nif (r_version_major &gt;= \"4\") {\n  print(paste0(\"[OK] R installation is: \", r_version_string))\n} else {\n  print(paste0(\"[WARNING] An R version 4.x.x is recommended. You installation is \", r_version_string))\n}\n\n### RStudio version\n\nrstudio_type &lt;- rstudioapi::versionInfo()$mode\nrstudio_version &lt;- rstudioapi::versionInfo()$version\n\nif (rstudio_type == \"desktop\") {\n  print(\"[OK] The RStudio installation is 'desktop'\")\n} else {\n  print(paste0(\"[WARNING] The RStudio installation is '\", rstudio_type,\"'. Version 'desktop' is recommended!\"))\n}\n\nif (rstudio_version &gt; \"2023\") {\n  print(paste0(\"[OK] The RStudio version is \",rstudio_version))\n} else {\n  print(paste0(\"[WARNING] The RStudio version is \",rstudio_version, \". Version 2023+ was expected.\"))\n}\n\nall_installed_packages &lt;- .packages(all.available = TRUE)\nrecommended_packages &lt;- c(\"tidyverse\", \"here\", \"skimr\", \"gt\", \"gtExtras\", \"gtsummary\", \"patchwork\", \"naniar\", \"reprex\", \"ggstatsplot\", \"easystats\", \"vroom\")\n\nfor (p in recommended_packages) {\n  if (p %in% all_installed_packages) {\n    print(paste0(\"[OK] '\", p, \"' (package) is installed.\"))\n  } else {\n    print(paste0(\"[WARNING] '\", p, \"' (package) is NOT installed.\"))\n  }\n}\n\n\n\n\n4. Åben RStudio\n5. Lav et nyt, tomt R script dokument via tastatus: CTRL-SHIFT-n eller menu: File / New File / R Script\n6. Indsæt den kopierede kode i dokumentet\n7. Eksekvér hele koden via tastatur: CTRL-SHIFT-s, eller menu: Code / Source eller med musen: klik ‘Source’ i øverste højre hjørne af tekst editor panelet.\n8. Gennemlæs out i konsollen"
  },
  {
    "objectID": "qmd_installation/installation_cloud_da.html",
    "href": "qmd_installation/installation_cloud_da.html",
    "title": "Posit Cloud",
    "section": "",
    "text": "VIGTIGT\n\n\n\nFirmaet Posit som står bag RStudio (og rigtigt mange R pakker), tilbyder også en online version af RStudio og R økosystemet, som hedder Posit Cloud.\n\nPosit Cloud (formerly RStudio Cloud) lets you access Posit’s powerful set of data science tools right in your browser – no installation or complex configuration required.\n\nDe tilbyder endda en gratis version med visse begrænsninger. Men i udgangspunktet anbefaler vi at du installerer R, RStudio, etc på din egen computer med mindre der er helt særlige grunde til at vælge cloud løsningen."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_da.html",
    "href": "qmd_installation/installation_ecosystem_da.html",
    "title": "The R ecosystem",
    "section": "",
    "text": "R-økosystemet består af rigtigt mange separate programmer der på dynamisk vis kan hentes ned fra internettet og kombineres for at give nye funktioner: Alt fra simpel data manipulation til dynamiske hjemmesider, grafiske animationer og meget mere.\nVi får kun brug for tre af disse elementer:\n\nSelve R som er et udviklingsmiljø (kodesprog) til data-science og statistik\nRStudio som er et grafisk program til at arbejde med R kode\nEn mindre gruppe af R pakker med ekstra funktionalitet\n\nPå de næste sider vil jeg gennemgå hvordan elementerne installeres, et ad gangen."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_da.html#r-økosystemet",
    "href": "qmd_installation/installation_ecosystem_da.html#r-økosystemet",
    "title": "The R ecosystem",
    "section": "",
    "text": "R-økosystemet består af rigtigt mange separate programmer der på dynamisk vis kan hentes ned fra internettet og kombineres for at give nye funktioner: Alt fra simpel data manipulation til dynamiske hjemmesider, grafiske animationer og meget mere.\nVi får kun brug for tre af disse elementer:\n\nSelve R som er et udviklingsmiljø (kodesprog) til data-science og statistik\nRStudio som er et grafisk program til at arbejde med R kode\nEn mindre gruppe af R pakker med ekstra funktionalitet\n\nPå de næste sider vil jeg gennemgå hvordan elementerne installeres, et ad gangen."
  },
  {
    "objectID": "qmd_installation/installation_ecosystem_da.html#en-bemærkning-om-free-and-open-source-software-foss",
    "href": "qmd_installation/installation_ecosystem_da.html#en-bemærkning-om-free-and-open-source-software-foss",
    "title": "The R ecosystem",
    "section": "2 En bemærkning om “Free and Open Source Software” (FOSS)",
    "text": "2 En bemærkning om “Free and Open Source Software” (FOSS)\nR-økosystemet er udviklet og frigivet som Free and Open Source Software og er som sådan frit og gratis tilgængeligt på internettet.\nDet er en kæmpe fordel. Ikke bare på grund af prisen (gratis), men i høj grad også af principielle årsager … principper som burde være af særlig betydning for en forsker … og det opfordres du hermed til at læse lidt mere her:\n\n\n\n\n\n\nMere om FOSS? Klik her!\n\n\n\n\n\nFree and Open Source software udvikles efter de samme grundlæggende principper som den videnskabelige proces: viden (software) udvikles og offentliggøres på en åben og gennemsigtig måde, som gør det muligt for alle at undersøge, kritisere og forbedre resultatet, og at videre-udvikle derpå.\nDet står i kontrast til lukkede og proprietære udviklingsprocesser hvor viden (software) holdes skjult i lukkede formater der forhindrer uafhængig kritisk gennemsyn, men til gengæld understøtter en lukrativ forretningsmodel.\nHvis du vil vide mere, kan du nemt finde information derom på internettet … altså det internet som næsten udelukkende er baseret open source software.\nHvis du i dit forskningsbudget har afsat midler til indkøb af IT udstyr og software, kan du jo overveje at donere et beløb du finder passende til f.eks R projektet."
  },
  {
    "objectID": "qmd_installation/installation_prerequisites_da.html",
    "href": "qmd_installation/installation_prerequisites_da.html",
    "title": "Prerequisites",
    "section": "",
    "text": "…du får brug for en computer, ja du gør.\n\nEn nogenlunde moderne computer\n\nTilstrækkeligt med plads (+500 Mb) på din harddisk til installationen\nTilstrækkeligt med RAM (+1 Gb) - jo mere, jo bedre\n\nEt nogenlunde moderne styresystem\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nEn fungerende internetforbindelse\n\nHvis du er i tvivl eller din computer blev udleveret af SDU, SLB, eller OUH, så se venligst herunder:\n\n\n\n\n\n\nSådan kan du finde information om din computer\n\n\n\n\n\nHvis du allerede har en fungerende installation af R kan du bruge denne R kode til at udskrive al relevant information om din computer og dens software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\nHvis du kører Linux ved du garanteret al den slags i forvejen, inklusive din RAMs clock-frekvens og ext4’s blok størrelse, men hvis ikke:\n\n\nKør følgende i en konsol:\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nKør følgende i en konsol:\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nDu har helt sikkert ikke brug for hjælp her …\n\n\n\n\n\n\n\n\n\n\n\n\n\nEr din computer gammel?\n\n\n\n\n\nHvis din computer er af ældre dato, vil det absolut være tilrådeligt at sikre dig personlig hjælp til installation i god tid før du deltager i et R-kursus.\nEllers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\nR-økosystemet er konstant i udvikling og der kommer hele tiden nye funktioner til som du vil gå glip af med en ældre installation.\nIkke fordi din computer absolut skal være sprit ny, men er du i tvivl, så kontakt underviserne i god tid og spørg dem til råds.\nAktuelt (sommeren 2022) vil jeg anbefale at du bruger R version 4.x.x og RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nEr din computer forbundet til et institutions netværk drev?\n\n\n\n\n\nBemærk, at hvis din computer er sat op til at bruge din institutions netværks drev (f.eks Microsoft OneDrive) i modsætning til at bruge dens egen lokale harddisk, så vil tingene køre langsommere … det vil stadigvæk køre, men bare langsommere pga netværks trafikken.\n\n\n\n\n\n\n\n\n\nEr din computer en SDU-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nPå en SDU computer, er det nemmest hvis du kan installere softwaren via SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nEr din computer en SLB-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet.\n\n\n\n\n\n\n\n\n\nEr din computer en OUH-computer?\n\n\n\n\n\nEnkelte OUH ansatte har tidligere fået anvist adgang til en server-baseret R/RStudio løsning, istedet for installation på din egen computer – det fungerer ikke godt. Vi anbefaler klart, en lokal installation på harddisken.\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet."
  },
  {
    "objectID": "qmd_installation/installation_prerequisites_da.html#forudsætninger",
    "href": "qmd_installation/installation_prerequisites_da.html#forudsætninger",
    "title": "Prerequisites",
    "section": "",
    "text": "…du får brug for en computer, ja du gør.\n\nEn nogenlunde moderne computer\n\nTilstrækkeligt med plads (+500 Mb) på din harddisk til installationen\nTilstrækkeligt med RAM (+1 Gb) - jo mere, jo bedre\n\nEt nogenlunde moderne styresystem\n\nLinux (Ubuntu 18+, Debian 9+, OpenSuse 15+, Fedora 19+, Redhat 7+, etc)\nWindows 10+\nMacOS10.15+\n\nEn fungerende internetforbindelse\n\nHvis du er i tvivl eller din computer blev udleveret af SDU, SLB, eller OUH, så se venligst herunder:\n\n\n\n\n\n\nSådan kan du finde information om din computer\n\n\n\n\n\nHvis du allerede har en fungerende installation af R kan du bruge denne R kode til at udskrive al relevant information om din computer og dens software.\n\nWindowsMacOSLinux\n\n\nWindows 10\nWindows 10\n\n\nMacOS\n\n\nHvis du kører Linux ved du garanteret al den slags i forvejen, inklusive din RAMs clock-frekvens og ext4’s blok størrelse, men hvis ikke:\n\n\nKør følgende i en konsol:\n$ uname -a\n$ lscpu\n$ df -h\n\n\n\nKør følgende i en konsol:\n$ hostnamectl\n$ lscpu\n$ df -h\n\n\n\n\nDu har helt sikkert ikke brug for hjælp her …\n\n\n\n\n\n\n\n\n\n\n\n\n\nEr din computer gammel?\n\n\n\n\n\nHvis din computer er af ældre dato, vil det absolut være tilrådeligt at sikre dig personlig hjælp til installation i god tid før du deltager i et R-kursus.\nEllers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\nR-økosystemet er konstant i udvikling og der kommer hele tiden nye funktioner til som du vil gå glip af med en ældre installation.\nIkke fordi din computer absolut skal være sprit ny, men er du i tvivl, så kontakt underviserne i god tid og spørg dem til råds.\nAktuelt (sommeren 2022) vil jeg anbefale at du bruger R version 4.x.x og RStudio version 2022.x.x\n\n\n\n\n\n\n\n\n\nEr din computer forbundet til et institutions netværk drev?\n\n\n\n\n\nBemærk, at hvis din computer er sat op til at bruge din institutions netværks drev (f.eks Microsoft OneDrive) i modsætning til at bruge dens egen lokale harddisk, så vil tingene køre langsommere … det vil stadigvæk køre, men bare langsommere pga netværks trafikken.\n\n\n\n\n\n\n\n\n\nEr din computer en SDU-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nPå en SDU computer, er det nemmest hvis du kan installere softwaren via SDU IT Software Center.\n\n\n\n\n\n\n\n\n\nEr din computer en SLB-computer?\n\n\n\n\n\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet.\n\n\n\n\n\n\n\n\n\nEr din computer en OUH-computer?\n\n\n\n\n\nEnkelte OUH ansatte har tidligere fået anvist adgang til en server-baseret R/RStudio løsning, istedet for installation på din egen computer – det fungerer ikke godt. Vi anbefaler klart, en lokal installation på harddisken.\nVær særligt opmærksom på at den lokale IT afdeling på regionens sygehuse og universiteterne kan have lagt begrænsinger på dine muligheder for at installere programmer på din arbejdscomputer:\n\nEr der spærret for adgangen til hjemmesider eller download af programfiler?\nKræver det særlige rettigheder at installere programmer på din computer?\n\nHvis det er tilfældet kan det gøre det sværere at installere eksempelvis R på din computer.\nDet er en god idé at få styr på det før du sidder til undervisning. Igen fordi du ellers risikerer du at bruge al din undervisningstid på at kæmpe med computeren i stedet for at lege med R.\n…og vi (underviserne) kan hjælpe dig med R-økosystemet, men ikke nødvendigvis med din computer eller dit styresystem.\nBemærk, at hvis du er på regionens netværk er der spærret for adgang til en lang række internet ressourcer – du kan med fordel logge på “Gæstenet” i stedet."
  },
  {
    "objectID": "qmd_installation/installation_quick_preparation_da.html",
    "href": "qmd_installation/installation_quick_preparation_da.html",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "En egnet computer\nEn fungerende installation af R\nEn fungerende installation af RStudio\nEt antal R pakker installeret\n\nPå de næste sider, hjælper vi dig igennem punkterne, et af gangen … bemærkede du linket nederst til højre på denne side? Følg det link for at komme videre i Installations sektionen."
  },
  {
    "objectID": "qmd_installation/installation_quick_preparation_da.html#du-får-brug-for-følgende",
    "href": "qmd_installation/installation_quick_preparation_da.html#du-får-brug-for-følgende",
    "title": "Getting ready for your R course",
    "section": "",
    "text": "En egnet computer\nEn fungerende installation af R\nEn fungerende installation af RStudio\nEt antal R pakker installeret\n\nPå de næste sider, hjælper vi dig igennem punkterne, et af gangen … bemærkede du linket nederst til højre på denne side? Følg det link for at komme videre i Installations sektionen."
  },
  {
    "objectID": "qmd_installation/installation_r_da.html",
    "href": "qmd_installation/installation_r_da.html",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nHvis din computer er udleveret af SDU IT, anbefales det at du installerer R via SDUs Software Center.\nDu skal også installere RTools – bemærk, at RTools versionen skal svare til din version af R (4.2 eller 4.3, etc).\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for Windows.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\nDu skal også installere RTools sammen med R - sørg for at hente den version som svarer til din R version – Link to RTools.\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for macOS.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR er med al sandsynlighed en del af din foretrukne Linux distributions standard software repositorie. Bruger du en Debian baseret distribution, vil det derfor formentligt være så simpelt som:\n\nuser@linux$ sudo apt install r-base\n\nDerforuden kan du med fordel installere følgende andre pakker hvis du vil bruge R til at generere litteratur referencer (pandoc) og/eller PDF filer (texlive) som output.\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nBruger du en anden distribution, som ikke er baseret på Debian (f.eks Arch eller Fedora) skal du installere tilsvarende pakker fra deres repositorier med deres pakke håndterings funktioner (yum, rpm, etc)"
  },
  {
    "objectID": "qmd_installation/installation_r_da.html#installation",
    "href": "qmd_installation/installation_r_da.html#installation",
    "title": "R installation",
    "section": "",
    "text": "SDUWindowsMacOSLinux\n\n\nHvis din computer er udleveret af SDU IT, anbefales det at du installerer R via SDUs Software Center.\nDu skal også installere RTools – bemærk, at RTools versionen skal svare til din version af R (4.2 eller 4.3, etc).\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for Windows.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\nDu skal også installere RTools sammen med R - sørg for at hente den version som svarer til din R version – Link to RTools.\n\n\nR kan hentes på internettet fra dette link til CRAN:\n\nNær toppen finder du linket Download R for macOS.\nKlik på linket og download filen.\nNår filen er hentet ned installeres på vanlig vis.\n\n\n\nR er med al sandsynlighed en del af din foretrukne Linux distributions standard software repositorie. Bruger du en Debian baseret distribution, vil det derfor formentligt være så simpelt som:\n\nuser@linux$ sudo apt install r-base\n\nDerforuden kan du med fordel installere følgende andre pakker hvis du vil bruge R til at generere litteratur referencer (pandoc) og/eller PDF filer (texlive) som output.\n\nuser@linux$ sudo apt install pandoc pandoc-citeproc texlive-base texlive-extra-utils texlive-font-utils texlive-fonts-recommended texlive-fonts-extra texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-pictures texlive-pstricks texlive-xetex lmodern texlive-lang-european g++ libxml2-dev libcurl4-openssl-dev libssl-dev \n\nBruger du en anden distribution, som ikke er baseret på Debian (f.eks Arch eller Fedora) skal du installere tilsvarende pakker fra deres repositorier med deres pakke håndterings funktioner (yum, rpm, etc)"
  },
  {
    "objectID": "qmd_installation/installation_r_da.html#tjek-at-r-er-installeret-og-fungerer",
    "href": "qmd_installation/installation_r_da.html#tjek-at-r-er-installeret-og-fungerer",
    "title": "R installation",
    "section": "2 Tjek at R er installeret og fungerer",
    "text": "2 Tjek at R er installeret og fungerer\nHvis installationsprocessen forløb som forventet burde du nu have R installeret på din computer – før vi går videre til at installere RStudio, er det en god ide lige at kontrollere at du nu også har et fungerende R udviklingsmiljø på plads:\n\nWindowsMacOSLinux\n\n\nFor at tjekke om R er installeret skal du først åbne Terminal programmet på din Windows computer:\nÅben Run window dialogen ved at trykke på tasterne Windows + R, i ‘Åben’ feltet i ‘Kør’ vinduet taster du wt (for Windows Terminal) og klikker på OK.\nI Windows Terminal indtaster du nu:\n\n...SKAF BILLEDE FRA EN WINDOWS\n\n\n\nFor at tjekke om R er installeret skal du først åbne Terminal programmet på din Mac computer:\nTerminal kan findes i Utilities under Applications eller du kan trykke Command-space for at åbne Spotlight og indtaste “Terminal” og derpå dobbelt klikke på søge resultatet.\nI MacOS Terminalen indtaster du nu:\n\n...SKAF BILLEDE FRA EN MAC\n\n\n\nÅbn dit favorit command-line interface og afprøve følgende:\n\nuser@linux: R\n\nDit output skulle gerne være noget i stil med:\n\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R."
  },
  {
    "objectID": "qmd_installation/installation_r_packages_da.html",
    "href": "qmd_installation/installation_r_packages_da.html",
    "title": "R package installation",
    "section": "",
    "text": "Standard installationen af R består af et sæt ‘kerne’ funktioner. I tillæg dertil er det muligt at installere en meget lang række af pakker med ekstra funktioner. Disse pakker udvikles både af firmaet bag RStudio (Posit), af andre firmaer, universiteter og af R brugerne … måske en dag vil du også udvikle og offentliggøre en R pakke?\nNogle af disse pakker er udviklet med et meget specifikt og snævert formål for øje – f.eks Steen Harsteds pakke til at håndtere motion capture data kaldet mocapr. Andre pakker er mere alment anvendelige og nogle af dem vil du stifte bekendtskab med i undervisningen. Det gælder f.eks:\n\ntidyverse – en meta-pakke der gør det nemmere at arbejde med R syntaksen – f.eks brugen af pipes.\nggplot2 – en pakke til at konstruere grafer og plots\nggpubr – en pakke som bygger på ggplot2 pakken med det formål at gøre det nemme at producere grafer som er klar til publikation\n\nDer er et par tekniske ting du skal forstå ift R pakker:\n\n\nFor at kunne installere visse R pakker på Windows operativ systemer, kræves installation af programmet RTools. Du kan læse mere om RTools på (dette link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] som inkluderer link til RTools installationsprogrammet og en mere udførlig vejledning.\nBemærk venligst, at der tidligere har været problemer med at installere RTools på SDU computere, det er derfor en god idé at tjekke om den kan installeres via SDU-ITs Software Center.\n\n\n\nR pakker kan være specifikke ift den underliggende R version – når der kommer en ny version af R kan det med andre ord tage lidt tid for pakke-udviklerne at opdatere deres pakker. Det er ikke altid en fordel at bruge den absolut nyeste version af R – specielt ikke hvis du også bruger nogle niché pakker.\n\n\n\nHvis du vil bruge en R pakke skal den både installeres og indlæses før du kan bruge den.\n\nNår du installerer pakken, hentes den ned og gemmes lokalt på din computer.\nNår du indlæser pakker, læser du den ind i computerens hukommelse.\n\nFørst når pakken er indlæst i computerens hukommelse vil dens funktioner være tilgængelig for brug i din kode.\n\n\n\nLangt de fleste pakker du kan tænkes at få brug for er tilgængelige på internettet fra the Comprehensive R Archive Network – CRAN.\nSkal du installere en sådan pakke kan du vælge at gøre det via RStudios grafiske brugerflade eller via en R kommando i konsollen. Umiddelbart vil vi anbefale at bruge konsollen da det kan give nogle nyttige informationer hvis installationen fejler.\n\n\n\n\n\n\nVideo : Installation af R pakker\n\n\n\n\n\n\n\nVideo\nEksempel på installation af en R pakke"
  },
  {
    "objectID": "qmd_installation/installation_r_packages_da.html#hvad-er-en-r-pakke",
    "href": "qmd_installation/installation_r_packages_da.html#hvad-er-en-r-pakke",
    "title": "R package installation",
    "section": "",
    "text": "Standard installationen af R består af et sæt ‘kerne’ funktioner. I tillæg dertil er det muligt at installere en meget lang række af pakker med ekstra funktioner. Disse pakker udvikles både af firmaet bag RStudio (Posit), af andre firmaer, universiteter og af R brugerne … måske en dag vil du også udvikle og offentliggøre en R pakke?\nNogle af disse pakker er udviklet med et meget specifikt og snævert formål for øje – f.eks Steen Harsteds pakke til at håndtere motion capture data kaldet mocapr. Andre pakker er mere alment anvendelige og nogle af dem vil du stifte bekendtskab med i undervisningen. Det gælder f.eks:\n\ntidyverse – en meta-pakke der gør det nemmere at arbejde med R syntaksen – f.eks brugen af pipes.\nggplot2 – en pakke til at konstruere grafer og plots\nggpubr – en pakke som bygger på ggplot2 pakken med det formål at gøre det nemme at producere grafer som er klar til publikation\n\nDer er et par tekniske ting du skal forstå ift R pakker:\n\n\nFor at kunne installere visse R pakker på Windows operativ systemer, kræves installation af programmet RTools. Du kan læse mere om RTools på (dette link)[https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html] som inkluderer link til RTools installationsprogrammet og en mere udførlig vejledning.\nBemærk venligst, at der tidligere har været problemer med at installere RTools på SDU computere, det er derfor en god idé at tjekke om den kan installeres via SDU-ITs Software Center.\n\n\n\nR pakker kan være specifikke ift den underliggende R version – når der kommer en ny version af R kan det med andre ord tage lidt tid for pakke-udviklerne at opdatere deres pakker. Det er ikke altid en fordel at bruge den absolut nyeste version af R – specielt ikke hvis du også bruger nogle niché pakker.\n\n\n\nHvis du vil bruge en R pakke skal den både installeres og indlæses før du kan bruge den.\n\nNår du installerer pakken, hentes den ned og gemmes lokalt på din computer.\nNår du indlæser pakker, læser du den ind i computerens hukommelse.\n\nFørst når pakken er indlæst i computerens hukommelse vil dens funktioner være tilgængelig for brug i din kode.\n\n\n\nLangt de fleste pakker du kan tænkes at få brug for er tilgængelige på internettet fra the Comprehensive R Archive Network – CRAN.\nSkal du installere en sådan pakke kan du vælge at gøre det via RStudios grafiske brugerflade eller via en R kommando i konsollen. Umiddelbart vil vi anbefale at bruge konsollen da det kan give nogle nyttige informationer hvis installationen fejler.\n\n\n\n\n\n\nVideo : Installation af R pakker\n\n\n\n\n\n\n\nVideo\nEksempel på installation af en R pakke"
  },
  {
    "objectID": "qmd_installation/installation_rstudio_da.html",
    "href": "qmd_installation/installation_rstudio_da.html",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUAndre\n\n\nInstallér RStudio via SDU ITs Software Center.\n\n\nDu finder RStudio installations programmet til dit styre system på RStudios hjemmeside\n\n\nDer er fire forskellige programmer du kan hente ned til din computer – sørg for at du henter den som hedder RStudio Desktop Open Source License Free. Klik på den blå ‘DOWNLOAD’ knap.\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link: yderst til venstre ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nDu bliver nu præsenteret for flere muligheder programmer – sørg for at vælge det program som passer til dit styresystem (klik på det blå tekst link i kolonnen ‘Download’).\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link i kolonnen ’Download: Windows, MacOS eller Linux.\n\n\nInstallér derpå programmet som vanligt for dit styresystem."
  },
  {
    "objectID": "qmd_installation/installation_rstudio_da.html#hent-og-installer-rstudio",
    "href": "qmd_installation/installation_rstudio_da.html#hent-og-installer-rstudio",
    "title": "RStudio installation",
    "section": "",
    "text": "SDUAndre\n\n\nInstallér RStudio via SDU ITs Software Center.\n\n\nDu finder RStudio installations programmet til dit styre system på RStudios hjemmeside\n\n\nDer er fire forskellige programmer du kan hente ned til din computer – sørg for at du henter den som hedder RStudio Desktop Open Source License Free. Klik på den blå ‘DOWNLOAD’ knap.\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link: yderst til venstre ‘RStudio Desktop Open Source License Free’.\n\n\n\n\n\nDu bliver nu præsenteret for flere muligheder programmer – sørg for at vælge det program som passer til dit styresystem (klik på det blå tekst link i kolonnen ‘Download’).\nIllustration af download link’et fra RStudios hjemmeside:\n\n\n\nDette er en illustration og ikke et aktivt link til download – følg i stedet linket herover.\n\n\n\n\n\n\n\n\nVigtigt\n\n\n\nVælg det rigtige link i kolonnen ’Download: Windows, MacOS eller Linux.\n\n\nInstallér derpå programmet som vanligt for dit styresystem."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_how_da.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_how_da.html",
    "title": "Comments - how to",
    "section": "",
    "text": "1 Hvordan angiver man kommentarer i R kode og Quarto MarkDown\nEn af grund idéerne i R og Quarto MarkDown er at gøre selve koden læselig for mennesker – et koncept der kaldes ‘literal programming’.\nR+Quarto kode er helt sikkert mere læsevenlig end andre klassiske programmeringssprog, men det er usandsynligt at du kan skrive R kode der er fuldstændigt selfforklarende for en menneskelig læser … du får brug for at tilføje kommentarer til din kode så fremtidige læsere (formentligt dig selv!) kan forstå kode.\nR kode\nI R kode, kan du tilføje en kommentar med hashtag #, sådan her:\n# Dette er en enkelt-linje kommentar i R kode\n# ...og det er ikke mulighed for fler-linje kommentarer: Der skal et # før hver kommentar linje\nx &lt;- 2 + 2 # ...men kommentarer sidst på en linje er også okay\nQuarto\n&lt;!-- Dette er en enkelt-linje kommentar i MarkDown --&gt;\n&lt;!--\nDette er en multi-linje\nkommentar i MarkDown\n--&gt;\n..og man kan &lt;!-- indsætte kommentarer --&gt; hvor man vil\n\n\n\n\n\n\nVigtigt! … hashtag # har forskellig betydning i R kode og i MarkDown!\n\n\n\n\n\nSom du har set, bruges # til at tilføje kommentarer i R kode, men i MarkDown bruges # til at definere overskrifter, sådan her:\n---\ntitle: \"Mit Quarto Markdown dokument\"\n---\n\n# Dette er overskrift niveau 1\n\n## Dette er overskrift niveau 2\n\n\n\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nKig på dette grimme og nyttesløse Quarto MarkDown dokument:\n---\ntitle: \"Mit grimme Quarto Markdown dokument\"\nauthor: S. O'Neill\n---\n\n# E &lt;- MC^2\n\ndata &lt;- c(2,4,7,12,4)\n\n&lt;!-- c &lt;- sqrt(a^2 + b^2) --&gt;\n\n# # if (3&gt;2) then print(\"to er for lille\")\n\n```{r my chunk}\n# data &lt;- rsample(1:1000, 100, replace=TRUE)\n&lt;!-- data &lt;- NULL -&gt;&gt;\n\n```\n\n# if (pi &gt; 3) then &lt;!-- print(\"Pi er større end 3\") --&gt;\nDiskutér medfølgende din sidemand, før i kigger på løsningen:\n\nKan i identificere kommentarerne i dokumentet?\nHvordan forventer du out output vil se ud?\n\n\n\n\n\n\n\n\n\n\nØvelse #1 løsning\n\n\n\n\n\nHvis ovenstående havde stået i RStudio, ville du måske have bemærket nogle røde, bølge linjer og et advarsels ikon i margen på linje 16 .\nDet burde fortælle dig, at der er et problem med R koden, og koden vil faktisk ikke fungere – kan du se hvad problemet er? …kig herunder for at få svaret.\n\n\n\n\n\n\nØvelse #1 ..det fulde svar.\n\n\n\n\n\nOkay så. Line 16 var ikke valid R kode. Linjen var faktisk en enkelt-linje markdown kommentar og hører som sådan hjemme i MarkDown og ikke inde i en R kode chunk.\nHvis vi kommenterer linjen væk med et # så har vi en valid R kode og vi får følgende output:\n\n\n\nOBS Engelsk version\n\n\nMed andre ord, kun linjerne 10 og 15 er valide kommentarer.\nBonus spørgsmål: Forklar hvor linje gav det output du ser herover."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_what_da.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_what_da.html",
    "title": "Comments - what to",
    "section": "",
    "text": "Hvilke kommentarer ville være relevante her?\n\nSpørgsmålLøsning\n\n\nKom med forslag til kommentarer til denne kode … tænk ‘hvad’ og ‘hvorfor’\n\n# 1\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# 2\nd &lt;- d %&gt;% filter(id != \"241269-1212\")\n\n# 3\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\nForslag til meningsfyldte kommentarer\n\n# ?? comments necessary ??\nd &lt;- read.csv(\"my_data_file.csv\")\n\n# excluded as participant entered an invalid CPR number\nd &lt;- d %&gt;% filter(id != \"2321369-1212\")\n\n# set 's' to F(emale) or M(ale) depending on odd/even id number in CPR\nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n\n\n\n\n\nHovedpointer\n\nAltid føj kommentarer til din kode\nKommentarer skulle forklare ‘hvorfor’ (din rationale)\nMed god kode, bliver ‘hvordan’ selv-indlysende\n\n..men hvis din kode ikke kan være selv-indlysende: så forklar hvordan den fungerer i kommentarer"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_what_da.html#kommentér-din-kode",
    "href": "qmd_rrr/reproducible_research_basics_comments_what_da.html#kommentér-din-kode",
    "title": "Comments - what to",
    "section": "",
    "text": "Hovedpointer\n\nAltid føj kommentarer til din kode\nKommentarer skulle forklare ‘hvorfor’ (din rationale)\nMed god kode, bliver ‘hvordan’ selv-indlysende\n\n..men hvis din kode ikke kan være selv-indlysende: så forklar hvordan den fungerer i kommentarer"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_comments_where_da.html",
    "href": "qmd_rrr/reproducible_research_basics_comments_where_da.html",
    "title": "Comments - where to",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(DiagrammeR)\n\n\n1 Hvor i din R kode og Quarto dokumenter skal du skrive kommentarer?\n\n\n\n\n\n\nØvelse #1\n\n\n\n\n\nHvad tænker du om disse kommentarer og hvor de er placeret? Vil koden virke?\n\n# this comment definitely okay\nx &lt;- 2 + 2\n\n# ...but is the following okay?\ntibble(x=1:10, y=2:11) %&gt;% # ..is it okay, mid-pipe?\n  filter(y&gt;5 & # and how about breaking in the middle..\n  x != 9) # ..of a statement like 'filter'?\n\n# A tibble: 5 × 2\n      x     y\n  &lt;int&gt; &lt;int&gt;\n1     5     6\n2     6     7\n3     7     8\n4     8     9\n5    10    11\n\n\n\n\n\n\n\n\n\n\n\nØvelse #1 Svar\n\n\n\n\n\nSådan ser output ud fra koden herover:\nFIX THIS !!\n…så koden fungerer sådan set uden fejl - R er relativt tolerant ift hvor du placerer dine kommentarer, men er det god praksis?\nKommentarerne er syntaktisk okay … men de gør det ikke nemmere for mennesker at læse koden. Det blev faktisk unødigt meget sværere. Så kig herunder og se hvordan det kan gøres simplere:\n\n\n\n\n\n\n\n\n\nKeep it simple!\n\n\n\n\n\n\n# Kommentar linjer før koden\n# kan dække flere linjer og\n# vil ikke være forstyrrende\n# når du læser kode ... god praksis!\n\nx &lt;- 2 + 2 # brug kun inline kommentarer sparsomt\ny &lt;- x^2 - c(2, 5, 8, 10:14) # ..de forstyrrer"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_exercises_da.html",
    "href": "qmd_rrr/reproducible_research_basics_exercises_da.html",
    "title": "Thinking about RRR",
    "section": "",
    "text": "Thinking about reproducibility …\n\n\n\n\n\n\n\nHvorfor har alle videnskabelige artikler en metodesektion?\nEr det overhovedet videnskab, hvis det ikke er reproducerbart?\nEr metodesektionen tilstrækkelig?\nHar du hørt om nogen offentligt kendte tilfælde af videnskabelig uredelighed? Hvordan blev det opdaget?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_da.html",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_da.html",
    "title": "Files",
    "section": "",
    "text": "Skal indeholde\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nDine main R scripts\nDine quarto scripts\nRelevante underfolders (/custom_functions, /gfx, /data, etc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTekst filer er altid at foretrække frem for binære filer\nMarkup filer (HTML, XML, etc) kan læses men er komplekse\nProgram filer (.odt, .docx) er som oftest enten binære filer eller meget komplekse markup filer\n\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.xml\n\n\n\nHold dig til simple menneske-læsevenlige filer som R scripts, markdown, csv etc så langt i arbejdsprocessen som muligt. Skift kun til pdf, word, tiff, jpeg etc som sidste trin i processen.\nHvis et tegn ser mrækeligt ud i en simpel tekst fil er det sikkert et problem med karakter-sættet – bare hold dig til UTF8/UTF16.\n\n\nForresten, hvad tror du der sker som det første, når typografen i Springer modtager dig manuskript?\n\n\n\n\n\nHoved pointer\n\nBrug en fil/folder struktur baseret på din egen skabelon\nBrug relative fil stier (here())\nBrug menneske-læsevenlig filformater (txt, md, Rmd, csv, etc)\nBrug kun ikke-menneske-læsevenlig formater som afsluttende output (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_da.html#the-root",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_da.html#the-root",
    "title": "Files",
    "section": "",
    "text": "Skal indeholde\n\nRStudio project (*.RProj)\nREADME.md\nsessionInfo.txt\nDine main R scripts\nDine quarto scripts\nRelevante underfolders (/custom_functions, /gfx, /data, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_da.html#file-typer",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_da.html#file-typer",
    "title": "Files",
    "section": "",
    "text": "Tekst filer er altid at foretrække frem for binære filer\nMarkup filer (HTML, XML, etc) kan læses men er komplekse\nProgram filer (.odt, .docx) er som oftest enten binære filer eller meget komplekse markup filer\n\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.pdf\ngfx/prefer_text_files.xml"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_da.html#fil-typer",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_da.html#fil-typer",
    "title": "Files",
    "section": "",
    "text": "Hold dig til simple menneske-læsevenlige filer som R scripts, markdown, csv etc så langt i arbejdsprocessen som muligt. Skift kun til pdf, word, tiff, jpeg etc som sidste trin i processen.\nHvis et tegn ser mrækeligt ud i en simpel tekst fil er det sikkert et problem med karakter-sættet – bare hold dig til UTF8/UTF16.\n\n\nForresten, hvad tror du der sker som det første, når typografen i Springer modtager dig manuskript?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_file_structure_da.html#filer-og-foldere",
    "href": "qmd_rrr/reproducible_research_basics_file_structure_da.html#filer-og-foldere",
    "title": "Files",
    "section": "",
    "text": "Hoved pointer\n\nBrug en fil/folder struktur baseret på din egen skabelon\nBrug relative fil stier (here())\nBrug menneske-læsevenlig filformater (txt, md, Rmd, csv, etc)\nBrug kun ikke-menneske-læsevenlig formater som afsluttende output (pdf, docx, xlsx, etc)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html",
    "title": "Naming stuff",
    "section": "",
    "text": "Lad variabler, funktion og filers navne være sigende for deres mening.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nKig på koden og foreslå bedre variable navne\n\n\n\n\n\n\nLøsningsforslag\n\n\n\n\n\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")\n\n\n\n\n\n\n\n\n\n\nEt endnu bedre løsningsforslag\n\n\n\n\n\n\ndata &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\n\n\n\nDesværre findes funktionen cpr2sex ikke i hverken basis R eller Tidyverse, men vi kan jo lave den selv:\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nVi kunne så gemme denne funktion i en separat fil og ’source’e den … eller skrive en ny R pakke.\n\n\n\n\n\n\n\n\nBrug under_scores\nBrug ikke camelCase\nBrug ikke kebab-case\n\n\n\n\n\nmake_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)\n\n\n\n\nHovedpointer\n\nNavne skal være meningsbærende\nBrug under_scores, ikke CamelCase, ej heller kebab-case\nFunktionsnavne bør være verber\nVariabelnavne bør være navneord"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#mening-formål",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#mening-formål",
    "title": "Naming stuff",
    "section": "",
    "text": "Lad variabler, funktion og filers navne være sigende for deres mening.\n\n# 1 \nd &lt;- d %&gt;% \n  mutate(s=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \nmData &lt;- d %&gt;% filter(s==\"M\")\n\nKig på koden og foreslå bedre variable navne\n\n\n\n\n\n\nLøsningsforslag\n\n\n\n\n\n\n# 1 \ndata &lt;- data %&gt;% \n  mutate(sex=factor(c(\"M\", \"F\"))[as.numeric(substr(id,nchar(id),nchar(id))) %% 2])\n\n# 2 \ndata_males_only &lt;- data %&gt;% filter(sex==\"M\")\nmales_only_data &lt;- data %&gt;% filter(sex==\"M\")\n\n\n\n\n\n\n\n\n\n\nEt endnu bedre løsningsforslag\n\n\n\n\n\n\ndata &lt;- data %&gt;% \n  mutate(sex=cpr2sex(id))\n\n\n\n\nDesværre findes funktionen cpr2sex ikke i hverken basis R eller Tidyverse, men vi kan jo lave den selv:\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n# Requires a custom function like this -- which could be sourced from file\n\ncpr2sex &lt;- function(x) {\n  # This function takes a string (x), presumed to be a valid Danish CPR\n  # and return \"F\", \"M\" or NA depending on the last character in the string\n  # If the last CPR character is an even number, it indicates female sex, and\n  # an odd number indicates male sex.\n  if (str_sub(x, str_length(x), str_length(x)) %in% c(\"0\",\"2\",\"4\",\"6\",\"8\")) {\n    return(\"F\") \n  } else if (str_sub(x, str_length(x), str_length(x)) %in% c(\"1\",\"3\",\"5\",\"7\",\"9\")) {\n    return(\"M\") \n  } \n  return(NA) # Last character in CPR is not a ciffre\n}\n\nVi kunne så gemme denne funktion i en separat fil og ’source’e den … eller skrive en ny R pakke."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#sammensatte-navne",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#sammensatte-navne",
    "title": "Naming stuff",
    "section": "",
    "text": "Brug under_scores\nBrug ikke camelCase\nBrug ikke kebab-case"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#navneord-og-verber",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#navneord-og-verber",
    "title": "Naming stuff",
    "section": "",
    "text": "make_larger_by_10 &lt;- function(x) {\n  return(x+10)\n}\n\nten_larger &lt;- make_larger_by_10(112)\n\n# For instance:\n# selected_data &lt;- data %&gt;% select(..)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#navne",
    "href": "qmd_rrr/reproducible_research_basics_naming_stuff_da.html#navne",
    "title": "Naming stuff",
    "section": "",
    "text": "Hovedpointer\n\nNavne skal være meningsbærende\nBrug under_scores, ikke CamelCase, ej heller kebab-case\nFunktionsnavne bør være verber\nVariabelnavne bør være navneord"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_readme_da.html",
    "href": "qmd_rrr/reproducible_research_basics_readme_da.html",
    "title": "README.md",
    "section": "",
    "text": "Lav og vedligehold en README.md fil i hvert projekt, på rod niveau (altså øverste folder niveau i projektet)\n\nEn simpel beskrivelse af projektets formål (besvar ‘hvorfor’)\nInvolverede personer\nData kilder mm.\nVigtigste komponenter (data og filer)\n\n\nDet er særligt vigtigt for større og mere komplekse projekter med flere data kilder, flere samarbejdspartnere, etc\n\n\n#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_readme_da.html#readme.md-template",
    "href": "qmd_rrr/reproducible_research_basics_readme_da.html#readme.md-template",
    "title": "README.md",
    "section": "",
    "text": "#| eval: false\n#| echo: true\n# Project title\n\nA subtitle that describes your project, e.g., research question\n\n## Motivation\n\nMotivate your research question or business problem. Clearly explain which problem is solved.\n\n## Method and results\n\nFirst, introduce and motivate your chosen method, and explain how it contributes to solving the research \nquestion/business problem.\n\nSecond, summarize your results concisely. Make use of subheaders where appropriate.\n\n\n## Repository overview\n\nProvide an overview of the directory structure and files, for example:\n\n├── README.md\n├── data\n│   ├── my_data.csv  # raw data from CPR register\n│   ├── exp_data.csv # experimental data register\n├── plots\n│   ├── plot_1.png   # Boxplot of age\n│   ├── plot_2.png   # Pi chart of sex\n│   └── plot_3.png   # Bi-plot age vs measurement X\n├── main.R           # all analyses in one place\n└── manuscript1.Rmd  # for J of RR\n\n## Running instructions\n\nExplain to potential users how to run/replicate your workflow. If necessary, touch upon the required input \ndata, which secret credentials are required (and how to obtain them), which software tools are needed \nto run the workflow (including links to the installation instructions), and how to run the workflow.\n\n## More resources\n\nPoint interested users to any related literature and/or documentation.\n\n## About\n\nExplain who has contributed to the repository."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_basics_white_space_da.html",
    "href": "qmd_rrr/reproducible_research_basics_white_space_da.html",
    "title": "White space",
    "section": "",
    "text": "1 Brug af “white space”\nI MarkDown,\n\nmidt i tekst: multiple mellemrum = et enkelt mellemrum\nsidst i en tekst: mellemrum + ny-linje = ny-linje + tom-linje\n\n\nMarkdownOutputGod praksis\n\n\nKig på denne MarkDown, før du klikke på det næste faneblad…\nI markdown, er der en vigtig forskel\nmellem '_ny-linje_' og '_tom-linje_'.\n\n...\"white space\" er vigtigt.\n\n\n\nKig på output’et fra MarkDown, før du klikker på det sidste faneblad.\nI markdown, er der en vigtig forskel mellem ‘ny-linje’ og ‘tom-linje’.\n…“white space” er vigtigt.\n\n\n\net vilkårligt antal mellemrum mellem ord svarer til et mellemrum\net vilkårligt antal tomme linjer mellem linjer svarer til en tom linje\nbrug et mellemrum til at adskille functioner, operatorer, etc a%&gt;%b vs a %&gt;% b\nbrug en tom-linje (ikke bare ny-linje) til at indikere et nyt afsnit\n\nKlik frem-og-tilbage mellem de første to faneblade og kig nøje på “white space”…\n\n\n\nHint Check : Soft wrap long lines i Code menuen."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_da.html",
    "href": "qmd_rrr/reproducible_research_citations_da.html",
    "title": "RRR – Citing references",
    "section": "",
    "text": "BibTeX er et simpelt tekst format til referencer som kan læses af mennesker\n\nEksport direkte fra PubMED med flere\nEksport fra Zotero, EndNote(?) med flere\n\nEt eksempel på et BibTeX indtog\n@article{graeffInterIndividualDifferencesExplain2021,\n  title = {Inter-{{Individual Differences Explain More Variance}} in {{Conditioned Pain Modulation Than Age}}, {{Sex}} and {{Conditioning Stimulus Intensity Combined}}},\n  author = {Graeff, Philipp and Itter, Alina and Wach, Katharina and Ruscheweyh, Ruth},\n  year = {2021},\n  month = sep,\n  journal = {Brain Sciences},\n  volume = {11},\n  number = {9},\n  pages = {1186},\n  publisher = {{Multidisciplinary Digital Publishing Institute}},\n  issn = {2076-3425},\n  doi = {10.3390/brainsci11091186},\n  abstract = {Conditioned pain modulation (CPM) describes the reduction in pain evoked by a test stimulus (TS) when presented together with a heterotopic painful conditioning stimulus (CS). CPM has been proposed to reflect inter-individual differences in endogenous pain modulation, which may predict susceptibility for acute and chronic pain. Here, we aimed to estimate the relative variance in CPM explained by inter-individual differences compared to age, sex, and CS physical and pain intensity. We constructed linear and mixed effect models on pooled data from 171 participants of several studies, of which 97 had repeated measures. Cross-sectional analyses showed no significant effect of age, sex or CS intensity. Repeated measures analyses revealed a significant effect of CS physical intensity (p = 0.002) but not CS pain intensity (p = 0.159). Variance decomposition showed that inter-individual differences accounted for 24\\% to 34\\% of the variance in CPM while age, sex, and CS intensity together explained {$&lt;$}3\\% to 12\\%. In conclusion, the variance in CPM explained by inter-individual differences largely exceeds that of commonly considered factors such as age, sex and CS intensity. This may explain why predictive capability of these factors has had conflicting results and suggests that future models investigating them should account for inter-individual differences.},\n  copyright = {http://creativecommons.org/licenses/by/3.0/},\n  langid = {english},\n  keywords = {conditioned pain modulation,conditioning stimulus,CPM variability,endogenous analgesia,interindividual factors},\n  file = {/home/soon/Zotero/storage/AJ8W4U2G/Graeff et al. - 2021 - Inter-Individual Differences Explain More Variance.pdf;/home/soon/Zotero/storage/3SYEHU3A/1186.html}\n}\nMen man skal ikke sidde og skrive dem i hånden – de kan downloades direkte fra artiklens online version til Zotero med et enkelt klik i din browser.\n\n\n\nZotero er en open source reference manager – som er velintegreret med Firefox, MS Word og andre programmer.\nGiver mulighed for at dele biblioteker online med dine kolleger.\nAdskillige plugins, bl.a BetterBibTex som … tjaeh, giver bedre bibTeX referencer.\nAlternativer: Mendeley (Elsevier), EndNote, RefManager, etc\n\n\n…afventer video af Zotero library, download, export, etc\n\n\n\nMasser af stil … 10.000+ … fra APA til Ugeskrift for Læger\n…og hvis det er nødvendigt kan du skrive dine egne stil definitioner\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_da.html#bibtex",
    "href": "qmd_rrr/reproducible_research_citations_da.html#bibtex",
    "title": "RRR – Citing references",
    "section": "",
    "text": "BibTeX er et simpelt tekst format til referencer som kan læses af mennesker\n\nEksport direkte fra PubMED med flere\nEksport fra Zotero, EndNote(?) med flere\n\nEt eksempel på et BibTeX indtog\n@article{graeffInterIndividualDifferencesExplain2021,\n  title = {Inter-{{Individual Differences Explain More Variance}} in {{Conditioned Pain Modulation Than Age}}, {{Sex}} and {{Conditioning Stimulus Intensity Combined}}},\n  author = {Graeff, Philipp and Itter, Alina and Wach, Katharina and Ruscheweyh, Ruth},\n  year = {2021},\n  month = sep,\n  journal = {Brain Sciences},\n  volume = {11},\n  number = {9},\n  pages = {1186},\n  publisher = {{Multidisciplinary Digital Publishing Institute}},\n  issn = {2076-3425},\n  doi = {10.3390/brainsci11091186},\n  abstract = {Conditioned pain modulation (CPM) describes the reduction in pain evoked by a test stimulus (TS) when presented together with a heterotopic painful conditioning stimulus (CS). CPM has been proposed to reflect inter-individual differences in endogenous pain modulation, which may predict susceptibility for acute and chronic pain. Here, we aimed to estimate the relative variance in CPM explained by inter-individual differences compared to age, sex, and CS physical and pain intensity. We constructed linear and mixed effect models on pooled data from 171 participants of several studies, of which 97 had repeated measures. Cross-sectional analyses showed no significant effect of age, sex or CS intensity. Repeated measures analyses revealed a significant effect of CS physical intensity (p = 0.002) but not CS pain intensity (p = 0.159). Variance decomposition showed that inter-individual differences accounted for 24\\% to 34\\% of the variance in CPM while age, sex, and CS intensity together explained {$&lt;$}3\\% to 12\\%. In conclusion, the variance in CPM explained by inter-individual differences largely exceeds that of commonly considered factors such as age, sex and CS intensity. This may explain why predictive capability of these factors has had conflicting results and suggests that future models investigating them should account for inter-individual differences.},\n  copyright = {http://creativecommons.org/licenses/by/3.0/},\n  langid = {english},\n  keywords = {conditioned pain modulation,conditioning stimulus,CPM variability,endogenous analgesia,interindividual factors},\n  file = {/home/soon/Zotero/storage/AJ8W4U2G/Graeff et al. - 2021 - Inter-Individual Differences Explain More Variance.pdf;/home/soon/Zotero/storage/3SYEHU3A/1186.html}\n}\nMen man skal ikke sidde og skrive dem i hånden – de kan downloades direkte fra artiklens online version til Zotero med et enkelt klik i din browser."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_citations_da.html#zotero",
    "href": "qmd_rrr/reproducible_research_citations_da.html#zotero",
    "title": "RRR – Citing references",
    "section": "",
    "text": "Zotero er en open source reference manager – som er velintegreret med Firefox, MS Word og andre programmer.\nGiver mulighed for at dele biblioteker online med dine kolleger.\nAdskillige plugins, bl.a BetterBibTex som … tjaeh, giver bedre bibTeX referencer.\nAlternativer: Mendeley (Elsevier), EndNote, RefManager, etc\n\n\n…afventer video af Zotero library, download, export, etc\n\n\n\nMasser af stil … 10.000+ … fra APA til Ugeskrift for Læger\n…og hvis det er nødvendigt kan du skrive dine egne stil definitioner\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_da.html",
    "href": "qmd_rrr/reproducible_research_collaboration_da.html",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Tre scenarier :\n\nDine samarbejdspartnere bruger ikke R økosystemet (buh!)\nDine samarbejdspartnere bruger R økosystemet (juhuu!)\nDu og dine samarbejdspartnere er hardcore nørder (git!)\n\n\n\n\n\nRender dine quarto dokumenter til Word eller OpenDocument fil formater … send dem via email eller brevdue\nSamarbejdspartnerne bruger Track changes i deres foretrukne tekstbehandlingsprogram og … sender det tilbage\nDu overfører relevante ændringer manuelt fra f.eks Word til qmd filen … i næste runde, gentages processen\n\nFordele\n\nSimpelt\nIngen nye værktøjer at lære for dine R-agnostiske kolleger\nAlle kan være med\nAdskillelse af indhold og kommentarer\n\nUlemper\n\nHyppige fejl\nRedundans\nVersionerings mareridt\nFokus på typografi og opsætning\n\n\n\n\n\nSend dem en kopi af dine qmd filer (data filer sov)\nSamarbejdspartnerne redigerer direkte i qmd filerne og … returnerer dem\nDiff de to versioner af qmd filerne og … selektiv sammenfletning\n\n\n\nDer er nogle meget fine programmer som gør det nemt at sammenligne to versioner af den samme tekst (qmd) fil og se _diff_erencerne:\n\nMeld\nBeyond compare\nAraxis merge\nP4Merge\nDeltaWalker\n..og andre\n\nDer er også flere online versioner som f.eks mergely … men du skal nok ikke uploade følsomme informationer.\n\n\n\n\n\n\nShow me Meld in action\n\n\n\n\n\nMeld og andre diff programmer sammenligner forskellige filer og fremhæver forskellene imellem dem, så det er nemt at se ændringerne.\nI dette simple eksempel, bruger vi Meld til at sammenligne to næsten identiske filer, version 1 og 2. Video viser en mindre ændring i en linje, en linje sletning og en linje tiføjelse i version 2 (højre side) i forhold til version 1.\n\n\n\n\nFordele\n\nRelativt let\nNye værktøjer er nemme at lære at kende\nAlle kan være med\nKun én filtype for alle samarbejdspartnere\nFokus på indhold\n\nUlemper\n\nStadig nogen redundans (qmd fil versioner)\nVersionerings mareridt\nKommentarer og ændringer er ikke klart adskilt\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nKopier disse to tekster (en ad gangen) og indsæt dem i hhv højre og venstre felt på denne side\nVersion 1\n\nThis text is almost similar to the other one. But not completely identical.\n\nSome lines are identical.\n\nSome lines have disappeared.\n\nVersion 2\n\nThis text is almost similar to the other one, but not completely identical.\n\nSome lines are identical.\n\nSome lines are brand new\n\n\n\n\n\n\n\n\nBrug et online GIT repositorie som github eller SDUs gitlab server – du skal kontakte IT support for at få en bruger konto.\nFordele\n\nTop klasse reproducible research\nVerdens bedste versionerings system\nIngen redundans og en smuk og ren arbejdsfolder\n\nUlemper\n\nLad os bare indrømmet det – læringskurven kan være lidt stejl :-)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-andre-forskere",
    "href": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-andre-forskere",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Tre scenarier :\n\nDine samarbejdspartnere bruger ikke R økosystemet (buh!)\nDine samarbejdspartnere bruger R økosystemet (juhuu!)\nDu og dine samarbejdspartnere er hardcore nørder (git!)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-r-agnostikere",
    "href": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-r-agnostikere",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Render dine quarto dokumenter til Word eller OpenDocument fil formater … send dem via email eller brevdue\nSamarbejdspartnerne bruger Track changes i deres foretrukne tekstbehandlingsprogram og … sender det tilbage\nDu overfører relevante ændringer manuelt fra f.eks Word til qmd filen … i næste runde, gentages processen\n\nFordele\n\nSimpelt\nIngen nye værktøjer at lære for dine R-agnostiske kolleger\nAlle kan være med\nAdskillelse af indhold og kommentarer\n\nUlemper\n\nHyppige fejl\nRedundans\nVersionerings mareridt\nFokus på typografi og opsætning"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-r-brugere",
    "href": "qmd_rrr/reproducible_research_collaboration_da.html#samarbejde-med-r-brugere",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Send dem en kopi af dine qmd filer (data filer sov)\nSamarbejdspartnerne redigerer direkte i qmd filerne og … returnerer dem\nDiff de to versioner af qmd filerne og … selektiv sammenfletning\n\n\n\nDer er nogle meget fine programmer som gør det nemt at sammenligne to versioner af den samme tekst (qmd) fil og se _diff_erencerne:\n\nMeld\nBeyond compare\nAraxis merge\nP4Merge\nDeltaWalker\n..og andre\n\nDer er også flere online versioner som f.eks mergely … men du skal nok ikke uploade følsomme informationer.\n\n\n\n\n\n\nShow me Meld in action\n\n\n\n\n\nMeld og andre diff programmer sammenligner forskellige filer og fremhæver forskellene imellem dem, så det er nemt at se ændringerne.\nI dette simple eksempel, bruger vi Meld til at sammenligne to næsten identiske filer, version 1 og 2. Video viser en mindre ændring i en linje, en linje sletning og en linje tiføjelse i version 2 (højre side) i forhold til version 1.\n\n\n\n\nFordele\n\nRelativt let\nNye værktøjer er nemme at lære at kende\nAlle kan være med\nKun én filtype for alle samarbejdspartnere\nFokus på indhold\n\nUlemper\n\nStadig nogen redundans (qmd fil versioner)\nVersionerings mareridt\nKommentarer og ændringer er ikke klart adskilt\n\n\n\n\n\n\n\nExercise #1\n\n\n\n\n\nKopier disse to tekster (en ad gangen) og indsæt dem i hhv højre og venstre felt på denne side\nVersion 1\n\nThis text is almost similar to the other one. But not completely identical.\n\nSome lines are identical.\n\nSome lines have disappeared.\n\nVersion 2\n\nThis text is almost similar to the other one, but not completely identical.\n\nSome lines are identical.\n\nSome lines are brand new"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_collaboration_da.html#teknologi-kyndige-samarbejdspartnere",
    "href": "qmd_rrr/reproducible_research_collaboration_da.html#teknologi-kyndige-samarbejdspartnere",
    "title": "RRR – Collaboration",
    "section": "",
    "text": "Brug et online GIT repositorie som github eller SDUs gitlab server – du skal kontakte IT support for at få en bruger konto.\nFordele\n\nTop klasse reproducible research\nVerdens bedste versionerings system\nIngen redundans og en smuk og ren arbejdsfolder\n\nUlemper\n\nLad os bare indrømmet det – læringskurven kan være lidt stejl :-)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_da.html",
    "href": "qmd_rrr/reproducible_research_intro_da.html",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”\n\n\n\n\n\n\nA hjælpe dig selv så du ikke farer vild (eller i det mindste at finde vej igen)\nJuridisk doumentation\nReproducerbarhed (fra start til slut)\nAnvendelighed (forskellige outputs)\nGenbrug (reformater til andre formål)\n\n\n\n\n\n\n\n\n\n\nSigt efter niveau fire ‘Dokumentation af produkt’ (**) – Niveau 5 ‘Dokumentation af processen’ kan blive lidt kompliceret og er nok mest relevant hvis der er mange samarbejdende forfattere på samme kode (..og der er vigtigt at kunne identificere hvem der gjorde hvad, hvornår)."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_da.html#hvad-er-det",
    "href": "qmd_rrr/reproducible_research_intro_da.html#hvad-er-det",
    "title": "Intro to RRR",
    "section": "",
    "text": "“Facilitate easy and accurate reproducibility of all steps of research: Results, process and comprehension – from raw data to finished output”"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_da.html#hvorfor",
    "href": "qmd_rrr/reproducible_research_intro_da.html#hvorfor",
    "title": "Intro to RRR",
    "section": "",
    "text": "A hjælpe dig selv så du ikke farer vild (eller i det mindste at finde vej igen)\nJuridisk doumentation\nReproducerbarhed (fra start til slut)\nAnvendelighed (forskellige outputs)\nGenbrug (reformater til andre formål)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_intro_da.html#niveauer-af-research-reproducibility",
    "href": "qmd_rrr/reproducible_research_intro_da.html#niveauer-af-research-reproducibility",
    "title": "Intro to RRR",
    "section": "",
    "text": "Sigt efter niveau fire ‘Dokumentation af produkt’ (**) – Niveau 5 ‘Dokumentation af processen’ kan blive lidt kompliceret og er nok mest relevant hvis der er mange samarbejdende forfattere på samme kode (..og der er vigtigt at kunne identificere hvem der gjorde hvad, hvornår)."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html",
    "title": "Reproducible research with R – workflow #2",
    "section": "",
    "text": "Exercise #1\n\n\n\n\n\n\n\n\nDownload this zip file which contains an R project\nUnzip the file in an appropriate folder\nCreate a new R-project in that existing folder\n\n\n\n\nFor now don’t change anything and don’t get bogged down in all the details of the code in each file … just get an overview, see if you can understand the code and how it ties together.\nThis exercise is best done in pairs.\n\nWhat is the project all about?\nWhat do the individual files do?\nHow are the files related to each other?\n\n\n\n\n\n\n\nLet’s try to:\n\nKnit a manuscript to html or work or pdf"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#example-project",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#example-project",
    "title": "Reproducible research with R – workflow #2",
    "section": "",
    "text": "Download this zip file which contains an R project\nUnzip the file in an appropriate folder\nCreate a new R-project in that existing folder"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#examine-the-project-files",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#examine-the-project-files",
    "title": "Reproducible research with R – workflow #2",
    "section": "",
    "text": "For now don’t change anything and don’t get bogged down in all the details of the code in each file … just get an overview, see if you can understand the code and how it ties together.\nThis exercise is best done in pairs.\n\nWhat is the project all about?\nWhat do the individual files do?\nHow are the files related to each other?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#overview-of-the-project",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#overview-of-the-project",
    "title": "Reproducible research with R – workflow #2",
    "section": "",
    "text": "Let’s try to:\n\nKnit a manuscript to html or work or pdf"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#a-simple-problem",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#a-simple-problem",
    "title": "Reproducible research with R – workflow #2",
    "section": "2.1 A simple problem",
    "text": "2.1 A simple problem\n\nThe data for participant with ID=7 was corrupted (equipment failure)\n\nWhat to do?\nHow to do it?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#another-simple-problem",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#another-simple-problem",
    "title": "Reproducible research with R – workflow #2",
    "section": "2.2 Another simple problem",
    "text": "2.2 Another simple problem\nThe manuscript you are submitting to have some specific requirements:\n\nTables should be included in text close to first reference\nFigure should be included in a section ‘Figures’ (just before References) and a placeholder &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; where it is referenced.\n\nHow would you change the code?"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#bibtex-csl-zotero-and-friends",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#bibtex-csl-zotero-and-friends",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.1 BibTeX, csl, zotero and friends",
    "text": "3.1 BibTeX, csl, zotero and friends"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#bibtex",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#bibtex",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.2 BibTeX",
    "text": "3.2 BibTeX\nA simple human readable text file format for references\n\nExport directly from PubMED and others\nExport from Zotero, EndNote(?) and others"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.3 Zotero",
    "text": "3.3 Zotero\nAn open source, free reference manager – well integrated with firefox.\nAllows for shared libraries.\nPlugin BetterBibTex for … well, better bibTeX.\nAlternatives: Mendeley (Elsevier), EndNote, RefManager, etc"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero-1",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero-1",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.4 Zotero",
    "text": "3.4 Zotero\n\n3.4.1 Let me demonstrate…\n\nhow to find a new reference\ninclude it in zoteros library\nautomatically update bibTeX file (per project)\ncite in Rmd file"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero-got-style",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#zotero-got-style",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.5 Zotero got style!",
    "text": "3.5 Zotero got style!\nLoads of styles … 10.000+ … from APA to Ugeskrift for Læger\n…and you can write your own if need be.\nhttps://www.zotero.org/styles"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#exercise",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#exercise",
    "title": "Reproducible research with R – workflow #2",
    "section": "3.6 Exercise",
    "text": "3.6 Exercise\n(without Zotero)\n\nYou have decided to include an extra citation in the main_v1.qmd file\n\nGo to scholar.google.com\nSearch for ‘What low back pain is and why we need to pay attention’\nGo to science direct and click ‘Cite’ to get bibtex\nCopy bibtex content to your reference file\nCopy the BibTeX identifier and insert it as a citation\nRe-render your document"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-other-researchers",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-other-researchers",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.1 Collaborating with other researchers",
    "text": "4.1 Collaborating with other researchers\nThree scenarios :\n\nYour collaborators do not use the R ecosystem (booh!)\nYour collaborators use the R ecosystem (woohoo!)\nYou and your collaborators are hardcore nerds (git!)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-agnostic-colleagues",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-agnostic-colleagues",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.2 Collaborating with R-agnostic colleagues",
    "text": "4.2 Collaborating with R-agnostic colleagues\n\nKnit your R-markdown code into a Word or OpenDocument file … send it\nCollaborators can use Track changes in wordprocessor and … return it\nManually transfer changes back to Rmd … start over again\n\nBenefits\n\nSimple\nNo new tools to learn (?)\nAnyone can join in (?)\nSeparation of comments and revisions"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-agnostic-colleagues-1",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-agnostic-colleagues-1",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.3 Collaborating with R-agnostic colleagues",
    "text": "4.3 Collaborating with R-agnostic colleagues\n\nKnit your R-markdown code into a Word or OpenDocument file … send it\nCollaborators can use Track changes in wordprocessor and … return it\nManually transfer changes back to Rmd … start over again\n\nDrawbacks\n\nError prone\nRedundancy\nMessy versioning nightmare\nFocus shifts towards typesetting / presentation"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.4 Collaborating with R users – the simple way",
    "text": "4.4 Collaborating with R users – the simple way\n\nGet your Rmd files and … send it\nCollaborators edit the Rmd directly and … return it\nDiff the two version of the Rmd file and … merge them selectively"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#diffing-two-or-more-text-files",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#diffing-two-or-more-text-files",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.5 Diff’ing two (or more) text files",
    "text": "4.5 Diff’ing two (or more) text files\n\nMeld\nBeyond compare\nAraxis merge\nP4Merge\nDeltaWalker\n(RStudio)\n..and others\n\nThere are also several online version .. e.g. https://editor.mergely.com/\n…you probably should not upload sensitive information though."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way-1",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way-1",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.6 Collaborating with R users – the simple way",
    "text": "4.6 Collaborating with R users – the simple way\n\nGet your Rmd files and … send it\nCollaborators edit the Rmd directly and … return it\nDiff the two version of the Rmd file and … merge them selectively\n\nBenefits\n\nRelatively simple\nNew tools are easy learn\nAnyone can join in\nOnly one file type – no knitting\nFocus remains on content"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way-2",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-r-users-the-simple-way-2",
    "title": "Reproducible research with R – workflow #2",
    "section": "4.7 Collaborating with R users – the simple way",
    "text": "4.7 Collaborating with R users – the simple way\n\nGet your Rmd files and … send it\nCollaborators edit the Rmd directly and … return it\nDiff the two version of the Rmd file and … merge them selectively\n\nDrawback\n\nStill some redundancy (Rmd file versions)\nMessy versioning nightmare\nComments and revisions are not clearly separated"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-tech-savvy-nerds",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#collaborating-with-tech-savvy-nerds",
    "title": "Reproducible research with R – workflow #2",
    "section": "5.1 Collaborating with tech savvy nerds",
    "text": "5.1 Collaborating with tech savvy nerds\n…enter GIT and renv"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#r-package-renv",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#r-package-renv",
    "title": "Reproducible research with R – workflow #2",
    "section": "5.2 R package renv",
    "text": "5.2 R package renv\nNot very difficult at all.\n\n\nMaintains a library of R packages along with r code\nUpdates to R and packages does not break your project\nPermits you to come back in 5 years and re-execute your code\n\n\nhttps://rstudio.github.io/renv/articles/renv.html"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#git",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#git",
    "title": "Reproducible research with R – workflow #2",
    "section": "5.3 GIT",
    "text": "5.3 GIT\nIt is a bit difficult.\n\n\nInstead of storing multiple versions of the same file …\n..it stores just the one file, and a (hidden) version-history\nChanges are handled by Diff’ing versions\n\n\n\n\nAll changes (process) are documented\nAll changes (process) are reversible\nProjects are forkable and mergable\n\n\n\n\nindispensable for LARGE projects\nGIT is a separate program, supported by RStudio."
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#summary-1",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#summary-1",
    "title": "Reproducible research with R – workflow #2",
    "section": "6.1 Summary",
    "text": "6.1 Summary\n\nComment your code\nComment your project\nMeaningful names\nStructured files/folders\nHuman readable files\nSCRIPTED AUTOMATION !!\nSplit the process into ‘chunks’ (data / analyses / output)\nSplit the code into files\nSplit the code-in-files into chunks"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#later-in-your-r-journey",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#later-in-your-r-journey",
    "title": "Reproducible research with R – workflow #2",
    "section": "6.2 Later in your R journey:",
    "text": "6.2 Later in your R journey:\n\nAccessing databases directly (RedCAP, ao)\nCreating interactive websitesand documents\nMaking graphs come alive with animations\nLive data analyses dashboards\n..and much much more (it can even order pizza)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_supporting_apps_en.html#getting-help",
    "href": "qmd_rrr/reproducible_research_supporting_apps_en.html#getting-help",
    "title": "Reproducible research with R – workflow #2",
    "section": "6.3 Getting help",
    "text": "6.3 Getting help\n\nGoogle\nStackoverflow\nStackoverflow – R4PHD"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_1_en.html",
    "href": "qmd_rrr/reproducible_research_workflow_1_en.html",
    "title": "RRR – Workflow #1",
    "section": "",
    "text": "1 Reproducible Research\nLet’s say you have noticed a wrong entry in your data set … in invalid CPR number. You might decide to delete the observation from your data like this:\n\ndata &lt;- read.csv(\"my_data_file.csv\")\n# excluded as participant entered an invalid CPR number\ndata &lt;- data %&gt;% filter(id != \"2321369-1212\")\n\n…but why not just delete that observation from the csv file?\n\n\n\n\n\n\nReproducible Research\n\n\n\n\n\nThe principles of Reproducible Research admonish you that the entire process from raw data to output should be:\n\nscripted\nreproducible\nreversible\n\nWhat happens when at 6 months later, someone notices that you downloaded 106 rows of data from RedCap, but your manuscript reports n=105? Do you think you’ll remember then?\nOr for a more dramatic example, look at this youtube video  when you have the time (~20 minutes)"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_2_en.html",
    "href": "qmd_rrr/reproducible_research_workflow_2_en.html",
    "title": "RRR – Structuring your project",
    "section": "",
    "text": "Download this RRR example project\nUnzip the file in a new folder somewhere appropriate\nIn RStudio, create a new R-project and choose that as existing directory\n\n\n\n\n\n\n\nShow me how\n\n\n\n\n\n\n\n\n\nThese exercises are best done in pairs.\n\n\n\n\n\n\nExercise #1 – Examine the project files\n\n\n\n\n\nFor now don’t change anything and don’t get bogged down in all the details of the code in each file … just get an overview, see if you can understand the code and how the different files tie together to make a structured project.\n\nWhat is the project all about?\nWhat do the individual files do?\nHow are the files related to each other?\n\n\n\n\n\n\n\n\n\n\nExercise #2 – What does the project generate?\n\n\n\n\n\nLet’s try to:\n\nKnit a manuscript to html or word or pdf\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nLook to the YAML of the main qmd document\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #3 – A simple problem\n\n\n\n\n\nThe data for participant with ID=7 was corrupted (equipment failure).\nHow did the author fix that problem?\n\n\n\n\n\n\nHint\n\n\n\n\n\nIt would be good Reproducible Research practice to fix that problem as part of the data cleaning and wrangling, rather than editing the raw data file.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #4 – Fixing cross references\n\n\n\n\n\nThe author did not pay attention to the Instructions for Authors for this particular journal and placed figures immediately after the first mention/reference.\nIn fact:\n\nTables should be included in text close to first reference\nFigure should be included in a section ‘Figures’ (just before References) and a placeholder &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; closely after where it is first referenced.\n\nHow would you change the code?\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe chunk ‘figure_distribution_by_probe_and session’ in ‘main_v1.qmd’ can be left where it is and the chunk ‘show_fig’ can be moved further down the manuscript, under a new heading # Figures, just before the # References section.\nThe &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; should be written as markdown &lt;&lt;FIGURE @fig-distribution-by-probe-and-session ABOUT HERE&gt;&gt; in a separate line following the first cross reference (“We presented a boxplot…”). That would actually be parsed into &lt;&lt;FIGURE 1 ABOUT HERE&gt;&gt;.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #5 – Figure parameters\n\n\n\n\n\nThe journal editors complain that the figure you provided is not formatted as per journal requirements.\nThe want the file uploaded:\n\nin tiff format\n2 inches wide\n1.5 inches heigh\nin a 600 dpi resolution\n\nHow would you fix that problem and where would you go to find the output file?\nHow would you produce a second file of the same plot for a poster – this time in 6 inches by 6 inches?\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe plot is defined in the chunk called ‘figure_distribution_by_probe_and session’.\nYou will find all the relevant parameters are defined in the ggsave function.\nDo not rely on the output in the viewer pane to inspect your figure – instead inspect the file that is save in the folder ‘plots’.\nIf you wanted to save the plot twice in different sizes, perhaps just run the ggsave command twice with different parameters?\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #6 – One more citation\n\n\n\n\n\nYou have been asked to cite the publication “Swearing as a Response to Pain: Assessing Hypoalgesic Effects of Novel “Swear” Words” by Richard Stephens and Olly Robertson (Frontiers in Psychology).\nHow might you do that? Look for inspiration in main_v1.qmd and the reference list.\n\n\n\n\n\n\nHint\n\n\n\n\n\nOn the web page of Fronties in Psychology you will find a link in the right hand side called ‘Export citation’, which allows you to download the reference as BibTeX.\nLook inside the downloaded file and compare it to the content of references.bib\nCopy/paste…\nEach reference is identified by a unique id in the BibTeX definition .. can you see how it is defined and how it is referenced in the quarto document?\nTry to give the new reference another id and use that in the main_v1.qmd file to cite the paper by Stephens and Robertson.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #7 – That journal as a Pain, anyway!\n\n\n\n\n\nDOH! After all these adjustments, the Editor rejected your paper anyway. That journal really was a ‘Pain’ in the backside.\nSo now you need to format your manuscript for another journal and you need to reformat the citation and bibliography style.\nAs hinted above, the journal you are currently styled for is ‘Pain’.\n\nFind out how your current citation/bibliography style is defined and which file(s) are involved.\nPick another journal – just anyone you know.\nGo online and find a new style definition for that journal – google is your friend and so is Zotero!\nNow fix your citation formatting.\n\n\n\n\n\n\n\nHints\n\n\n\n\n\n\nThe citation style is defined in the YAML of the ‘main_v1.qmd’ file – specifically by csl: pain.csl (the line bibliography: references.bib defines the BibTeX file where references are stored, but not the citation style)\nYou can find a plethora of Citation Style Language (.csl) files for download at the ‘Zotero style repository’ – search and you shall find – then download into the project folder.\nChange your YAML csl: definition to the new file name and re-render your quarto document\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #8 – Collaboration\n\n\n\n\n\nYour main collaborator, Dr. Jekyll has revised the first version of the manuscript, some time ago. Being an evil genius, Dr. Jekyll also uses R and he dropped of the revised qmd file for you here.\nDownload Dr. Jekylls revised version and compare it to your own. To do this you may avail yourself of diff’ing the files … look at the notes here on r4phd on RRR – Collaboration (with R users) for help.\nBe critical what you accept and what you reject – Dr. Jekylls revision is based on an older version of your manuscript.\n\n\n\n\n\n\nHint\n\n\n\n\n\nYou can use an online diff app like this one … or you can choose to install an app on your computer.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #9 – Word template\n\n\n\n\n\nThe new journal you are submitting to insists that any level 1 heading should by styled as bold and in a fancy color of your own choosing.\nThey also insist you submit in Microsoft Word format.\nFirst do this:\n\nIn the YAML of main_v1.qmd change format: html to format: docx\nRender the document to create a MS Word docx file as output\nRename that document from main_v1.docx to my_word_template.docx\n\nNow change the same YAML line again from format: docx to this:\n\nformat: \n  docx:\n    reference-doc: my_word_template.docx\n\nNote that the text must be exactly like that – newlines and spacing matters!\nNow do this:\n\nRender your qmd script again to produce a new main_v1.docx file\nInspect that file (open it in Word or LibreOffice) – pay particular attention to the style of level 1 headings like Background.\nClose main_v1.docx again and open my_word_template.docx instead\nNow check to see which style heading Background is (probably ‘Heading 1’ or similar) and edit the style of that typography using the style editor. It is not sufficient to edit the appearance of the Background heading – you must edit the style that is associated with the typography.\nSave my_word_template.docx after you have made the changes\nRender a new version of main_v1.qmd and see whether the style changes have taken effect.\n\nNow play around with some of the other styles that are applied to headings, main text, figure captions, etc.\nRemember to change the styles in the my_word_template.docx using the style editor before re-rendering the qmd file.\n\n\n\n\n\n\n\n\n\nBonus – Check out the folder ‘Presentations’\n\n\n\n\n\n\nConsidering that figures and tables, and summary statistics etc defined and used in the file ‘main_v1.qmd’, but also saved to separate files, you should be able to re-used them for other purposes, e.g. a presentation.\nLook at the static presentation qmd and html files – you should also know, that such qmd presentations can be exported to pdf, LibreOffice Impress and Microsoft Power Point files as well.\nThe dynamic presentation is not completed yet, but go google to see what that might be…"
  },
  {
    "objectID": "qmd_rrr/reproducible_research_workflow_2_en.html#example-project",
    "href": "qmd_rrr/reproducible_research_workflow_2_en.html#example-project",
    "title": "RRR – Structuring your project",
    "section": "",
    "text": "Download this RRR example project\nUnzip the file in a new folder somewhere appropriate\nIn RStudio, create a new R-project and choose that as existing directory\n\n\n\n\n\n\n\nShow me how\n\n\n\n\n\n\n\n\n\nThese exercises are best done in pairs.\n\n\n\n\n\n\nExercise #1 – Examine the project files\n\n\n\n\n\nFor now don’t change anything and don’t get bogged down in all the details of the code in each file … just get an overview, see if you can understand the code and how the different files tie together to make a structured project.\n\nWhat is the project all about?\nWhat do the individual files do?\nHow are the files related to each other?\n\n\n\n\n\n\n\n\n\n\nExercise #2 – What does the project generate?\n\n\n\n\n\nLet’s try to:\n\nKnit a manuscript to html or word or pdf\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nLook to the YAML of the main qmd document\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #3 – A simple problem\n\n\n\n\n\nThe data for participant with ID=7 was corrupted (equipment failure).\nHow did the author fix that problem?\n\n\n\n\n\n\nHint\n\n\n\n\n\nIt would be good Reproducible Research practice to fix that problem as part of the data cleaning and wrangling, rather than editing the raw data file.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #4 – Fixing cross references\n\n\n\n\n\nThe author did not pay attention to the Instructions for Authors for this particular journal and placed figures immediately after the first mention/reference.\nIn fact:\n\nTables should be included in text close to first reference\nFigure should be included in a section ‘Figures’ (just before References) and a placeholder &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; closely after where it is first referenced.\n\nHow would you change the code?\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe chunk ‘figure_distribution_by_probe_and session’ in ‘main_v1.qmd’ can be left where it is and the chunk ‘show_fig’ can be moved further down the manuscript, under a new heading # Figures, just before the # References section.\nThe &lt;&lt;FIGURE X ABOUT HERE&gt;&gt; should be written as markdown &lt;&lt;FIGURE @fig-distribution-by-probe-and-session ABOUT HERE&gt;&gt; in a separate line following the first cross reference (“We presented a boxplot…”). That would actually be parsed into &lt;&lt;FIGURE 1 ABOUT HERE&gt;&gt;.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #5 – Figure parameters\n\n\n\n\n\nThe journal editors complain that the figure you provided is not formatted as per journal requirements.\nThe want the file uploaded:\n\nin tiff format\n2 inches wide\n1.5 inches heigh\nin a 600 dpi resolution\n\nHow would you fix that problem and where would you go to find the output file?\nHow would you produce a second file of the same plot for a poster – this time in 6 inches by 6 inches?\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe plot is defined in the chunk called ‘figure_distribution_by_probe_and session’.\nYou will find all the relevant parameters are defined in the ggsave function.\nDo not rely on the output in the viewer pane to inspect your figure – instead inspect the file that is save in the folder ‘plots’.\nIf you wanted to save the plot twice in different sizes, perhaps just run the ggsave command twice with different parameters?\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #6 – One more citation\n\n\n\n\n\nYou have been asked to cite the publication “Swearing as a Response to Pain: Assessing Hypoalgesic Effects of Novel “Swear” Words” by Richard Stephens and Olly Robertson (Frontiers in Psychology).\nHow might you do that? Look for inspiration in main_v1.qmd and the reference list.\n\n\n\n\n\n\nHint\n\n\n\n\n\nOn the web page of Fronties in Psychology you will find a link in the right hand side called ‘Export citation’, which allows you to download the reference as BibTeX.\nLook inside the downloaded file and compare it to the content of references.bib\nCopy/paste…\nEach reference is identified by a unique id in the BibTeX definition .. can you see how it is defined and how it is referenced in the quarto document?\nTry to give the new reference another id and use that in the main_v1.qmd file to cite the paper by Stephens and Robertson.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #7 – That journal as a Pain, anyway!\n\n\n\n\n\nDOH! After all these adjustments, the Editor rejected your paper anyway. That journal really was a ‘Pain’ in the backside.\nSo now you need to format your manuscript for another journal and you need to reformat the citation and bibliography style.\nAs hinted above, the journal you are currently styled for is ‘Pain’.\n\nFind out how your current citation/bibliography style is defined and which file(s) are involved.\nPick another journal – just anyone you know.\nGo online and find a new style definition for that journal – google is your friend and so is Zotero!\nNow fix your citation formatting.\n\n\n\n\n\n\n\nHints\n\n\n\n\n\n\nThe citation style is defined in the YAML of the ‘main_v1.qmd’ file – specifically by csl: pain.csl (the line bibliography: references.bib defines the BibTeX file where references are stored, but not the citation style)\nYou can find a plethora of Citation Style Language (.csl) files for download at the ‘Zotero style repository’ – search and you shall find – then download into the project folder.\nChange your YAML csl: definition to the new file name and re-render your quarto document\n\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #8 – Collaboration\n\n\n\n\n\nYour main collaborator, Dr. Jekyll has revised the first version of the manuscript, some time ago. Being an evil genius, Dr. Jekyll also uses R and he dropped of the revised qmd file for you here.\nDownload Dr. Jekylls revised version and compare it to your own. To do this you may avail yourself of diff’ing the files … look at the notes here on r4phd on RRR – Collaboration (with R users) for help.\nBe critical what you accept and what you reject – Dr. Jekylls revision is based on an older version of your manuscript.\n\n\n\n\n\n\nHint\n\n\n\n\n\nYou can use an online diff app like this one … or you can choose to install an app on your computer.\n\n\n\n\n\n\n\n\n\n\n\n\nExercise #9 – Word template\n\n\n\n\n\nThe new journal you are submitting to insists that any level 1 heading should by styled as bold and in a fancy color of your own choosing.\nThey also insist you submit in Microsoft Word format.\nFirst do this:\n\nIn the YAML of main_v1.qmd change format: html to format: docx\nRender the document to create a MS Word docx file as output\nRename that document from main_v1.docx to my_word_template.docx\n\nNow change the same YAML line again from format: docx to this:\n\nformat: \n  docx:\n    reference-doc: my_word_template.docx\n\nNote that the text must be exactly like that – newlines and spacing matters!\nNow do this:\n\nRender your qmd script again to produce a new main_v1.docx file\nInspect that file (open it in Word or LibreOffice) – pay particular attention to the style of level 1 headings like Background.\nClose main_v1.docx again and open my_word_template.docx instead\nNow check to see which style heading Background is (probably ‘Heading 1’ or similar) and edit the style of that typography using the style editor. It is not sufficient to edit the appearance of the Background heading – you must edit the style that is associated with the typography.\nSave my_word_template.docx after you have made the changes\nRender a new version of main_v1.qmd and see whether the style changes have taken effect.\n\nNow play around with some of the other styles that are applied to headings, main text, figure captions, etc.\nRemember to change the styles in the my_word_template.docx using the style editor before re-rendering the qmd file.\n\n\n\n\n\n\n\n\n\nBonus – Check out the folder ‘Presentations’\n\n\n\n\n\n\nConsidering that figures and tables, and summary statistics etc defined and used in the file ‘main_v1.qmd’, but also saved to separate files, you should be able to re-used them for other purposes, e.g. a presentation.\nLook at the static presentation qmd and html files – you should also know, that such qmd presentations can be exported to pdf, LibreOffice Impress and Microsoft Power Point files as well.\nThe dynamic presentation is not completed yet, but go google to see what that might be…"
  }
]